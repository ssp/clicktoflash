/*
 *     Generated by class-dump 3.3.1 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

#pragma mark Named Structures

struct AnimationController {
    struct AnimationControllerPrivate *m_data;
};

struct AnimationControllerPrivate;

struct ApplicationCache;

struct ApplicationCacheGroup;

struct ArchiveResource {
    void **_field1;
    int _field2;
    struct KURL _field3;
    struct ResourceResponse _field4;
    struct RefPtr<WebCore::SharedBuffer> _field5;
    struct String _field6;
    struct String _field7;
    struct String _field8;
    _Bool _field9;
};

struct ArchiveResourceCollection;

struct AtomicString {
    struct String m_string;
};

struct BackForwardList;

struct CGContext;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CSSMutableStyleDeclaration;

struct CSSStyleDeclaration {
    void **_field1;
    int _field2;
    struct StyleBase *_field3;
};

struct CString {
    struct RefPtr<WebCore::CStringBuffer> _field1;
};

struct CStringBuffer;

struct CachedResource;

struct CachedResourceHandleBase;

struct Chrome;

struct Color {
    unsigned int _field1;
    _Bool _field2;
};

struct Command {
    struct RefPtr<WebCore::Frame> _field1;
    struct EditorInternalCommand *_field2;
    int _field3;
};

struct CompositeEditCommand;

struct CompositionUnderline;

struct ConsoleMessage;

struct ContextMenuController;

struct DOMWindow;

struct Debugger;

struct DebuggerCallFrame {
    struct ExecState *_field1;
    struct JSValue _field2;
};

struct DeleteButtonController;

struct DocLoader;

struct DocPtr<WebCore::Document> {
    struct Document *_field1;
};

struct Document;

struct DocumentLoader {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct Frame *_field4;
    struct RefPtr<WebCore::MainResourceLoader> _field5;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field6;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field7;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field8;
    struct RefPtr<WebCore::SharedBuffer> _field9;
    struct ResourceRequest _field10;
    struct SubstituteData _field11;
    struct ResourceRequest _field12;
    struct ResourceRequest _field13;
    struct ResourceResponse _field14;
    struct ResourceError _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    struct String _field23;
    struct String _field24;
    struct NavigationAction _field25;
    struct ResourceRequest _field26;
    struct Vector<WebCore::ResourceResponse, 0ul> _field27;
    _Bool _field28;
    struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>> _field29;
    struct Timer<WebCore::DocumentLoader> {
        void **_field1;
        double _field2;
        double _field3;
        int _field4;
        unsigned int _field5;
        struct DocumentLoader *_field6;
        CDStruct_d65495c1 _field7;
    } _field30;
    struct OwnPtr<WebCore::ArchiveResourceCollection> _field31;
    struct RefPtr<WebCore::SharedBuffer> _field32;
    struct HashSet<WebCore::String, WebCore::StringHash, WTF::HashTraits<WebCore::String>> _field33;
    struct Vector<WebCore::String, 0ul> _field34;
    struct String _field35;
    _Bool _field36;
    struct RefPtr<WebCore::ApplicationCache> _field37;
    struct ApplicationCacheGroup *_field38;
    struct RefPtr<WebCore::ApplicationCache> _field39;
};

struct DragController;

struct EditCommand {
    void **_field1;
    int _field2;
    struct RefPtr<WebCore::Document> _field3;
    struct VisibleSelection _field4;
    struct VisibleSelection _field5;
    struct RefPtr<WebCore::Element> _field6;
    struct RefPtr<WebCore::Element> _field7;
    struct CompositeEditCommand *_field8;
};

struct Editor {
    struct Frame *m_frame;
    struct OwnPtr<WebCore::DeleteButtonController> m_deleteButtonController;
    struct RefPtr<WebCore::EditCommand> m_lastEditCommand;
    struct RefPtr<WebCore::Node> m_removedAnchor;
    struct RefPtr<WebCore::Text> m_compositionNode;
    unsigned int m_compositionStart;
    unsigned int m_compositionEnd;
    struct Vector<WebCore::CompositionUnderline, 0ul> m_customCompositionUnderlines;
    _Bool m_ignoreCompositionSelectionChange;
    _Bool m_shouldStartNewKillRingSequence;
    _Bool m_shouldStyleWithCSS;
};

struct EditorClient;

struct EditorInternalCommand;

struct Element;

struct Event;

struct EventTarget;

struct ExecState;

struct FileChooser {
    int _field1;
    struct FileChooserClient *_field2;
    struct Vector<WebCore::String, 0ul> _field3;
    struct RefPtr<WebCore::Icon> _field4;
};

struct FileChooserClient;

struct FocusController;

struct FormData;

struct FormState;

struct FrameLoaderClient;

struct FrameTree {
    struct Frame *m_thisFrame;
    struct Frame *m_parent;
    struct AtomicString m_name;
    struct RefPtr<WebCore::Frame> m_nextSibling;
    struct Frame *m_previousSibling;
    struct RefPtr<WebCore::Frame> m_firstChild;
    struct Frame *m_lastChild;
    unsigned int m_childCount;
};

struct FrameView {
    void **_field1;
    int _field2;
    struct ScrollView *_field3;
    id _field4;
    _Bool _field5;
    _Bool _field6;
    struct IntRect _field7;
    struct WidgetPrivate *_field8;
    void **_field9;
    struct RefPtr<WebCore::Scrollbar> _field10;
    struct RefPtr<WebCore::Scrollbar> _field11;
    int _field12;
    int _field13;
    _Bool _field14;
    struct HashSet<WTF::RefPtr<WebCore::Widget>, WTF::PtrHash<WTF::RefPtr<WebCore::Widget>>, WTF::HashTraits<WTF::RefPtr<WebCore::Widget>>> _field15;
    _Bool _field16;
    struct IntSize _field17;
    struct IntSize _field18;
    struct IntSize _field19;
    int _field20;
    _Bool _field21;
    _Bool _field22;
    unsigned int _field23;
    struct IntPoint _field24;
    _Bool _field25;
    _Bool _field26;
    struct IntSize _field27;
    struct IntSize _field28;
    struct OwnPtr<WTF::HashSet<WebCore::RenderPartObject*, WTF::PtrHash<WebCore::RenderPartObject*>, WTF::HashTraits<WebCore::RenderPartObject*>>> _field29;
    struct RefPtr<WebCore::Frame> _field30;
    _Bool _field31;
    int _field32;
    int _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    unsigned int _field37;
    int _field38;
    int _field39;
    struct Timer<WebCore::FrameView> _field40;
    _Bool _field41;
    struct RenderObject *_field42;
    _Bool _field43;
    _Bool _field44;
    int _field45;
    unsigned int _field46;
    struct Timer<WebCore::FrameView> _field47;
    _Bool _field48;
    _Bool _field49;
    _Bool _field50;
    _Bool _field51;
    struct Color _field52;
    struct IntSize _field53;
    float _field54;
    struct String _field55;
    unsigned int _field56;
    struct Vector<WebCore::ScheduledEvent*, 0ul> _field57;
    _Bool _field58;
    _Bool _field59;
    _Bool _field60;
    struct RenderObject *_field61;
    _Bool _field62;
    _Bool _field63;
    unsigned int _field64;
    unsigned int _field65;
    struct Vector<WebCore::IntRect, 0ul> _field66;
    struct Timer<WebCore::FrameView> _field67;
    double _field68;
    double _field69;
    _Bool _field70;
    unsigned int _field71;
    _Bool _field72;
    struct RefPtr<WebCore::Node> _field73;
    int _field74;
    _Bool _field75;
    _Bool _field76;
    _Bool _field77;
    struct RefPtr<WebCore::Node> _field78;
    struct RenderScrollbarPart *_field79;
};

struct Geolocation {
    void **_field1;
    int _field2;
    struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field3;
    struct HashMap<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IntHash<unsigned int>, WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field4;
    struct Frame *_field5;
    struct OwnPtr<WebCore::GeolocationService> _field6;
    int _field7;
    _Bool _field8;
};

struct GeolocationService;

struct HTMLFrameOwnerElement {
    void **_field1;
    void **_field2;
    int _field3;
    struct Node *_field4;
    struct DocPtr<WebCore::Document> _field5;
    struct Node *_field6;
    struct Node *_field7;
    struct RenderObject *_field8;
    unsigned int :2;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct Node *_field9;
    struct Node *_field10;
    struct QualifiedName _field11;
    struct RefPtr<WebCore::NamedNodeMap> _field12;
    struct RefPtr<WebCore::CSSMutableStyleDeclaration> _field13;
    struct Frame *_field14;
};

struct HTMLFrameSetElement;

struct HTMLPlugInElement {
    void **_field1;
    void **_field2;
    int _field3;
    struct Node *_field4;
    struct DocPtr<WebCore::Document> _field5;
    struct Node *_field6;
    struct Node *_field7;
    struct RenderObject *_field8;
    unsigned int :2;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct Node *_field9;
    struct Node *_field10;
    struct QualifiedName _field11;
    struct RefPtr<WebCore::NamedNodeMap> _field12;
    struct RefPtr<WebCore::CSSMutableStyleDeclaration> _field13;
    struct Frame *_field14;
    struct AtomicString _field15;
    struct RefPtr<JSC::Bindings::Instance> _field16;
    struct NPObject *_field17;
};

struct HTTPHeaderMap {
    struct HashTable<WebCore::AtomicString, std::pair<WebCore::AtomicString, WebCore::String>, WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String>>, WebCore::CaseFoldingHash, WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String>>, WTF::HashTraits<WebCore::AtomicString>> m_impl;
};

struct HashCountedSet<WebCore::CachedResourceClient*, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::HashTraits<WebCore::CachedResourceClient*>> {
    struct HashMap<WebCore::CachedResourceClient*, unsigned int, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::HashTraits<WebCore::CachedResourceClient*>, WTF::HashTraits<unsigned int>> m_impl;
};

struct HashMap<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*, WTF::PtrHash<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>> {
    struct HashTable<WTF::RefPtr<WebCore::Frame>, std::pair<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>, WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>>, WTF::PtrHash<WTF::RefPtr<WebCore::Frame>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>>, WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>> m_impl;
};

struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>> {
    struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>, WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> m_impl;
};

struct HashMap<WebCore::CachedResourceClient*, unsigned int, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::HashTraits<WebCore::CachedResourceClient*>, WTF::HashTraits<unsigned int>> {
    struct HashTable<WebCore::CachedResourceClient*, std::pair<WebCore::CachedResourceClient*, unsigned int>, WTF::PairFirstExtractor<std::pair<WebCore::CachedResourceClient*, unsigned int>>, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::PairHashTraits<WTF::HashTraits<WebCore::CachedResourceClient*>, WTF::HashTraits<unsigned int>>, WTF::HashTraits<WebCore::CachedResourceClient*>> m_impl;
};

struct HashMap<WebCore::String, double, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<double>> {
    struct HashTable<WebCore::String, std::pair<WebCore::String, double>, WTF::PairFirstExtractor<std::pair<WebCore::String, double>>, WebCore::StringHash, WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<double>>, WTF::HashTraits<WebCore::String>> m_impl;
};

struct HashMap<WebCore::String, unsigned int, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<unsigned int>> {
    struct HashTable<WebCore::String, std::pair<WebCore::String, unsigned int>, WTF::PairFirstExtractor<std::pair<WebCore::String, unsigned int>>, WebCore::StringHash, WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<unsigned int>>, WTF::HashTraits<WebCore::String>> m_impl;
};

struct HashMap<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IntHash<unsigned int>, WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct HashTable<int, std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PairFirstExtractor<std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::IntHash<unsigned int>, WTF::PairHashTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::HashTraits<int>> _field1;
};

struct HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>> {
    struct HashTable<long long int, std::pair<long long int, WTF::RefPtr<WebCore::InspectorResource>>, WTF::PairFirstExtractor<std::pair<long long int, WTF::RefPtr<WebCore::InspectorResource>>>, WTF::IntHash<long long unsigned int>, WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>, WTF::HashTraits<long long int>> m_impl;
};

struct HashMap<long long int, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>> {
    struct HashTable<long long int, std::pair<long long int, WTF::RetainPtr<NSMutableArray>>, WTF::PairFirstExtractor<std::pair<long long int, WTF::RetainPtr<NSMutableArray>>>, WTF::IntHash<long long unsigned int>, WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>>, WTF::HashTraits<long long int>> _field1;
};

struct HashMap<long unsigned int, WTF::RetainPtr<objc_object*>, WTF::IntHash<long unsigned int>, WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*>>> {
    struct HashTable<long unsigned int, std::pair<long unsigned int, WTF::RetainPtr<objc_object*>>, WTF::PairFirstExtractor<std::pair<long unsigned int, WTF::RetainPtr<objc_object*>>>, WTF::IntHash<long unsigned int>, WTF::PairHashTraits<WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*>>>, WTF::HashTraits<long unsigned int>> m_impl;
};

struct HashMap<unsigned int, PluginTimer*, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<PluginTimer*>> {
    struct HashTable<unsigned int, std::pair<unsigned int, PluginTimer*>, WTF::PairFirstExtractor<std::pair<unsigned int, PluginTimer*>>, WTF::IntHash<unsigned int>, WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<PluginTimer*>>, WTF::HashTraits<unsigned int>> _field1;
};

struct HashMap<void*, WTF::RefPtr<JSC::Bindings::RootObject>, WTF::PtrHash<void*>, WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>> {
    struct HashTable<void*, std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject>>, WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::PtrHash<void*>, WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::HashTraits<void*>> m_impl;
};

struct HashSet<JSC::JSGlobalObject*, WTF::PtrHash<JSC::JSGlobalObject*>, WTF::HashTraits<JSC::JSGlobalObject*>> {
    struct HashTable<JSC::JSGlobalObject*, JSC::JSGlobalObject*, WTF::IdentityExtractor<JSC::JSGlobalObject*>, WTF::PtrHash<JSC::JSGlobalObject*>, WTF::HashTraits<JSC::JSGlobalObject*>, WTF::HashTraits<JSC::JSGlobalObject*>> m_impl;
};

struct HashSet<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> _field1;
};

struct HashSet<WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>> {
    struct HashTable<WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>> m_impl;
};

struct HashSet<WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>> {
    struct HashTable<WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>> m_impl;
};

struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> {
    struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::ResourceLoader>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> m_impl;
};

struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>>;

struct HashSet<WTF::RefPtr<WebCore::Widget>, WTF::PtrHash<WTF::RefPtr<WebCore::Widget>>, WTF::HashTraits<WTF::RefPtr<WebCore::Widget>>> {
    struct HashTable<WTF::RefPtr<WebCore::Widget>, WTF::RefPtr<WebCore::Widget>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::Widget>>, WTF::PtrHash<WTF::RefPtr<WebCore::Widget>>, WTF::HashTraits<WTF::RefPtr<WebCore::Widget>>, WTF::HashTraits<WTF::RefPtr<WebCore::Widget>>> _field1;
};

struct HashSet<WTF::RefPtr<WebNetscapePluginStream>, WTF::PtrHash<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>> {
    struct HashTable<WTF::RefPtr<WebNetscapePluginStream>, WTF::RefPtr<WebNetscapePluginStream>, WTF::IdentityExtractor<WTF::RefPtr<WebNetscapePluginStream>>, WTF::PtrHash<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>> m_impl;
};

struct HashSet<WebCore::CachedResourceHandleBase*, WTF::PtrHash<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>> {
    struct HashTable<WebCore::CachedResourceHandleBase*, WebCore::CachedResourceHandleBase*, WTF::IdentityExtractor<WebCore::CachedResourceHandleBase*>, WTF::PtrHash<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>> m_impl;
};

struct HashSet<WebCore::DOMWindow*, WTF::PtrHash<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>> {
    struct HashTable<WebCore::DOMWindow*, WebCore::DOMWindow*, WTF::IdentityExtractor<WebCore::DOMWindow*>, WTF::PtrHash<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>> m_impl;
};

struct HashSet<WebCore::Frame*, WTF::PtrHash<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>> {
    struct HashTable<WebCore::Frame*, WebCore::Frame*, WTF::IdentityExtractor<WebCore::Frame*>, WTF::PtrHash<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>> m_impl;
};

struct HashSet<WebCore::Page*, WTF::PtrHash<WebCore::Page*>, WTF::HashTraits<WebCore::Page*>> {
    struct HashTable<WebCore::Page*, WebCore::Page*, WTF::IdentityExtractor<WebCore::Page*>, WTF::PtrHash<WebCore::Page*>, WTF::HashTraits<WebCore::Page*>, WTF::HashTraits<WebCore::Page*>> _field1;
};

struct HashSet<WebCore::RenderPartObject*, WTF::PtrHash<WebCore::RenderPartObject*>, WTF::HashTraits<WebCore::RenderPartObject*>>;

struct HashSet<WebCore::String, WebCore::StringHash, WTF::HashTraits<WebCore::String>> {
    struct HashTable<WebCore::String, WebCore::String, WTF::IdentityExtractor<WebCore::String>, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<WebCore::String>> m_impl;
};

struct HashSet<long long unsigned int, WebCore::LinkHashHash, WTF::HashTraits<long long unsigned int>> {
    struct HashTable<long long unsigned int, long long unsigned int, WTF::IdentityExtractor<long long unsigned int>, WebCore::LinkHashHash, WTF::HashTraits<long long unsigned int>, WTF::HashTraits<long long unsigned int>> _field1;
};

struct HashSet<long unsigned int, WTF::IntHash<long unsigned int>, WTF::HashTraits<long unsigned int>> {
    struct HashTable<long unsigned int, long unsigned int, WTF::IdentityExtractor<long unsigned int>, WTF::IntHash<long unsigned int>, WTF::HashTraits<long unsigned int>, WTF::HashTraits<long unsigned int>> m_impl;
};

struct HashTable<JSC::JSGlobalObject*, JSC::JSGlobalObject*, WTF::IdentityExtractor<JSC::JSGlobalObject*>, WTF::PtrHash<JSC::JSGlobalObject*>, WTF::HashTraits<JSC::JSGlobalObject*>, WTF::HashTraits<JSC::JSGlobalObject*>> {
    struct JSGlobalObject **m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::RefPtr<WebCore::Frame>, std::pair<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>, WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>>, WTF::PtrHash<WTF::RefPtr<WebCore::Frame>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>>, WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>> {
    struct pair<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PtrHash<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>> {
    struct RefPtr<WebCore::Geolocation::GeoNotifier> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>> {
    struct RefPtr<WebCore::InspectorDOMStorageResource> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>> {
    struct RefPtr<WebCore::InspectorDatabaseResource> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::ResourceLoader>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> {
    struct RefPtr<WebCore::ResourceLoader> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::RefPtr<WebCore::ResourceLoader>, std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>, WTF::PairFirstExtractor<std::pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::PairHashTraits<WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> {
    struct pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WTF::RefPtr<WebCore::Widget>, WTF::RefPtr<WebCore::Widget>, WTF::IdentityExtractor<WTF::RefPtr<WebCore::Widget>>, WTF::PtrHash<WTF::RefPtr<WebCore::Widget>>, WTF::HashTraits<WTF::RefPtr<WebCore::Widget>>, WTF::HashTraits<WTF::RefPtr<WebCore::Widget>>> {
    struct RefPtr<WebCore::Widget> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WTF::RefPtr<WebNetscapePluginStream>, WTF::RefPtr<WebNetscapePluginStream>, WTF::IdentityExtractor<WTF::RefPtr<WebNetscapePluginStream>>, WTF::PtrHash<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>> {
    struct RefPtr<WebNetscapePluginStream> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::AtomicString, std::pair<WebCore::AtomicString, WebCore::String>, WTF::PairFirstExtractor<std::pair<WebCore::AtomicString, WebCore::String>>, WebCore::CaseFoldingHash, WTF::PairHashTraits<WTF::HashTraits<WebCore::AtomicString>, WTF::HashTraits<WebCore::String>>, WTF::HashTraits<WebCore::AtomicString>> {
    struct pair<WebCore::AtomicString, WebCore::String> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::CachedResourceClient*, std::pair<WebCore::CachedResourceClient*, unsigned int>, WTF::PairFirstExtractor<std::pair<WebCore::CachedResourceClient*, unsigned int>>, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::PairHashTraits<WTF::HashTraits<WebCore::CachedResourceClient*>, WTF::HashTraits<unsigned int>>, WTF::HashTraits<WebCore::CachedResourceClient*>> {
    struct pair<WebCore::CachedResourceClient*, unsigned int> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::CachedResourceHandleBase*, WebCore::CachedResourceHandleBase*, WTF::IdentityExtractor<WebCore::CachedResourceHandleBase*>, WTF::PtrHash<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>> {
    struct CachedResourceHandleBase **m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::DOMWindow*, WebCore::DOMWindow*, WTF::IdentityExtractor<WebCore::DOMWindow*>, WTF::PtrHash<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>> {
    struct DOMWindow **m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::Frame*, WebCore::Frame*, WTF::IdentityExtractor<WebCore::Frame*>, WTF::PtrHash<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>> {
    struct Frame **m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::Page*, WebCore::Page*, WTF::IdentityExtractor<WebCore::Page*>, WTF::PtrHash<WebCore::Page*>, WTF::HashTraits<WebCore::Page*>, WTF::HashTraits<WebCore::Page*>> {
    struct Page **_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<WebCore::String, WebCore::String, WTF::IdentityExtractor<WebCore::String>, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<WebCore::String>> {
    struct String *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::String, std::pair<WebCore::String, double>, WTF::PairFirstExtractor<std::pair<WebCore::String, double>>, WebCore::StringHash, WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<double>>, WTF::HashTraits<WebCore::String>> {
    struct pair<WebCore::String, double> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<WebCore::String, std::pair<WebCore::String, unsigned int>, WTF::PairFirstExtractor<std::pair<WebCore::String, unsigned int>>, WebCore::StringHash, WTF::PairHashTraits<WTF::HashTraits<WebCore::String>, WTF::HashTraits<unsigned int>>, WTF::HashTraits<WebCore::String>> {
    struct pair<WebCore::String, unsigned int> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<int, std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>, WTF::PairFirstExtractor<std::pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::IntHash<unsigned int>, WTF::PairHashTraits<WTF::HashTraits<int>, WTF::HashTraits<WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>>, WTF::HashTraits<int>> {
    struct pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<long long int, std::pair<long long int, WTF::RefPtr<WebCore::InspectorResource>>, WTF::PairFirstExtractor<std::pair<long long int, WTF::RefPtr<WebCore::InspectorResource>>>, WTF::IntHash<long long unsigned int>, WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>, WTF::HashTraits<long long int>> {
    struct pair<long long int, WTF::RefPtr<WebCore::InspectorResource>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<long long int, std::pair<long long int, WTF::RetainPtr<NSMutableArray>>, WTF::PairFirstExtractor<std::pair<long long int, WTF::RetainPtr<NSMutableArray>>>, WTF::IntHash<long long unsigned int>, WTF::PairHashTraits<WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>>, WTF::HashTraits<long long int>> {
    struct pair<long long int, WTF::RetainPtr<NSMutableArray>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<long long unsigned int, long long unsigned int, WTF::IdentityExtractor<long long unsigned int>, WebCore::LinkHashHash, WTF::HashTraits<long long unsigned int>, WTF::HashTraits<long long unsigned int>> {
    unsigned long long *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct HashTable<long unsigned int, long unsigned int, WTF::IdentityExtractor<long unsigned int>, WTF::IntHash<long unsigned int>, WTF::HashTraits<long unsigned int>, WTF::HashTraits<long unsigned int>> {
    unsigned long long *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<long unsigned int, std::pair<long unsigned int, WTF::RetainPtr<objc_object*>>, WTF::PairFirstExtractor<std::pair<long unsigned int, WTF::RetainPtr<objc_object*>>>, WTF::IntHash<long unsigned int>, WTF::PairHashTraits<WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*>>>, WTF::HashTraits<long unsigned int>> {
    struct pair<long unsigned int, WTF::RetainPtr<objc_object*>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<unsigned int, std::pair<unsigned int, PluginTimer*>, WTF::PairFirstExtractor<std::pair<unsigned int, PluginTimer*>>, WTF::IntHash<unsigned int>, WTF::PairHashTraits<WTF::HashTraits<unsigned int>, WTF::HashTraits<PluginTimer*>>, WTF::HashTraits<unsigned int>> {
    struct pair<unsigned int, PluginTimer*> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HashTable<void*, std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject>>, WTF::PairFirstExtractor<std::pair<void*, WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::PtrHash<void*>, WTF::PairHashTraits<WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>>, WTF::HashTraits<void*>> {
    struct pair<void*, WTF::RefPtr<JSC::Bindings::RootObject>> *m_table;
    int m_tableSize;
    int m_tableSizeMask;
    int m_keyCount;
    int m_deletedCount;
};

struct HistoryItem;

struct HitTestResult {
    struct RefPtr<WebCore::Node> _field1;
    struct RefPtr<WebCore::Node> _field2;
    struct IntPoint _field3;
    struct IntPoint _field4;
    struct RefPtr<WebCore::Element> _field5;
    struct RefPtr<WebCore::Scrollbar> _field6;
    _Bool _field7;
};

struct Icon;

struct IconFetcher;

struct IconLoader;

struct Image;

struct InspectorClient;

struct InspectorFrontend;

struct InspectorResource;

struct Instance;

struct IntPoint {
    int m_x;
    int m_y;
};

struct IntRect {
    struct IntPoint m_location;
    struct IntSize m_size;
};

struct IntSize {
    int m_width;
    int m_height;
};

struct JSCell;

struct JSDOMWindowShell;

struct JSGlobalObject;

struct JSValue {
    struct JSCell *m_ptr;
};

struct KURL {
    struct String m_string;
    unsigned int m_isValid:1;
    unsigned int m_protocolInHTTPFamily:1;
    int m_schemeEnd;
    int m_userStart;
    int m_userEnd;
    int m_passwordEnd;
    int m_hostEnd;
    int m_portEnd;
    int m_pathAfterLastSlash;
    int m_pathEnd;
    int m_queryEnd;
    int m_fragmentEnd;
};

struct KeyboardEvent {
    void **_field1;
    int _field2;
    struct AtomicString _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned short _field10;
    struct EventTarget *_field11;
    struct RefPtr<WebCore::EventTarget> _field12;
    unsigned long long _field13;
    struct RefPtr<WebCore::Event> _field14;
    struct RefPtr<WebCore::DOMWindow> _field15;
    int _field16;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    struct PlatformKeyboardEvent *_field17;
    struct String _field18;
    unsigned int _field19;
    unsigned int :1;
    struct Vector<WebCore::KeypressCommand, 0ul> _field20;
};

struct KeypressCommand;

struct LegacyWebArchive {
    int _field1;
    struct RefPtr<WebCore::ArchiveResource> _field2;
    struct Vector<WTF::RefPtr<WebCore::ArchiveResource>, 0ul> _field3;
    struct Vector<WTF::RefPtr<WebCore::Archive>, 0ul> _field4;
};

struct MainResourceLoader;

struct NPClass;

struct NPObject {
    struct NPClass *_field1;
    unsigned int _field2;
};

struct NP_CGContext {
    struct CGContext *context;
    struct _NPNSWindow *window;
};

struct NamedNodeMap;

struct NavigationAction {
    struct KURL m_URL;
    int m_type;
    struct RefPtr<WebCore::Event> m_event;
};

struct NetscapePlugInStreamLoader;

struct NetscapePluginInstanceProxy;

struct Node;

struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>>> {
    struct HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>> *_field1;
};

struct OwnPtr<WTF::HashSet<WebCore::RenderPartObject*, WTF::PtrHash<WebCore::RenderPartObject*>, WTF::HashTraits<WebCore::RenderPartObject*>>> {
    struct HashSet<WebCore::RenderPartObject*, WTF::PtrHash<WebCore::RenderPartObject*>, WTF::HashTraits<WebCore::RenderPartObject*>> *_field1;
};

struct OwnPtr<WebCore::ArchiveResourceCollection> {
    struct ArchiveResourceCollection *m_ptr;
};

struct OwnPtr<WebCore::Chrome> {
    struct Chrome *_field1;
};

struct OwnPtr<WebCore::ContextMenuController> {
    struct ContextMenuController *_field1;
};

struct OwnPtr<WebCore::DeleteButtonController> {
    struct DeleteButtonController *m_ptr;
};

struct OwnPtr<WebCore::DragController> {
    struct DragController *_field1;
};

struct OwnPtr<WebCore::FocusController> {
    struct FocusController *_field1;
};

struct OwnPtr<WebCore::GeolocationService> {
    struct GeolocationService *_field1;
};

struct OwnPtr<WebCore::IconLoader> {
    struct IconLoader *m_ptr;
};

struct OwnPtr<WebCore::InspectorFrontend> {
    struct InspectorFrontend *m_ptr;
};

struct OwnPtr<WebCore::PageGroup> {
    struct PageGroup *_field1;
};

struct OwnPtr<WebCore::ProgressTracker> {
    struct ProgressTracker *_field1;
};

struct OwnPtr<WebCore::PurgeableBuffer> {
    struct PurgeableBuffer *m_ptr;
};

struct OwnPtr<WebCore::ScheduledRedirection> {
    struct ScheduledRedirection *m_ptr;
};

struct OwnPtr<WebCore::SelectionController> {
    struct SelectionController *_field1;
};

struct OwnPtr<WebCore::Settings> {
    struct Settings *_field1;
};

struct OwnPtr<WebCore::TextIterator> {
    struct TextIterator *m_ptr;
};

struct OwnPtr<WebCore::XSSAuditor> {
    struct XSSAuditor *m_ptr;
};

struct OwnPtr<WebNetscapePluginEventHandler> {
    struct WebNetscapePluginEventHandler *m_ptr;
};

struct Page {
    struct OwnPtr<WTF::HashSet<WTF::RefPtr<WebCore::SchedulePair>, WebCore::SchedulePairHash, WTF::HashTraits<WTF::RefPtr<WebCore::SchedulePair>>>> _field1;
    struct OwnPtr<WebCore::Chrome> _field2;
    struct OwnPtr<WebCore::SelectionController> _field3;
    struct OwnPtr<WebCore::DragController> _field4;
    struct OwnPtr<WebCore::FocusController> _field5;
    struct OwnPtr<WebCore::ContextMenuController> _field6;
    struct RefPtr<WebCore::InspectorController> _field7;
    struct OwnPtr<WebCore::Settings> _field8;
    struct OwnPtr<WebCore::ProgressTracker> _field9;
    struct RefPtr<WebCore::BackForwardList> _field10;
    struct RefPtr<WebCore::Frame> _field11;
    struct RefPtr<WebCore::HistoryItem> _field12;
    struct RefPtr<WebCore::PluginData> _field13;
    struct RefPtr<WebCore::RenderTheme> _field14;
    struct EditorClient *_field15;
    int _field16;
    struct String _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    float _field23;
    _Bool _field24;
    struct InspectorController *_field25;
    struct String _field26;
    struct String _field27;
    _Bool _field28;
    long long _field29;
    struct OwnPtr<WebCore::PageGroup> _field30;
    struct PageGroup *_field31;
    struct Debugger *_field32;
    double _field33;
    int _field34;
    struct RefPtr<WebCore::StorageNamespace> _field35;
};

struct PageGroup {
    struct String _field1;
    struct HashSet<WebCore::Page*, WTF::PtrHash<WebCore::Page*>, WTF::HashTraits<WebCore::Page*>> _field2;
    struct HashSet<long long unsigned int, WebCore::LinkHashHash, WTF::HashTraits<long long unsigned int>> _field3;
    _Bool _field4;
    unsigned int _field5;
    struct RefPtr<WebCore::StorageNamespace> _field6;
};

struct PassRefPtr<JSC::Bindings::Instance> {
    struct Instance *_field1;
};

struct PassRefPtr<JSC::Bindings::RootObject> {
    struct RootObject *_field1;
};

struct PassRefPtr<WebCore::ArchiveResource> {
    struct ArchiveResource *_field1;
};

struct PassRefPtr<WebCore::BackForwardList> {
    struct BackForwardList *_field1;
};

struct PassRefPtr<WebCore::EditCommand> {
    struct EditCommand *_field1;
};

struct PassRefPtr<WebCore::FileChooser> {
    struct FileChooser *_field1;
};

struct PassRefPtr<WebCore::Frame> {
    struct Frame *_field1;
};

struct PassRefPtr<WebCore::HTMLPlugInElement> {
    struct HTMLPlugInElement *_field1;
};

struct PassRefPtr<WebCore::HistoryItem> {
    struct HistoryItem *_field1;
};

struct PassRefPtr<WebCore::IconFetcher> {
    struct IconFetcher *_field1;
};

struct PassRefPtr<WebCore::LegacyWebArchive> {
    struct LegacyWebArchive *_field1;
};

struct PassRefPtr<WebCore::Range> {
    struct Range *_field1;
};

struct PassRefPtr<WebDocumentLoaderMac> {
    struct WebDocumentLoaderMac *_field1;
};

struct PlatformKeyboardEvent;

struct PlatformMouseEvent {
    struct IntPoint m_position;
    struct IntPoint m_globalPosition;
    int m_button;
    int m_eventType;
    int m_clickCount;
    _Bool m_shiftKey;
    _Bool m_ctrlKey;
    _Bool m_altKey;
    _Bool m_metaKey;
    double m_timestamp;
    unsigned int m_modifierFlags;
    int m_eventNumber;
};

struct PluginData;

struct PolicyCheck {
    struct ResourceRequest m_request;
    struct RefPtr<WebCore::FormState> m_formState;
    struct String m_frameName;
    void *m_navigationFunction;
    void *m_newWindowFunction;
    void *m_contentFunction;
    void *m_argument;
};

struct Position {
    struct RefPtr<WebCore::Node> m_anchorNode;
    int m_offset;
    unsigned int m_anchorType:2;
    unsigned int m_isLegacyEditingPosition:1;
};

struct ProgressTracker;

struct ProtectedPtr<JSC::JSGlobalObject> {
    struct JSGlobalObject *m_ptr;
};

struct ProtectedPtr<WebCore::JSDOMWindowShell> {
    struct JSDOMWindowShell *m_ptr;
};

struct PurgeableBuffer;

struct QualifiedName {
    struct QualifiedNameImpl *_field1;
};

struct QualifiedNameImpl;

struct Range {
    int _field1;
    struct RefPtr<WebCore::Document> _field2;
    struct RangeBoundaryPoint _field3;
    struct RangeBoundaryPoint _field4;
};

struct RangeBoundaryPoint {
    struct RefPtr<WebCore::Node> _field1;
    int _field2;
    struct Node *_field3;
};

struct RefPtr<JSC::Bindings::Instance> {
    struct Instance *_field1;
};

struct RefPtr<JSC::Bindings::RootObject> {
    struct RootObject *m_ptr;
};

struct RefPtr<JSC::Profile>;

struct RefPtr<WebCore::ApplicationCache> {
    struct ApplicationCache *m_ptr;
};

struct RefPtr<WebCore::Archive>;

struct RefPtr<WebCore::ArchiveResource> {
    struct ArchiveResource *_field1;
};

struct RefPtr<WebCore::BackForwardList> {
    struct BackForwardList *_field1;
};

struct RefPtr<WebCore::CSSMutableStyleDeclaration> {
    struct CSSMutableStyleDeclaration *m_ptr;
};

struct RefPtr<WebCore::CStringBuffer> {
    struct CStringBuffer *_field1;
};

struct RefPtr<WebCore::DOMWindow> {
    struct DOMWindow *m_ptr;
};

struct RefPtr<WebCore::Document> {
    struct Document *m_ptr;
};

struct RefPtr<WebCore::DocumentLoader> {
    struct DocumentLoader *m_ptr;
};

struct RefPtr<WebCore::EditCommand> {
    struct EditCommand *m_ptr;
};

struct RefPtr<WebCore::Element> {
    struct Element *m_ptr;
};

struct RefPtr<WebCore::Event> {
    struct Event *m_ptr;
};

struct RefPtr<WebCore::EventTarget> {
    struct EventTarget *_field1;
};

struct RefPtr<WebCore::FormData> {
    struct FormData *m_ptr;
};

struct RefPtr<WebCore::FormState> {
    struct FormState *m_ptr;
};

struct RefPtr<WebCore::Frame> {
    struct Frame *m_ptr;
};

struct RefPtr<WebCore::FrameView> {
    struct FrameView *m_ptr;
};

struct RefPtr<WebCore::Geolocation::GeoNotifier>;

struct RefPtr<WebCore::HTMLFrameSetElement> {
    struct HTMLFrameSetElement *m_ptr;
};

struct RefPtr<WebCore::HTMLPlugInElement> {
    struct HTMLPlugInElement *m_ptr;
};

struct RefPtr<WebCore::HistoryItem> {
    struct HistoryItem *m_ptr;
};

struct RefPtr<WebCore::Icon> {
    struct Icon *m_ptr;
};

struct RefPtr<WebCore::Image> {
    struct Image *m_ptr;
};

struct RefPtr<WebCore::InspectorController> {
    struct InspectorController *_field1;
};

struct RefPtr<WebCore::InspectorDOMStorageResource>;

struct RefPtr<WebCore::InspectorDatabaseResource>;

struct RefPtr<WebCore::InspectorResource> {
    struct InspectorResource *m_ptr;
};

struct RefPtr<WebCore::LegacyWebArchive> {
    struct LegacyWebArchive *m_ptr;
};

struct RefPtr<WebCore::MainResourceLoader> {
    struct MainResourceLoader *m_ptr;
};

struct RefPtr<WebCore::NamedNodeMap> {
    struct NamedNodeMap *_field1;
};

struct RefPtr<WebCore::NetscapePlugInStreamLoader> {
    struct NetscapePlugInStreamLoader *_field1;
};

struct RefPtr<WebCore::Node> {
    struct Node *m_ptr;
};

struct RefPtr<WebCore::PluginData> {
    struct PluginData *_field1;
};

struct RefPtr<WebCore::RenderTheme> {
    struct RenderTheme *_field1;
};

struct RefPtr<WebCore::ResourceLoader>;

struct RefPtr<WebCore::SVGElementInstance> {
    struct SVGElementInstance *m_ptr;
};

struct RefPtr<WebCore::Scrollbar> {
    struct Scrollbar *m_ptr;
};

struct RefPtr<WebCore::SharedBuffer> {
    struct SharedBuffer *m_ptr;
};

struct RefPtr<WebCore::StorageNamespace> {
    struct StorageNamespace *_field1;
};

struct RefPtr<WebCore::StringImpl> {
    struct StringImpl *m_ptr;
};

struct RefPtr<WebCore::Text> {
    struct Text *m_ptr;
};

struct RefPtr<WebCore::TextResourceDecoder> {
    struct TextResourceDecoder *m_ptr;
};

struct RefPtr<WebCore::Widget>;

struct RefPtr<WebKit::NetscapePluginInstanceProxy> {
    struct NetscapePluginInstanceProxy *m_ptr;
};

struct RefPtr<WebNetscapePluginStream> {
    struct WebNetscapePluginStream *m_ptr;
};

struct RenderLayer;

struct RenderObject;

struct RenderScrollbarPart;

struct RenderTheme;

struct Request;

struct ResourceError {
    struct String m_domain;
    int m_errorCode;
    struct String m_failingURL;
    struct String m_localizedDescription;
    _Bool m_isNull;
    _Bool m_isCancellation;
    _Bool m_dataIsUpToDate;
    struct RetainPtr<NSError> m_platformError;
};

struct ResourceRequest {
    struct KURL m_url;
    int m_cachePolicy;
    double m_timeoutInterval;
    struct KURL m_firstPartyForCookies;
    struct String m_httpMethod;
    struct HTTPHeaderMap m_httpHeaderFields;
    struct Vector<WebCore::String, 0ul> m_responseContentDispositionEncodingFallbackArray;
    struct RefPtr<WebCore::FormData> m_httpBody;
    _Bool m_allowHTTPCookies;
    _Bool m_resourceRequestUpdated;
    _Bool m_platformRequestUpdated;
    _Bool m_reportUploadProgress;
    struct RetainPtr<NSURLRequest> m_nsRequest;
};

struct ResourceResponse {
    struct KURL m_url;
    struct String m_mimeType;
    long long m_expectedContentLength;
    struct String m_textEncodingName;
    struct String m_suggestedFilename;
    int m_httpStatusCode;
    struct String m_httpStatusText;
    struct HTTPHeaderMap m_httpHeaderFields;
    long long m_lastModifiedDate;
    unsigned int m_isNull:1;
    unsigned int m_haveParsedCacheControlHeader:1;
    unsigned int m_haveParsedAgeHeader:1;
    unsigned int m_haveParsedDateHeader:1;
    unsigned int m_haveParsedExpiresHeader:1;
    unsigned int m_haveParsedLastModifiedHeader:1;
    unsigned int m_cacheControlContainsNoCache:1;
    unsigned int m_cacheControlContainsNoStore:1;
    unsigned int m_cacheControlContainsMustRevalidate:1;
    double m_cacheControlMaxAge;
    double m_age;
    double m_date;
    double m_expires;
    double m_lastModified;
    struct RetainPtr<NSURLResponse> m_nsResponse;
    _Bool m_isUpToDate;
};

struct RetainPtr<CALayer> {
    CALayer *m_ptr;
};

struct RetainPtr<NSArray> {
    NSArray *m_ptr;
};

struct RetainPtr<NSError> {
    NSError *m_ptr;
};

struct RetainPtr<NSMutableData> {
    id _field1;
};

struct RetainPtr<NSMutableDictionary> {
    NSMutableDictionary *m_ptr;
};

struct RetainPtr<NSMutableURLRequest> {
    id _field1;
};

struct RetainPtr<NSString> {
    NSString *m_ptr;
};

struct RetainPtr<NSURL> {
    NSURL *m_ptr;
};

struct RetainPtr<NSURLRequest> {
    NSURLRequest *m_ptr;
};

struct RetainPtr<NSURLResponse> {
    NSURLResponse *m_ptr;
};

struct RetainPtr<WebIconFetcher> {
    id _field1;
};

struct RetainPtr<WebNetscapePluginDocumentView> {
    id _field1;
};

struct RetainPtr<WebNetscapePluginPackage> {
    WebNetscapePluginPackage *m_ptr;
};

struct RetainPtr<WebScriptCallFrame> {
    WebScriptCallFrame *m_ptr;
};

struct RetainPtr<WebScriptObject> {
    WebScriptObject *m_ptr;
};

struct RetainPtr<objc_object*> {
    id m_ptr;
};

struct RootObject;

struct SVGElementInstance;

struct ScheduledEvent;

struct ScheduledRedirection;

struct ScriptController {
    struct ProtectedPtr<WebCore::JSDOMWindowShell> m_windowShell;
    struct Frame *m_frame;
    int m_handlerLineNumber;
    struct String *m_sourceURL;
    _Bool m_processingTimerCallback;
    _Bool m_paused;
    _Bool m_allowPopupsFromPlugin;
    struct RefPtr<JSC::Bindings::RootObject> m_bindingRootObject;
    struct HashMap<void*, WTF::RefPtr<JSC::Bindings::RootObject>, WTF::PtrHash<void*>, WTF::HashTraits<void*>, WTF::HashTraits<WTF::RefPtr<JSC::Bindings::RootObject>>> m_rootObjects;
    struct NPObject *m_windowScriptNPObject;
    struct RetainPtr<WebScriptObject> m_windowScriptObject;
    struct OwnPtr<WebCore::XSSAuditor> m_XSSAuditor;
};

struct ScrollView;

struct Scrollbar;

struct SecurityOrigin {
    int _field1;
    struct String _field2;
    struct String _field3;
    struct String _field4;
    unsigned short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct SelectionController {
    struct Frame *m_frame;
    int m_xPosForVerticalArrowNavigation;
    struct VisibleSelection m_sel;
    struct IntRect m_caretRect;
    struct IntRect m_absCaretBounds;
    struct IntRect m_absoluteCaretRepaintBounds;
    unsigned int m_needsLayout:1;
    unsigned int m_absCaretBoundsDirty:1;
    unsigned int m_lastChangeWasHorizontalExtension:1;
    unsigned int m_isDragCaretController:1;
    unsigned int m_isCaretBlinkingSuspended:1;
    unsigned int m_focused:1;
};

struct Settings;

struct SharedBuffer;

struct StorageNamespace;

struct String {
    struct RefPtr<WebCore::StringImpl> m_impl;
};

struct StringImpl;

struct StyleBase;

struct SubstituteData {
    struct RefPtr<WebCore::SharedBuffer> m_content;
    struct String m_mimeType;
    struct String m_textEncoding;
    struct KURL m_failingURL;
    struct KURL m_responseURL;
};

struct Text;

struct TextIterator;

struct TextResourceDecoder;

struct Timer<WebCore::FrameView> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct FrameView *_field6;
    CDStruct_d65495c1 _field7;
};

struct Timer<WebNetscapePluginStream> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct WebNetscapePluginStream *_field6;
    CDStruct_d65495c1 _field7;
};

struct UserStyleSheetLoader;

struct Vector<WTF::RefPtr<JSC::Profile>, 0ul> {
    unsigned long long m_size;
    struct VectorBuffer<WTF::RefPtr<JSC::Profile>, 0ul> m_buffer;
};

struct Vector<WTF::RefPtr<WebCore::Archive>, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WTF::RefPtr<WebCore::Archive>, 0ul> _field2;
};

struct Vector<WTF::RefPtr<WebCore::ArchiveResource>, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>, 0ul> _field2;
};

struct Vector<WebCore::CompositionUnderline, 0ul> {
    unsigned long long m_size;
    struct VectorBuffer<WebCore::CompositionUnderline, 0ul> m_buffer;
};

struct Vector<WebCore::ConsoleMessage*, 0ul> {
    unsigned long long m_size;
    struct VectorBuffer<WebCore::ConsoleMessage*, 0ul> m_buffer;
};

struct Vector<WebCore::IntRect, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WebCore::IntRect, 0ul> _field2;
};

struct Vector<WebCore::KeypressCommand, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WebCore::KeypressCommand, 0ul> _field2;
};

struct Vector<WebCore::Node*, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WebCore::Node*, 0ul> _field2;
};

struct Vector<WebCore::ResourceResponse, 0ul> {
    unsigned long long m_size;
    struct VectorBuffer<WebCore::ResourceResponse, 0ul> m_buffer;
};

struct Vector<WebCore::ScheduledEvent*, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WebCore::ScheduledEvent*, 0ul> _field2;
};

struct Vector<WebCore::String, 0ul> {
    unsigned long long m_size;
    struct VectorBuffer<WebCore::String, 0ul> m_buffer;
};

struct VectorBuffer<WTF::RefPtr<JSC::Profile>, 0ul> {
    struct RefPtr<JSC::Profile> *m_buffer;
    unsigned long long m_capacity;
};

struct VectorBuffer<WTF::RefPtr<WebCore::Archive>, 0ul> {
    struct RefPtr<WebCore::Archive> *_field1;
    unsigned long long _field2;
};

struct VectorBuffer<WTF::RefPtr<WebCore::ArchiveResource>, 0ul> {
    struct RefPtr<WebCore::ArchiveResource> *_field1;
    unsigned long long _field2;
};

struct VectorBuffer<WebCore::CompositionUnderline, 0ul> {
    struct CompositionUnderline *m_buffer;
    unsigned long long m_capacity;
};

struct VectorBuffer<WebCore::ConsoleMessage*, 0ul> {
    struct ConsoleMessage **m_buffer;
    unsigned long long m_capacity;
};

struct VectorBuffer<WebCore::IntRect, 0ul> {
    struct IntRect *_field1;
    unsigned long long _field2;
};

struct VectorBuffer<WebCore::KeypressCommand, 0ul> {
    struct KeypressCommand *_field1;
    unsigned long long _field2;
};

struct VectorBuffer<WebCore::Node*, 0ul> {
    struct Node **_field1;
    unsigned long long _field2;
};

struct VectorBuffer<WebCore::ResourceResponse, 0ul> {
    struct ResourceResponse *m_buffer;
    unsigned long long m_capacity;
};

struct VectorBuffer<WebCore::ScheduledEvent*, 0ul> {
    struct ScheduledEvent **_field1;
    unsigned long long _field2;
};

struct VectorBuffer<WebCore::String, 0ul> {
    struct String *m_buffer;
    unsigned long long m_capacity;
};

struct VisiblePosition {
    struct Position _field1;
    int _field2;
};

struct VisibleSelection {
    struct Position m_base;
    struct Position m_extent;
    struct Position m_start;
    struct Position m_end;
    int m_affinity;
    int m_granularity;
    int m_selectionType;
    _Bool m_baseIsFirst;
};

struct WebDocumentLoaderMac {
    void **_field1;
    int _field2;
    _Bool _field3;
    struct Frame *_field4;
    struct RefPtr<WebCore::MainResourceLoader> _field5;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field6;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field7;
    struct HashSet<WTF::RefPtr<WebCore::ResourceLoader>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>> _field8;
    struct RefPtr<WebCore::SharedBuffer> _field9;
    struct ResourceRequest _field10;
    struct SubstituteData _field11;
    struct ResourceRequest _field12;
    struct ResourceRequest _field13;
    struct ResourceResponse _field14;
    struct ResourceError _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    struct String _field23;
    struct String _field24;
    struct NavigationAction _field25;
    struct ResourceRequest _field26;
    struct Vector<WebCore::ResourceResponse, 0ul> _field27;
    _Bool _field28;
    struct HashMap<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>, WTF::PtrHash<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::ResourceLoader>>, WTF::HashTraits<WTF::RefPtr<WebCore::SubstituteResource>>> _field29;
    Timer_198e59b4 _field30;
    struct OwnPtr<WebCore::ArchiveResourceCollection> _field31;
    struct RefPtr<WebCore::SharedBuffer> _field32;
    struct HashSet<WebCore::String, WebCore::StringHash, WTF::HashTraits<WebCore::String>> _field33;
    struct Vector<WebCore::String, 0ul> _field34;
    struct String _field35;
    _Bool _field36;
    struct RefPtr<WebCore::ApplicationCache> _field37;
    struct ApplicationCacheGroup *_field38;
    struct RefPtr<WebCore::ApplicationCache> _field39;
    WebDataSource *_field40;
    _Bool _field41;
    struct RetainPtr<objc_object*> _field42;
    struct RetainPtr<objc_object*> _field43;
    struct HashSet<long unsigned int, WTF::IntHash<long unsigned int>, WTF::HashTraits<long unsigned int>> _field44;
};

struct WebFrameLoadDelegateImplementationCache {
    void *didClearWindowObjectForFrameFunc;
    void *windowScriptObjectAvailableFunc;
    void *didHandleOnloadEventsForFrameFunc;
    void *didReceiveServerRedirectForProvisionalLoadForFrameFunc;
    void *didCancelClientRedirectForFrameFunc;
    void *willPerformClientRedirectToURLDelayFireDateForFrameFunc;
    void *didChangeLocationWithinPageForFrameFunc;
    void *willCloseFrameFunc;
    void *didStartProvisionalLoadForFrameFunc;
    void *didReceiveTitleForFrameFunc;
    void *didCommitLoadForFrameFunc;
    void *didFailProvisionalLoadWithErrorForFrameFunc;
    void *didFailLoadWithErrorForFrameFunc;
    void *didFinishLoadForFrameFunc;
    void *didFirstLayoutInFrameFunc;
    void *didFirstVisuallyNonEmptyLayoutInFrameFunc;
    void *didReceiveIconForFrameFunc;
    void *didFinishDocumentLoadForFrameFunc;
};

struct WebHTMLViewInterpretKeyEventsParameters {
    struct KeyboardEvent *_field1;
    char _field2;
    char _field3;
    char _field4;
};

struct WebIconFetcherClient {
    void **_field1;
    struct RetainPtr<WebIconFetcher> _field2;
    id _field3;
    SEL _field4;
};

struct WebNetscapePluginEventHandler;

struct WebNetscapePluginStream {
    void **_field1;
    int _field2;
    struct RetainPtr<NSMutableData> _field3;
    struct RetainPtr<NSURL> _field4;
    struct RetainPtr<NSURL> _field5;
    struct RetainPtr<NSString> _field6;
    struct _NPP *_field7;
    unsigned short _field8;
    int _field9;
    struct _NPStream _field10;
    struct RetainPtr<NSString> _field11;
    int _field12;
    char _field13;
    void *_field14;
    char *_field15;
    struct RetainPtr<WebNetscapePluginDocumentView> _field16;
    short _field17;
    _Bool _field18;
    _Bool _field19;
    struct FrameLoader *_field20;
    struct RefPtr<WebCore::NetscapePlugInStreamLoader> _field21;
    struct RetainPtr<NSMutableURLRequest> _field22;
    struct _NPPluginFuncs *_field23;
    struct Timer<WebNetscapePluginStream> _field24;
};

struct WebResourceDelegateImplementationCache {
    void *didCancelAuthenticationChallengeFunc;
    void *didReceiveAuthenticationChallengeFunc;
    void *identifierForRequestFunc;
    void *willSendRequestFunc;
    void *didReceiveResponseFunc;
    void *didReceiveContentLengthFunc;
    void *didFinishLoadingFromDataSourceFunc;
    void *didFailLoadingWithErrorFromDataSourceFunc;
    void *didLoadResourceFromMemoryCacheFunc;
    void *willCacheResponseFunc;
    void *plugInFailedWithErrorFunc;
    void *shouldUseCredentialStorageFunc;
};

struct WebScriptDebugDelegateImplementationCache {
    char didParseSourceExpectsBaseLineNumber;
    void *didParseSourceFunc;
    void *failedToParseSourceFunc;
    void *didEnterCallFrameFunc;
    void *willExecuteStatementFunc;
    void *willLeaveCallFrameFunc;
    void *exceptionWasRaisedFunc;
};

struct WebScriptDebugger {
    void **_field1;
    struct HashSet<JSC::JSGlobalObject*, WTF::PtrHash<JSC::JSGlobalObject*>, WTF::HashTraits<JSC::JSGlobalObject*>> _field2;
    _Bool _field3;
    struct RetainPtr<WebScriptCallFrame> _field4;
    struct ProtectedPtr<JSC::JSGlobalObject> _field5;
    struct RetainPtr<WebScriptCallFrame> _field6;
};

struct WidgetPrivate;

struct XSSAuditor;

struct _NPNSWindow;

struct _NPNetscapeFuncs {
    unsigned short size;
    unsigned short version;
    void *geturl;
    void *posturl;
    void *requestread;
    void *newstream;
    void *write;
    void *destroystream;
    void *status;
    void *uagent;
    void *memalloc;
    void *memfree;
    void *memflush;
    void *reloadplugins;
    void *getJavaEnv;
    void *getJavaPeer;
    void *geturlnotify;
    void *posturlnotify;
    void *getvalue;
    void *setvalue;
    void *invalidaterect;
    void *invalidateregion;
    void *forceredraw;
    void *getstringidentifier;
    void *getstringidentifiers;
    void *getintidentifier;
    void *identifierisstring;
    void *utf8fromidentifier;
    void *intfromidentifier;
    void *createobject;
    void *retainobject;
    void *releaseobject;
    void *invoke;
    void *invokeDefault;
    void *evaluate;
    void *getproperty;
    void *setproperty;
    void *removeproperty;
    void *hasproperty;
    void *hasmethod;
    void *releasevariantvalue;
    void *setexception;
    void *pushpopupsenabledstate;
    void *poppopupsenabledstate;
    void *enumerate;
    void *pluginthreadasynccall;
    void *construct;
    void *getvalueforurl;
    void *setvalueforurl;
    void *getauthenticationinfo;
    void *scheduletimer;
    void *unscheduletimer;
    void *popupcontextmenu;
    void *convertpoint;
};

struct _NPP {
    void *_field1;
    void *_field2;
};

struct _NPPluginFuncs {
    unsigned short size;
    unsigned short version;
    void *newp;
    void *destroy;
    void *setwindow;
    void *newstream;
    void *destroystream;
    void *asfile;
    void *writeready;
    void *write;
    void *print;
    void *event;
    void *urlnotify;
    void *javaClass;
    void *getvalue;
    void *setvalue;
};

struct _NPRect {
    unsigned short top;
    unsigned short left;
    unsigned short bottom;
    unsigned short right;
};

struct _NPStream {
    void *_field1;
    void *_field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
    void *_field6;
    char *_field7;
};

struct _NPWindow {
    void *window;
    int x;
    int y;
    unsigned int width;
    unsigned int height;
    struct _NPRect clipRect;
    int type;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct pair<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>;

struct pair<WTF::RefPtr<WebCore::ResourceLoader>, WTF::RefPtr<WebCore::SubstituteResource>>;

struct pair<WebCore::AtomicString, WebCore::String>;

struct pair<WebCore::CachedResourceClient*, unsigned int>;

struct pair<WebCore::String, double>;

struct pair<WebCore::String, unsigned int>;

struct pair<int, WTF::RefPtr<WebCore::Geolocation::GeoNotifier>>;

struct pair<long long int, WTF::RefPtr<WebCore::InspectorResource>>;

struct pair<long long int, WTF::RetainPtr<NSMutableArray>>;

struct pair<long unsigned int, WTF::RetainPtr<objc_object*>>;

struct pair<unsigned int, PluginTimer*>;

struct pair<void*, WTF::RefPtr<JSC::Bindings::RootObject>>;

#if 0
// Names with conflicting types:
typedef struct ?<WebCore::CachedImage> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct CachedImage *_field6;
    CDStruct_d65495c1 _field7;
} Timer_43450b11;

typedef struct ?<WebCore::CachedImage> {
    void **_vptr$TimerBase;
    double m_nextFireTime;
    double m_repeatInterval;
    int m_heapIndex;
    unsigned int m_heapInsertionOrder;
    struct CachedImage *m_object;
    CDStruct_48e28a24 m_function;
} Timer_61066283;

typedef struct ?<WebCore::DocumentLoader> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct DocumentLoader *_field6;
    CDStruct_d65495c1 _field7;
} Timer_cd9d77e1;

typedef struct ?<WebCore::DocumentLoader> {
    void **_vptr$TimerBase;
    double m_nextFireTime;
    double m_repeatInterval;
    int m_heapIndex;
    unsigned int m_heapInsertionOrder;
    struct DocumentLoader *m_object;
    CDStruct_48e28a24 m_function;
} Timer_198e59b4;

typedef struct ?<WebCore::EventHandler> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct EventHandler *_field6;
    CDStruct_d65495c1 _field7;
} Timer_50f38857;

typedef struct ?<WebCore::EventHandler> {
    void **_vptr$TimerBase;
    double m_nextFireTime;
    double m_repeatInterval;
    int m_heapIndex;
    unsigned int m_heapInsertionOrder;
    struct EventHandler *m_object;
    CDStruct_48e28a24 m_function;
} Timer_f040cd92;

typedef struct ?<WebCore::Frame> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct Frame *_field6;
    CDStruct_d65495c1 _field7;
} Timer_68adb7de;

typedef struct ?<WebCore::Frame> {
    void **_vptr$TimerBase;
    double m_nextFireTime;
    double m_repeatInterval;
    int m_heapIndex;
    unsigned int m_heapInsertionOrder;
    struct Frame *m_object;
    CDStruct_48e28a24 m_function;
} Timer_d9443f38;

typedef struct ?<WebCore::FrameLoader> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct FrameLoader *_field6;
    CDStruct_d65495c1 _field7;
} Timer_7284dac0;

typedef struct ?<WebCore::FrameLoader> {
    void **_vptr$TimerBase;
    double m_nextFireTime;
    double m_repeatInterval;
    int m_heapIndex;
    unsigned int m_heapInsertionOrder;
    struct FrameLoader *m_object;
    CDStruct_48e28a24 m_function;
} Timer_30282377;

typedef struct ?<WebCore::InspectorController> {
    void **_field1;
    double _field2;
    double _field3;
    int _field4;
    unsigned int _field5;
    struct InspectorController *_field6;
    CDStruct_d65495c1 _field7;
} Timer_d6fa20d7;

typedef struct ?<WebCore::InspectorController> {
    void **_vptr$TimerBase;
    double m_nextFireTime;
    double m_repeatInterval;
    int m_heapIndex;
    unsigned int m_heapInsertionOrder;
    struct InspectorController *m_object;
    CDStruct_48e28a24 m_function;
} Timer_ddf91ec2;

typedef struct {
    void **_field1;
    int _field2;
    struct Page *_field3;
    struct InspectorClient *_field4;
    struct OwnPtr<WebCore::InspectorFrontend> _field5;
    struct Page *_field6;
    struct RefPtr<WebCore::Node> _field7;
    struct RefPtr<WebCore::InspectorResource> _field8;
    struct HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>> _field9;
    struct HashSet<WebCore::String, WebCore::StringHash, WTF::HashTraits<WebCore::String>> _field10;
    struct HashMap<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*, WTF::PtrHash<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>> _field11;
    struct Vector<WebCore::ConsoleMessage*, 0ul> _field12;
    struct HashMap<WebCore::String, double, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<double>> _field13;
    struct HashMap<WebCore::String, unsigned int, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<unsigned int>> _field14;
    struct HashSet<WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>> _field15;
    struct HashSet<WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>> _field16;
    struct ExecState *_field17;
    _Bool _field18;
    int _field19;
    long long _field20;
    struct RefPtr<WebCore::Node> _field21;
    unsigned int _field22;
    _Bool _field23;
    struct ConsoleMessage *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    int _field31;
    unsigned int _field32;
    struct Timer<WebCore::InspectorController> {
        void **_field1;
        double _field2;
        double _field3;
        int _field4;
        unsigned int _field5;
        struct InspectorController *_field6;
        CDStruct_d65495c1 _field7;
    } _field33;
    struct Vector<WTF::RefPtr<JSC::Profile>, 0ul> _field34;
} InspectorController_4db54e20;

typedef struct {
    void **_field1;
    struct HashCountedSet<WebCore::CachedResourceClient*, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::HashTraits<WebCore::CachedResourceClient*>> _field2;
    struct String _field3;
    struct String _field4;
    struct Request *_field5;
    struct ResourceResponse _field6;
    double _field7;
    struct RefPtr<WebCore::SharedBuffer> _field8;
    struct OwnPtr<WebCore::PurgeableBuffer> _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    double _field17;
    _Bool _field18;
    unsigned int _field19;
    int _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    struct CachedResource *_field24;
    struct CachedResource *_field25;
    struct CachedResource *_field26;
    struct CachedResource *_field27;
    struct DocLoader *_field28;
    unsigned int _field29;
    struct CachedResource *_field30;
    _Bool _field31;
    struct HashSet<WebCore::CachedResourceHandleBase*, WTF::PtrHash<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>> _field32;
    void **_field33;
    struct RefPtr<WebCore::Image> _field34;
    struct Timer<WebCore::CachedImage> {
        void **_field1;
        double _field2;
        double _field3;
        int _field4;
        unsigned int _field5;
        struct CachedImage *_field6;
        CDStruct_d65495c1 _field7;
    } _field35;
    _Bool _field36;
} CachedImage_958ba285;

typedef struct {
    int _field1;
    struct Page *_field2;
    struct FrameTree _field3;
    struct FrameLoader {
        struct Frame *_field1;
        struct FrameLoaderClient *_field2;
        int _field3;
        int _field4;
        struct RefPtr<WebCore::DocumentLoader> _field5;
        struct RefPtr<WebCore::DocumentLoader> _field6;
        struct RefPtr<WebCore::DocumentLoader> _field7;
        int _field8;
        struct PolicyCheck _field9;
        _Bool _field10;
        _Bool _field11;
        _Bool _field12;
        _Bool _field13;
        _Bool _field14;
        _Bool _field15;
        _Bool _field16;
        struct String _field17;
        _Bool _field18;
        _Bool _field19;
        struct String _field20;
        _Bool _field21;
        _Bool _field22;
        _Bool _field23;
        _Bool _field24;
        _Bool _field25;
        struct KURL _field26;
        struct KURL _field27;
        struct OwnPtr<WebCore::IconLoader> _field28;
        _Bool _field29;
        _Bool _field30;
        struct OwnPtr<WebCore::ScheduledRedirection> _field31;
        _Bool _field32;
        _Bool _field33;
        _Bool _field34;
        struct String _field35;
        struct RefPtr<WebCore::TextResourceDecoder> _field36;
        _Bool _field37;
        struct KURL _field38;
        struct Timer<WebCore::FrameLoader> {
            void **_field1;
            double _field2;
            double _field3;
            int _field4;
            unsigned int _field5;
            struct FrameLoader *_field6;
            CDStruct_d65495c1 _field7;
        } _field39;
        struct Timer<WebCore::FrameLoader> {
            void **_field1;
            double _field2;
            double _field3;
            int _field4;
            unsigned int _field5;
            struct FrameLoader *_field6;
            CDStruct_d65495c1 _field7;
        } _field40;
        struct Timer<WebCore::FrameLoader> {
            void **_field1;
            double _field2;
            double _field3;
            int _field4;
            unsigned int _field5;
            struct FrameLoader *_field6;
            CDStruct_d65495c1 _field7;
        } _field41;
        struct Frame *_field42;
        struct HashSet<WebCore::Frame*, WTF::PtrHash<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>> _field43;
        _Bool _field44;
        _Bool _field45;
        _Bool _field46;
        _Bool _field47;
        struct RefPtr<WebCore::HistoryItem> _field48;
        struct RefPtr<WebCore::HistoryItem> _field49;
        struct RefPtr<WebCore::HistoryItem> _field50;
        _Bool _field51;
    } _field4;
    struct RefPtr<WebCore::DOMWindow> _field5;
    struct HashSet<WebCore::DOMWindow*, WTF::PtrHash<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>> _field6;
    struct HTMLFrameOwnerElement *_field7;
    struct RefPtr<WebCore::FrameView> _field8;
    struct RefPtr<WebCore::Document> _field9;
    struct ScriptController _field10;
    struct String _field11;
    struct String _field12;
    float _field13;
    int _field14;
    struct SelectionController _field15;
    struct VisibleSelection _field16;
    struct Timer<WebCore::Frame> {
        void **_field1;
        double _field2;
        double _field3;
        int _field4;
        unsigned int _field5;
        struct Frame *_field6;
        CDStruct_d65495c1 _field7;
    } _field17;
    struct Editor _field18;
    struct EventHandler {
        struct Frame *_field1;
        _Bool _field2;
        _Bool _field3;
        struct RefPtr<WebCore::Node> _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
        struct IntPoint _field9;
        struct IntPoint _field10;
        _Bool _field11;
        struct Timer<WebCore::EventHandler> {
            void **_field1;
            double _field2;
            double _field3;
            int _field4;
            unsigned int _field5;
            struct EventHandler *_field6;
            CDStruct_d65495c1 _field7;
        } _field12;
        struct Timer<WebCore::EventHandler> {
            void **_field1;
            double _field2;
            double _field3;
            int _field4;
            unsigned int _field5;
            struct EventHandler *_field6;
            CDStruct_d65495c1 _field7;
        } _field13;
        struct RenderObject *_field14;
        _Bool _field15;
        _Bool _field16;
        _Bool _field17;
        _Bool _field18;
        struct RefPtr<WebCore::SVGElementInstance> _field19;
        struct RefPtr<WebCore::SVGElementInstance> _field20;
        struct RenderLayer *_field21;
        struct RefPtr<WebCore::Node> _field22;
        struct RefPtr<WebCore::Node> _field23;
        struct RefPtr<WebCore::Node> _field24;
        struct RefPtr<WebCore::Frame> _field25;
        struct RefPtr<WebCore::Scrollbar> _field26;
        int _field27;
        struct RefPtr<WebCore::Node> _field28;
        struct RefPtr<WebCore::Node> _field29;
        struct RefPtr<WebCore::HTMLFrameSetElement> _field30;
        struct IntSize _field31;
        struct IntPoint _field32;
        struct IntPoint _field33;
        double _field34;
        struct PlatformMouseEvent _field35;
        _Bool _field36;
        struct RefPtr<WebCore::Node> _field37;
        _Bool _field38;
        struct RefPtr<WebCore::Node> _field39;
        id _field40;
        _Bool _field41;
        int _field42;
    } _field19;
    struct AnimationController _field20;
    struct RefPtr<WebCore::CSSMutableStyleDeclaration> _field21;
    struct Timer<WebCore::Frame> {
        void **_field1;
        double _field2;
        double _field3;
        int _field4;
        unsigned int _field5;
        struct Frame *_field6;
        CDStruct_d65495c1 _field7;
    } _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    struct UserStyleSheetLoader *_field30;
} Frame_aaa6dbb2;

typedef struct {
    int _field1;
    struct Page *_field2;
    struct FrameTree _field3;
    struct FrameLoader {
        struct Frame *m_frame;
        struct FrameLoaderClient *m_client;
        int m_state;
        int m_loadType;
        struct RefPtr<WebCore::DocumentLoader> m_documentLoader;
        struct RefPtr<WebCore::DocumentLoader> m_provisionalDocumentLoader;
        struct RefPtr<WebCore::DocumentLoader> m_policyDocumentLoader;
        int m_policyLoadType;
        struct PolicyCheck m_policyCheck;
        _Bool m_delegateIsHandlingProvisionalLoadError;
        _Bool m_delegateIsDecidingNavigationPolicy;
        _Bool m_delegateIsHandlingUnimplementablePolicy;
        _Bool m_firstLayoutDone;
        _Bool m_quickRedirectComing;
        _Bool m_sentRedirectNotification;
        _Bool m_inStopAllLoaders;
        struct String m_outgoingReferrer;
        _Bool m_isExecutingJavaScriptFormAction;
        _Bool m_isRunningScript;
        struct String m_responseMIMEType;
        _Bool m_didCallImplicitClose;
        _Bool m_wasUnloadEventEmitted;
        _Bool m_unloadEventBeingDispatched;
        _Bool m_isComplete;
        _Bool m_isLoadingMainResource;
        struct KURL m_URL;
        struct KURL m_workingURL;
        struct OwnPtr<WebCore::IconLoader> m_iconLoader;
        _Bool m_mayLoadIconLater;
        _Bool m_cancellingWithLoadInProgress;
        struct OwnPtr<WebCore::ScheduledRedirection> m_scheduledRedirection;
        _Bool m_needsClear;
        _Bool m_receivedData;
        _Bool m_encodingWasChosenByUser;
        struct String m_encoding;
        struct RefPtr<WebCore::TextResourceDecoder> m_decoder;
        _Bool m_containsPlugIns;
        struct KURL m_submittedFormURL;
        Timer_30282377 m_redirectionTimer;
        Timer_30282377 m_checkCompletedTimer;
        Timer_30282377 m_checkLoadCompleteTimer;
        struct Frame *m_opener;
        struct HashSet<WebCore::Frame*, WTF::PtrHash<WebCore::Frame*>, WTF::HashTraits<WebCore::Frame*>> m_openedFrames;
        _Bool m_openedByDOM;
        _Bool m_creatingInitialEmptyDocument;
        _Bool m_isDisplayingInitialEmptyDocument;
        _Bool m_committedFirstRealDocumentLoad;
        struct RefPtr<WebCore::HistoryItem> m_currentHistoryItem;
        struct RefPtr<WebCore::HistoryItem> m_previousHistoryItem;
        struct RefPtr<WebCore::HistoryItem> m_provisionalHistoryItem;
        _Bool m_didPerformFirstNavigation;
    } _field4;
    struct RefPtr<WebCore::DOMWindow> _field5;
    struct HashSet<WebCore::DOMWindow*, WTF::PtrHash<WebCore::DOMWindow*>, WTF::HashTraits<WebCore::DOMWindow*>> _field6;
    struct HTMLFrameOwnerElement *_field7;
    struct RefPtr<WebCore::FrameView> _field8;
    struct RefPtr<WebCore::Document> _field9;
    struct ScriptController _field10;
    struct String _field11;
    struct String _field12;
    float _field13;
    int _field14;
    struct SelectionController _field15;
    struct VisibleSelection _field16;
    Timer_d9443f38 _field17;
    struct Editor _field18;
    struct EventHandler {
        struct Frame *m_frame;
        _Bool m_mousePressed;
        _Bool m_capturesDragging;
        struct RefPtr<WebCore::Node> m_mousePressNode;
        _Bool m_mouseDownMayStartSelect;
        _Bool m_mouseDownMayStartDrag;
        _Bool m_mouseDownWasSingleClickInSelection;
        _Bool m_beganSelectingText;
        struct IntPoint m_dragStartPos;
        struct IntPoint m_panScrollStartPos;
        _Bool m_panScrollInProgress;
        Timer_f040cd92 m_hoverTimer;
        Timer_f040cd92 m_autoscrollTimer;
        struct RenderObject *m_autoscrollRenderer;
        _Bool m_autoscrollInProgress;
        _Bool m_mouseDownMayStartAutoscroll;
        _Bool m_mouseDownWasInSubframe;
        _Bool m_svgPan;
        struct RefPtr<WebCore::SVGElementInstance> m_instanceUnderMouse;
        struct RefPtr<WebCore::SVGElementInstance> m_lastInstanceUnderMouse;
        struct RenderLayer *m_resizeLayer;
        struct RefPtr<WebCore::Node> m_capturingMouseEventsNode;
        struct RefPtr<WebCore::Node> m_nodeUnderMouse;
        struct RefPtr<WebCore::Node> m_lastNodeUnderMouse;
        struct RefPtr<WebCore::Frame> m_lastMouseMoveEventSubframe;
        struct RefPtr<WebCore::Scrollbar> m_lastScrollbarUnderMouse;
        int m_clickCount;
        struct RefPtr<WebCore::Node> m_clickNode;
        struct RefPtr<WebCore::Node> m_dragTarget;
        struct RefPtr<WebCore::HTMLFrameSetElement> m_frameSetBeingResized;
        struct IntSize m_offsetFromResizeCorner;
        struct IntPoint m_currentMousePosition;
        struct IntPoint m_mouseDownPos;
        double m_mouseDownTimestamp;
        struct PlatformMouseEvent m_mouseDown;
        _Bool m_useLatchedWheelEventNode;
        struct RefPtr<WebCore::Node> m_latchedWheelEventNode;
        _Bool m_widgetIsLatched;
        struct RefPtr<WebCore::Node> m_previousWheelScrolledNode;
        NSView *m_mouseDownView;
        _Bool m_sendingEventToSubview;
        int m_activationEventNumber;
    } _field19;
    struct AnimationController _field20;
    struct RefPtr<WebCore::CSSMutableStyleDeclaration> _field21;
    Timer_d9443f38 _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    struct UserStyleSheetLoader *_field30;
} Frame_b3f6c78b;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    long long *_field1;
} CDStruct_d65495c1;

typedef struct {
    void *__pfn;
    long long __delta;
} CDStruct_48e28a24;

// Template types
typedef struct PassRefPtr<JSC::Bindings::Instance> {
    struct Instance *_field1;
} PassRefPtr_10ecef58;

typedef struct PassRefPtr<JSC::Bindings::RootObject> {
    struct RootObject *_field1;
} PassRefPtr_8e019d1c;

typedef struct PassRefPtr<WebCore::ArchiveResource> {
    struct ArchiveResource *_field1;
} PassRefPtr_43de0ce5;

typedef struct PassRefPtr<WebCore::BackForwardList> {
    struct BackForwardList *_field1;
} PassRefPtr_bc1f952d;

typedef struct PassRefPtr<WebCore::EditCommand> {
    struct EditCommand *_field1;
} PassRefPtr_67e60641;

typedef struct PassRefPtr<WebCore::FileChooser> {
    struct FileChooser *_field1;
} PassRefPtr_2f7011b9;

typedef struct PassRefPtr<WebCore::Frame> {
    struct Frame *_field1;
} PassRefPtr_4af616b4;

typedef struct PassRefPtr<WebCore::HTMLPlugInElement> {
    struct HTMLPlugInElement *_field1;
} PassRefPtr_145026a0;

typedef struct PassRefPtr<WebCore::HistoryItem> {
    struct HistoryItem *_field1;
} PassRefPtr_b1663a8c;

typedef struct PassRefPtr<WebCore::IconFetcher> {
    struct IconFetcher *_field1;
} PassRefPtr_8ac8f013;

typedef struct PassRefPtr<WebCore::LegacyWebArchive> {
    struct LegacyWebArchive *_field1;
} PassRefPtr_d33dc2c2;

typedef struct PassRefPtr<WebCore::Range> {
    struct Range *_field1;
} PassRefPtr_d7fc6f43;

typedef struct PassRefPtr<WebDocumentLoaderMac> {
    struct WebDocumentLoaderMac *_field1;
} PassRefPtr_a1b5a79e;

typedef struct Vector<WebCore::Node*, 0ul> {
    unsigned long long _field1;
    struct VectorBuffer<WebCore::Node*, 0ul> _field2;
} Vector_37bbce44;

#pragma mark Named Unions

union PluginPort {
    struct NP_CGContext cgPort;
};

#pragma mark -

/*
 * File: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 531.22.7, Compatibility version: 1.0.0
 *
 *       Objective-C Garbage Collection: Supported
 */

@protocol NSCoding
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
- (BOOL)control:(id)arg1 textShouldEndEditing:(id)arg2;
- (BOOL)control:(id)arg1 didFailToFormatString:(id)arg2 errorDescription:(id)arg3;
- (void)control:(id)arg1 didFailToValidatePartialString:(id)arg2 errorDescription:(id)arg3;
- (BOOL)control:(id)arg1 isValidObject:(id)arg2;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)description;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (id)tableView:(id)arg1 namesOfPromisedFilesDroppedAtDestination:(id)arg2 forDraggedRowsWithIndexes:(id)arg3;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (BOOL)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)selectionShouldChangeInTableView:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectTableColumn:(id)arg2;
- (void)tableView:(id)arg1 mouseDownInHeaderOfTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didClickTableColumn:(id)arg2;
- (void)tableView:(id)arg1 didDragTableColumn:(id)arg2;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 typeSelectStringForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)tableView:(id)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(id)arg4;
- (BOOL)tableView:(id)arg1 shouldTypeSelectForEvent:(id)arg2 withCurrentSearchString:(id)arg3;
- (BOOL)tableView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 shouldTrackCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 dataCellForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (double)tableView:(id)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)tableViewColumnDidResize:(id)arg1;
- (void)tableViewSelectionIsChanging:(id)arg1;
@end

@protocol NSTextInput
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long long)conversationIdentifier;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)validAttributesForMarkedText;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id)arg1;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (BOOL)windowShouldClose:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (id)windowWillReturnUndoManager:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (void)windowDidResize:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
@end

@protocol WebCoreFrameScrollView
- (void)setScrollingModes:(int)arg1 vertical:(int)arg2 andLock:(BOOL)arg3;
- (void)scrollingModes:(int *)arg1 vertical:(int *)arg2;
- (void)setScrollBarsSuppressed:(BOOL)arg1 repaintOnUnsuppress:(BOOL)arg2;
@end

@protocol WebCoreFrameView
- (struct Frame *)_web_frame;
@end

@protocol WebCorePluginInfo <NSObject>
- (id)name;
- (id)filename;
- (id)pluginDescription;
- (id)MIMETypeEnumerator;
- (id)descriptionForMIMEType:(id)arg1;
- (id)extensionsForMIMEType:(id)arg1;
@end

@protocol WebCoreViewFactory
- (id)pluginsInfo;
- (void)refreshPlugins;
- (id)inputElementAltText;
- (id)resetButtonDefaultLabel;
- (id)searchableIndexIntroduction;
- (id)submitButtonDefaultLabel;
- (id)fileButtonChooseFileLabel;
- (id)fileButtonNoFileSelectedLabel;
- (id)copyImageUnknownFileLabel;
- (id)contextMenuItemTagOpenLinkInNewWindow;
- (id)contextMenuItemTagDownloadLinkToDisk;
- (id)contextMenuItemTagCopyLinkToClipboard;
- (id)contextMenuItemTagOpenImageInNewWindow;
- (id)contextMenuItemTagDownloadImageToDisk;
- (id)contextMenuItemTagCopyImageToClipboard;
- (id)contextMenuItemTagOpenFrameInNewWindow;
- (id)contextMenuItemTagCopy;
- (id)contextMenuItemTagGoBack;
- (id)contextMenuItemTagGoForward;
- (id)contextMenuItemTagStop;
- (id)contextMenuItemTagReload;
- (id)contextMenuItemTagCut;
- (id)contextMenuItemTagPaste;
- (id)contextMenuItemTagNoGuessesFound;
- (id)contextMenuItemTagIgnoreSpelling;
- (id)contextMenuItemTagLearnSpelling;
- (id)contextMenuItemTagSearchInSpotlight;
- (id)contextMenuItemTagSearchWeb;
- (id)contextMenuItemTagLookUpInDictionary;
- (id)contextMenuItemTagOpenLink;
- (id)contextMenuItemTagIgnoreGrammar;
- (id)contextMenuItemTagSpellingMenu;
- (id)contextMenuItemTagShowSpellingPanel:(_Bool)arg1;
- (id)contextMenuItemTagCheckSpelling;
- (id)contextMenuItemTagCheckSpellingWhileTyping;
- (id)contextMenuItemTagCheckGrammarWithSpelling;
- (id)contextMenuItemTagFontMenu;
- (id)contextMenuItemTagShowFonts;
- (id)contextMenuItemTagBold;
- (id)contextMenuItemTagItalic;
- (id)contextMenuItemTagUnderline;
- (id)contextMenuItemTagOutline;
- (id)contextMenuItemTagStyles;
- (id)contextMenuItemTagShowColors;
- (id)contextMenuItemTagSpeechMenu;
- (id)contextMenuItemTagStartSpeaking;
- (id)contextMenuItemTagStopSpeaking;
- (id)contextMenuItemTagWritingDirectionMenu;
- (id)contextMenuItemTagTextDirectionMenu;
- (id)contextMenuItemTagDefaultDirection;
- (id)contextMenuItemTagLeftToRight;
- (id)contextMenuItemTagRightToLeft;
- (id)contextMenuItemTagCorrectSpellingAutomatically;
- (id)contextMenuItemTagSubstitutionsMenu;
- (id)contextMenuItemTagShowSubstitutions:(_Bool)arg1;
- (id)contextMenuItemTagSmartCopyPaste;
- (id)contextMenuItemTagSmartQuotes;
- (id)contextMenuItemTagSmartDashes;
- (id)contextMenuItemTagSmartLinks;
- (id)contextMenuItemTagTextReplacement;
- (id)contextMenuItemTagTransformationsMenu;
- (id)contextMenuItemTagMakeUpperCase;
- (id)contextMenuItemTagMakeLowerCase;
- (id)contextMenuItemTagCapitalize;
- (id)contextMenuItemTagChangeBack:(id)arg1;
- (id)contextMenuItemTagInspectElement;
- (id)searchMenuNoRecentSearchesText;
- (id)searchMenuRecentSearchesText;
- (id)searchMenuClearRecentSearchesText;
- (id)defaultLanguageCode;
- (id)imageTitleForFilename:(id)arg1 width:(int)arg2 height:(int)arg3;
- (BOOL)objectIsTextMarker:(id)arg1;
- (BOOL)objectIsTextMarkerRange:(id)arg1;
- (id)textMarkerWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (BOOL)getBytes:(void *)arg1 fromTextMarker:(id)arg2 length:(unsigned long long)arg3;
- (id)textMarkerRangeWithStart:(id)arg1 end:(id)arg2;
- (id)startOfTextMarkerRange:(id)arg1;
- (id)endOfTextMarkerRange:(id)arg1;
- (void)accessibilityHandleFocusChanged;
- (struct CGRect)accessibilityConvertScreenRect:(struct CGRect)arg1;
- (struct __AXUIElement *)AXUIElementForElement:(id)arg1;
- (void)unregisterUniqueIdForUIElement:(id)arg1;
- (id)AXWebAreaText;
- (id)AXLinkText;
- (id)AXListMarkerText;
- (id)AXImageMapText;
- (id)AXHeadingText;
- (id)AXDefinitionListTermText;
- (id)AXDefinitionListDefinitionText;
- (id)AXButtonActionVerb;
- (id)AXRadioButtonActionVerb;
- (id)AXTextFieldActionVerb;
- (id)AXCheckedCheckBoxActionVerb;
- (id)AXUncheckedCheckBoxActionVerb;
- (id)AXLinkActionVerb;
- (id)AXMenuListPopupActionVerb;
- (id)AXMenuListActionVerb;
- (id)multipleFileUploadTextForNumberOfFiles:(unsigned int)arg1;
- (id)unknownFileSizeText;
- (id)mediaElementLoadingStateText;
- (id)mediaElementLiveBroadcastStateText;
@end

@protocol WebDocumentDOM <NSObject>
- (id)DOMDocument;
- (BOOL)canSaveAsWebArchive;
@end

@protocol WebDocumentElement <NSObject>
- (id)elementAtPoint:(struct CGPoint)arg1;
- (id)elementAtPoint:(struct CGPoint)arg1 allowShadowContent:(BOOL)arg2;
@end

@protocol WebDocumentIncrementalSearching
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
@end

@protocol WebDocumentRepresentation <NSObject>
- (void)setDataSource:(id)arg1;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (BOOL)canProvideDocumentSource;
- (id)documentSource;
- (id)title;
@end

@protocol WebDocumentSearching <NSObject>
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
@end

@protocol WebDocumentSelection <WebDocumentText>
- (id)pasteboardTypesForSelection;
- (void)writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2;
- (id)selectionTextRects;
- (struct CGRect)selectionRect;
- (id)selectionImageForcingBlackText:(BOOL)arg1;
- (struct CGRect)selectionImageRect;
- (id)selectionView;
@end

@protocol WebDocumentText <NSObject>
- (BOOL)supportsTextEncoding;
- (id)string;
- (id)attributedString;
- (id)selectedString;
- (id)selectedAttributedString;
- (void)selectAll;
- (void)deselectAll;
@end

@protocol WebDocumentView <NSObject>
- (void)setDataSource:(id)arg1;
- (void)dataSourceUpdated:(id)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)layout;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)viewDidMoveToHostWindow;
@end

@protocol WebFormDelegate <NSObject>
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (BOOL)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (BOOL)textField:(id)arg1 shouldHandleEvent:(id)arg2 inFrame:(id)arg3;
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;
@end

@protocol WebFormSubmissionListener <NSObject>
- (void)continue;
@end

@protocol WebMultipleTextMatches <NSObject>
- (void)setMarkedTextMatchesAreHighlighted:(BOOL)arg1;
- (BOOL)markedTextMatchesAreHighlighted;
- (unsigned long long)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 limit:(unsigned long long)arg3;
- (void)unmarkAllTextMatches;
- (id)rectsForTextMatches;
@end

@protocol WebOpenPanelResultListener <NSObject>
- (void)chooseFilename:(id)arg1;
- (void)chooseFilenames:(id)arg1;
- (void)cancel;
@end

@protocol WebPluginContainerCheckController <NSObject>
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
- (id)webFrame;
- (id)webView;
@end

@protocol WebPluginManualLoader
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginViewFinishedLoading:(id)arg1;
@end

@protocol WebPolicyDecisionListener <NSObject>
- (void)use;
- (void)download;
- (void)ignore;
@end

@protocol _WebDocumentViewState <NSObject>
- (struct CGPoint)scrollPoint;
- (void)setScrollPoint:(struct CGPoint)arg1;
- (id)viewState;
- (void)setViewState:(id)arg1;
@end

@protocol _WebDocumentZooming <NSObject>
- (void)_zoomOut:(id)arg1;
- (void)_zoomIn:(id)arg1;
- (void)_resetZoom:(id)arg1;
- (BOOL)_canZoomOut;
- (BOOL)_canZoomIn;
- (BOOL)_canResetZoom;
@end

@interface WebPlaceholderModalWindow : NSWindow
{
}

- (BOOL)_wantsUserAttention;

@end

@interface WebArchive : NSObject <NSCoding, NSCopying>
{
    WebArchivePrivate *_private;
}

- (id)init;
- (id)initWithMainResource:(id)arg1 subresources:(id)arg2 subframeArchives:(id)arg3;
- (id)initWithData:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mainResource;
- (id)subresources;
- (id)subframeArchives;
- (id)data;

@end

@interface WebArchivePrivate : NSObject
{
    WebResource *cachedMainResource;
    NSArray *cachedSubresources;
    NSArray *cachedSubframeArchives;
    struct RefPtr<WebCore::LegacyWebArchive> coreArchive;
}

+ (void)initialize;
- (id)init;
- (id)initWithCoreArchive:(PassRefPtr_d33dc2c2)arg1;
- (struct LegacyWebArchive *)coreArchive;
- (void)setCoreArchive:(PassRefPtr_d33dc2c2)arg1;
- (void)dealloc;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface NonBlockingPanel : NSPanel
{
}

- (BOOL)_blocksActionWhenModal:(SEL)arg1;

@end

@interface WebAuthenticationPanel : NSObject
{
    id mainLabel;
    id panel;
    id password;
    id smallLabel;
    id username;
    id imageView;
    id remember;
    NSTextField *separateRealmLabel;
    BOOL nibLoaded;
    BOOL usingSheet;
    id callback;
    SEL selector;
    NSURLAuthenticationChallenge *challenge;
}

- (id)initWithCallback:(id)arg1 selector:(SEL)arg2;
- (void)dealloc;
- (void)cancel:(id)arg1;
- (void)logIn:(id)arg1;
- (BOOL)loadNib;
- (void)setUpForChallenge:(id)arg1;
- (void)runAsModalDialogWithChallenge:(id)arg1;
- (void)runAsSheetOnWindow:(id)arg1 withChallenge:(id)arg2;
- (void)sheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;

@end

@interface WebBackForwardList : NSObject
{
    WebBackForwardListPrivate *_private;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_close;
- (void)addItem:(id)arg1;
- (void)removeItem:(id)arg1;
- (BOOL)containsItem:(id)arg1;
- (void)goBack;
- (void)goForward;
- (void)goToItem:(id)arg1;
- (id)backItem;
- (id)currentItem;
- (id)forwardItem;
- (id)backListWithLimit:(int)arg1;
- (id)forwardListWithLimit:(int)arg1;
- (int)capacity;
- (void)setCapacity:(int)arg1;
- (id)description;
- (void)setPageCacheSize:(unsigned long long)arg1;
- (unsigned long long)pageCacheSize;
- (int)backListCount;
- (int)forwardListCount;
- (id)itemAtIndex:(int)arg1;

@end

@interface WebBaseNetscapePluginView : NSView
{
    struct RetainPtr<WebNetscapePluginPackage> _pluginPackage;
    WebFrame *_webFrame;
    int _mode;
    BOOL _triedAndFailedToCreatePlugin;
    BOOL _loadManually;
    BOOL _shouldFireTimers;
    BOOL _isStarted;
    BOOL _hasFocus;
    BOOL _isCompletelyObscured;
    struct RefPtr<WebCore::HTMLPlugInElement> _element;
    struct RetainPtr<NSString> _MIMEType;
    struct RetainPtr<NSURL> _baseURL;
    struct RetainPtr<NSURL> _sourceURL;
    long long _trackingTag;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1 pluginPackage:(id)arg2 URL:(id)arg3 baseURL:(id)arg4 MIMEType:(id)arg5 attributeKeys:(id)arg6 attributeValues:(id)arg7 loadManually:(BOOL)arg8 element:(PassRefPtr_145026a0)arg9;
- (void)dealloc;
- (void)finalize;
- (id)pluginPackage;
- (BOOL)isFlipped;
- (id)URLWithCString:(const char *)arg1;
- (id)requestWithURLCString:(const char *)arg1;
- (void)setAttributeKeys:(id)arg1 andValues:(id)arg2;
- (void)handleMouseMoved:(id)arg1;
- (void)focusChanged;
- (void)windowFocusChanged:(BOOL)arg1;
- (BOOL)createPlugin;
- (void)loadStream;
- (BOOL)shouldStop;
- (void)destroyPlugin;
- (void)updateAndSetWindow;
- (void)sendModifierEventWithKeyCode:(int)arg1 character:(BOOL)arg2;
- (void)removeTrackingRect;
- (void)resetTrackingRect;
- (void)stopTimers;
- (void)startTimers;
- (void)restartTimers;
- (struct CGRect)_windowClipRect;
- (struct CGRect)visibleRect;
- (BOOL)acceptsFirstResponder;
- (void)sendActivateEvent:(BOOL)arg1;
- (void)setHasFocus:(BOOL)arg1;
- (void)addWindowObservers;
- (void)removeWindowObservers;
- (void)start;
- (void)stop;
- (BOOL)superviewsHaveSuperviews;
- (BOOL)shouldClipOutPlugin;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)viewDidMoveToHostWindow;
- (void)windowWillClose:(id)arg1;
- (void)windowBecameKey:(id)arg1;
- (void)windowResignedKey:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)loginWindowDidSwitchFromUser:(id)arg1;
- (void)loginWindowDidSwitchToUser:(id)arg1;
- (void)preferencesHaveChanged:(id)arg1;
- (void)renewGState;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (id)dataSource;
- (id)webFrame;
- (id)webView;
- (id)currentWindow;
- (struct HTMLPlugInElement *)element;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)paste:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (BOOL)convertFromX:(double)arg1 andY:(double)arg2 space:(int)arg3 toX:(double *)arg4 andY:(double *)arg5 space:(int)arg6;
- (struct CString)resolvedURLStringForURL:(const char *)arg1 target:(const char *)arg2;
- (void)invalidatePluginContentRect:(struct CGRect)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebBasePluginPackage : NSObject <WebCorePluginInfo>
{
    NSMutableSet *pluginDatabases;
    NSString *name;
    NSString *path;
    NSString *pluginDescription;
    NSBundle *bundle;
    struct __CFBundle *cfBundle;
    NSDictionary *MIMEToDescription;
    NSDictionary *MIMEToExtensions;
    NSMutableDictionary *extensionToMIME;
    void *BP_CreatePluginMIMETypesPreferences;
}

+ (void)initialize;
+ (id)pluginWithPath:(id)arg1;
+ (id)preferredLocalizationName;
- (id)pathByResolvingSymlinksAndAliasesInPath:(id)arg1;
- (id)initWithPath:(id)arg1;
- (BOOL)getPluginInfoFromBundleAndMIMEDictionary:(id)arg1;
- (void)unload;
- (void)createPropertyListFile;
- (id)pListForPath:(id)arg1 createFile:(BOOL)arg2;
- (BOOL)getPluginInfoFromPLists;
- (BOOL)load;
- (void)dealloc;
- (void)finalize;
- (id)name;
- (id)path;
- (id)filename;
- (id)pluginDescription;
- (id)extensionEnumerator;
- (id)MIMETypeEnumerator;
- (id)descriptionForMIMEType:(id)arg1;
- (id)MIMETypeForExtension:(id)arg1;
- (id)extensionsForMIMEType:(id)arg1;
- (id)bundle;
- (void)setName:(id)arg1;
- (void)setPath:(id)arg1;
- (void)setPluginDescription:(id)arg1;
- (void)setMIMEToDescriptionDictionary:(id)arg1;
- (void)setMIMEToExtensionsDictionary:(id)arg1;
- (id)description;
- (BOOL)isQuickTimePlugIn;
- (BOOL)isJavaPlugIn;
- (BOOL)isNativeLibraryData:(id)arg1;
- (unsigned int)versionNumber;
- (void)wasAddedToPluginDatabase:(id)arg1;
- (void)wasRemovedFromPluginDatabase:(id)arg1;

@end

@interface WebCache : NSObject
{
}

+ (void)initialize;
+ (id)statistics;
+ (void)empty;
+ (void)setDisabled:(BOOL)arg1;
+ (BOOL)isDisabled;

@end

@interface WebOpenPanelResultListener : NSObject <WebOpenPanelResultListener>
{
    struct FileChooser *_chooser;
}

- (id)initWithChooser:(PassRefPtr_2f7011b9)arg1;
- (void)cancel;
- (void)chooseFilename:(id)arg1;
- (void)chooseFilenames:(id)arg1;

@end

@interface WebClipView : NSClipView
{
    BOOL _haveAdditionalClip;
    struct CGRect _additionalClip;
}

- (id)initWithFrame:(struct CGRect)arg1;
- (void)resetAdditionalClip;
- (void)setAdditionalClip:(struct CGRect)arg1;
- (BOOL)hasAdditionalClip;
- (struct CGRect)additionalClip;
- (struct CGRect)_focusRingVisibleRect;
- (void)scrollWheel:(id)arg1;

@end

@interface WebCoreStatistics : NSObject
{
}

+ (id)statistics;
+ (unsigned long long)javaScriptObjectsCount;
+ (unsigned long long)javaScriptGlobalObjectsCount;
+ (unsigned long long)javaScriptProtectedObjectsCount;
+ (unsigned long long)javaScriptProtectedGlobalObjectsCount;
+ (id)javaScriptProtectedObjectTypeCounts;
+ (void)garbageCollectJavaScriptObjects;
+ (void)garbageCollectJavaScriptObjectsOnAlternateThreadForDebugging:(BOOL)arg1;
+ (unsigned long long)iconPageURLMappingCount;
+ (unsigned long long)iconRetainedPageURLCount;
+ (unsigned long long)iconRecordCount;
+ (unsigned long long)iconsWithDataCount;
+ (unsigned long long)cachedFontDataCount;
+ (unsigned long long)cachedFontDataInactiveCount;
+ (void)purgeInactiveFontData;
+ (unsigned long long)glyphPageCount;
+ (BOOL)shouldPrintExceptions;
+ (void)setShouldPrintExceptions:(BOOL)arg1;
+ (void)emptyCache;
+ (void)setCacheDisabled:(BOOL)arg1;
+ (void)startIgnoringWebCoreNodeLeaks;
+ (void)stopIgnoringWebCoreNodeLeaks;
+ (id)memoryStatistics;
+ (void)returnFreeMemoryToSystem;
+ (unsigned long long)javaScriptNoGCAllowedObjectsCount;
+ (unsigned long long)javaScriptReferencedObjectsCount;
+ (id)javaScriptRootObjectClasses;
+ (unsigned long long)javaScriptInterpretersCount;
+ (id)javaScriptRootObjectTypeCounts;

@end

@interface WebDataSource : NSObject
{
    WebDataSourcePrivate *_private;
}

- (id)initWithRequest:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)data;
- (id)representation;
- (id)webFrame;
- (id)initialRequest;
- (id)request;
- (id)response;
- (id)textEncodingName;
- (BOOL)isLoading;
- (id)pageTitle;
- (id)unreachableURL;
- (id)webArchive;
- (id)mainResource;
- (id)subresources;
- (id)subresourceForURL:(id)arg1;
- (void)addSubresource:(id)arg1;

@end

@interface WebDataSourcePrivate : NSObject
{
    struct WebDocumentLoaderMac *loader;
    id <WebDocumentRepresentation> representation;
    BOOL representationFinishedLoading;
}

+ (void)initialize;
- (void)dealloc;
- (void)finalize;

@end

@interface WebDatabaseManager : NSObject
{
}

+ (id)sharedWebDatabaseManager;
- (id)origins;
- (id)databasesWithOrigin:(id)arg1;
- (id)detailsForDatabase:(id)arg1 withOrigin:(id)arg2;
- (void)deleteAllDatabases;
- (void)deleteOrigin:(id)arg1;
- (void)deleteDatabase:(id)arg1 withOrigin:(id)arg2;

@end

@interface WebDefaultEditingDelegate : NSObject
{
}

+ (id)sharedEditingDelegate;
- (BOOL)webView:(id)arg1 shouldShowDeleteInterfaceForElement:(id)arg2;
- (BOOL)webView:(id)arg1 shouldBeginEditingInDOMRange:(id)arg2;
- (BOOL)webView:(id)arg1 shouldEndEditingInDOMRange:(id)arg2;
- (BOOL)webView:(id)arg1 shouldInsertNode:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (BOOL)webView:(id)arg1 shouldInsertText:(id)arg2 replacingDOMRange:(id)arg3 givenAction:(int)arg4;
- (BOOL)webView:(id)arg1 shouldDeleteDOMRange:(id)arg2;
- (BOOL)webView:(id)arg1 shouldChangeSelectedDOMRange:(id)arg2 toDOMRange:(id)arg3 affinity:(unsigned long long)arg4 stillSelecting:(BOOL)arg5;
- (BOOL)webView:(id)arg1 shouldApplyStyle:(id)arg2 toElementsInDOMRange:(id)arg3;
- (BOOL)webView:(id)arg1 shouldMoveRangeAfterDelete:(id)arg2 replacingRange:(id)arg3;
- (BOOL)webView:(id)arg1 shouldChangeTypingStyle:(id)arg2 toStyle:(id)arg3;
- (BOOL)webView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (void)webView:(id)arg1 didWriteSelectionToPasteboard:(id)arg2;
- (void)webView:(id)arg1 didSetSelectionTypesForPasteboard:(id)arg2;
- (void)webViewDidBeginEditing:(id)arg1;
- (void)webViewDidChange:(id)arg1;
- (void)webViewDidEndEditing:(id)arg1;
- (void)webViewDidChangeTypingStyle:(id)arg1;
- (void)webViewDidChangeSelection:(id)arg1;
- (id)undoManagerForWebView:(id)arg1;

@end

@interface WebDefaultPolicyDelegate : NSObject
{
}

+ (id)sharedPolicyDelegate;
- (void)webView:(id)arg1 unableToImplementPolicyWithError:(id)arg2 frame:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (BOOL)webView:(id)arg1 shouldGoToHistoryItem:(id)arg2;

@end

@interface WebDefaultUIDelegate : NSObject
{
    NSMenu *defaultMenu;
}

+ (id)sharedUIDelegate;
- (id)webView:(id)arg1 createWebViewWithRequest:(id)arg2 windowFeatures:(id)arg3;
- (void)webViewShow:(id)arg1;
- (void)webViewClose:(id)arg1;
- (void)webViewFocus:(id)arg1;
- (void)webViewUnfocus:(id)arg1;
- (id)webViewFirstResponder:(id)arg1;
- (void)webView:(id)arg1 makeFirstResponder:(id)arg2;
- (void)webView:(id)arg1 setStatusText:(id)arg2;
- (id)webViewStatusText:(id)arg1;
- (void)webView:(id)arg1 mouseDidMoveOverElement:(id)arg2 modifierFlags:(unsigned long long)arg3;
- (BOOL)webViewAreToolbarsVisible:(id)arg1;
- (void)webView:(id)arg1 setToolbarsVisible:(BOOL)arg2;
- (BOOL)webViewIsStatusBarVisible:(id)arg1;
- (void)webView:(id)arg1 setStatusBarVisible:(BOOL)arg2;
- (BOOL)webViewIsResizable:(id)arg1;
- (void)webView:(id)arg1 setResizable:(BOOL)arg2;
- (void)webView:(id)arg1 setFrame:(struct CGRect)arg2;
- (struct CGRect)webViewFrame:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (BOOL)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (id)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4;
- (void)webView:(id)arg1 runOpenPanelForFileButtonWithResultListener:(id)arg2;
- (void)webView:(id)arg1 printFrameView:(id)arg2;
- (BOOL)webView:(id)arg1 shouldBeginDragForElement:(id)arg2 dragImage:(id)arg3 mouseDownEvent:(id)arg4 mouseDraggedEvent:(id)arg5;
- (unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2;
- (void)webView:(id)arg1 willPerformDragDestinationAction:(int)arg2 forDraggingInfo:(id)arg3;
- (unsigned long long)webView:(id)arg1 dragSourceActionMaskForPoint:(struct CGPoint)arg2;
- (void)webView:(id)arg1 willPerformDragSourceAction:(int)arg2 fromPoint:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (void)webView:(id)arg1 didDrawRect:(struct CGRect)arg2;
- (void)webView:(id)arg1 didScrollDocumentInFrameView:(id)arg2;
- (void)webView:(id)arg1 willPopupMenu:(id)arg2;
- (void)webView:(id)arg1 contextMenuItemSelected:(id)arg2 forElement:(id)arg3;
- (BOOL)webView:(id)arg1 shouldReplaceUploadFile:(id)arg2 usingGeneratedFilename:(id *)arg3;
- (id)webView:(id)arg1 generateReplacementFile:(id)arg2;

@end

@interface WebDynamicScrollBarsView : NSScrollView
{
    int hScroll;
    int vScroll;
    BOOL hScrollModeLocked;
    BOOL vScrollModeLocked;
    BOOL suppressLayout;
    BOOL suppressScrollers;
    BOOL inUpdateScrollers;
    BOOL verticallyPinnedByPreviousWheelEvent;
    BOOL horizontallyPinnedByPreviousWheelEvent;
    unsigned int inUpdateScrollersLayoutPass;
}

- (void)setAllowsHorizontalScrolling:(BOOL)arg1;

@end

@interface WebEditorUndoTarget : NSObject
{
}

- (void)undoEditing:(id)arg1;
- (void)redoEditing:(id)arg1;

@end

@interface WebEditCommand : NSObject
{
    struct RefPtr<WebCore::EditCommand> m_command;
}

+ (void)initialize;
+ (id)commandWithEditCommand:(PassRefPtr_67e60641)arg1;
- (id)initWithEditCommand:(PassRefPtr_67e60641)arg1;
- (void)dealloc;
- (void)finalize;
- (struct EditCommand *)command;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebElementDictionary : NSDictionary
{
    struct HitTestResult *_result;
    NSMutableDictionary *_cache;
    NSMutableSet *_nilValues;
    BOOL _cacheComplete;
}

+ (void)initialize;
+ (void)initializeLookupTable;
- (id)initWithHitTestResult:(const struct HitTestResult *)arg1;
- (void)dealloc;
- (void)finalize;
- (void)_fillCache;
- (unsigned long long)count;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (id)_domNode;
- (id)_webFrame;
- (id)_altDisplayString;
- (id)_spellingToolTip;
- (id)_image;
- (id)_imageRect;
- (id)_absoluteImageURL;
- (id)_isSelected;
- (id)_title;
- (id)_absoluteLinkURL;
- (id)_targetWebFrame;
- (id)_titleDisplayString;
- (id)_textContent;
- (id)_isLiveLink;
- (id)_isContentEditable;

@end

@interface WebFormDelegate : NSObject <WebFormDelegate>
{
}

+ (id)_sharedWebFormDelegate;
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (BOOL)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (BOOL)textField:(id)arg1 shouldHandleEvent:(id)arg2 inFrame:(id)arg3;
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;

@end

@interface WebFrame : NSObject
{
    WebFramePrivate *_private;
}

- (id)init;
- (id)initWithName:(id)arg1 webFrameView:(id)arg2 webView:(id)arg3;
- (void)dealloc;
- (void)finalize;
- (id)name;
- (id)frameView;
- (id)webView;
- (id)DOMDocument;
- (id)frameElement;
- (id)provisionalDataSource;
- (id)dataSource;
- (void)loadRequest:(id)arg1;
- (void)_loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 unreachableURL:(id)arg5;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)_loadHTMLString:(id)arg1 baseURL:(id)arg2 unreachableURL:(id)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)loadArchive:(id)arg1;
- (void)stopLoading;
- (void)reload;
- (void)reloadFromOrigin;
- (id)findFrameNamed:(id)arg1;
- (id)parentFrame;
- (id)childFrames;
- (id)windowObject;
- (struct OpaqueJSContext *)globalContext;

@end

@interface WebFramePrivate : NSObject
{
    Frame_b3f6c78b *coreFrame;
    WebFrameView *webFrameView;
    struct WebScriptDebugger *scriptDebugger;
    id internalLoadDelegate;
    BOOL shouldCreateRenderers;
}

- (void)dealloc;
- (void)finalize;
- (void)setWebFrameView:(id)arg1;

@end

@interface WebFramePolicyListener : NSObject <WebPolicyDecisionListener, WebFormSubmissionListener>
{
    Frame_b3f6c78b *m_frame;
}

+ (void)initialize;
- (id)initWithWebCoreFrame:(struct Frame *)arg1;
- (void)invalidate;
- (void)dealloc;
- (void)finalize;
- (void)receivedPolicyDecision:(int)arg1;
- (void)ignore;
- (void)download;
- (void)use;
- (void)continue;

@end

@interface WebFrameView : NSView
{
    WebFrameViewPrivate *_private;
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (id)webFrame;
- (void)setAllowsScrolling:(BOOL)arg1;
- (BOOL)allowsScrolling;
- (id)documentView;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setNextKeyView:(id)arg1;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)visibleRect;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewDidMoveToWindow;
- (BOOL)_scrollOverflowInDirection:(int)arg1 granularity:(int)arg2;
- (BOOL)_scrollToBeginningOfDocument;
- (BOOL)_scrollToEndOfDocument;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)_goBack;
- (void)_goForward;
- (BOOL)_scrollVerticallyBy:(float)arg1;
- (BOOL)_scrollHorizontallyBy:(float)arg1;
- (float)_horizontalKeyboardScrollDistance;
- (float)_horizontalPageScrollDistance;
- (BOOL)_pageVertically:(BOOL)arg1;
- (BOOL)_pageHorizontally:(BOOL)arg1;
- (BOOL)_scrollLineVertically:(BOOL)arg1;
- (BOOL)_scrollLineHorizontally:(BOOL)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (BOOL)_firstResponderIsFormControl;
- (void)keyDown:(id)arg1;
- (id)_webcore_effectiveFirstResponder;
- (BOOL)canPrintHeadersAndFooters;
- (id)printOperationWithPrintInfo:(id)arg1;
- (BOOL)documentViewShouldHandlePrint;
- (void)printDocumentView;

@end

@interface WebFrameViewPrivate : NSObject
{
    WebFrame *webFrame;
    WebDynamicScrollBarsView *frameScrollView;
}

- (void)dealloc;

@end

@interface WebHTMLRepresentation : NSObject <WebDocumentRepresentation, WebDocumentDOM>
{
    WebHTMLRepresentationPrivate *_private;
}

+ (id)supportedMIMETypes;
+ (id)supportedNonImageMIMETypes;
+ (id)supportedImageMIMETypes;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)_redirectDataToManualLoader:(id)arg1 forPluginView:(id)arg2;
- (void)setDataSource:(id)arg1;
- (BOOL)_isDisplayingWebArchive;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (BOOL)canProvideDocumentSource;
- (BOOL)canSaveAsWebArchive;
- (id)documentSource;
- (id)title;
- (id)DOMDocument;
- (id)attributedText;
- (id)attributedStringFrom:(id)arg1 startOffset:(int)arg2 to:(id)arg3 endOffset:(int)arg4;
- (id)elementWithName:(id)arg1 inForm:(id)arg2;
- (BOOL)elementDoesAutoComplete:(id)arg1;
- (BOOL)elementIsPassword:(id)arg1;
- (id)formForElement:(id)arg1;
- (id)currentForm;
- (id)controlsInForm:(id)arg1;
- (id)searchForLabels:(id)arg1 beforeElement:(id)arg2;
- (id)matchLabels:(id)arg1 againstElement:(id)arg2;

@end

@interface WebHTMLRepresentationPrivate : NSObject
{
    WebDataSource *dataSource;
    BOOL hasSentResponseToPlugin;
    id <WebPluginManualLoader> manualLoader;
    NSView *pluginView;
}

@end

@interface WebResponderChainSink : NSResponder
{
    NSResponder *_lastResponderInChain;
    BOOL _receivedUnhandledCommand;
}

- (id)initWithResponderChain:(id)arg1;
- (void)detach;
- (BOOL)receivedUnhandledCommand;
- (void)noResponderFor:(SEL)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (BOOL)tryToPerform:(SEL)arg1 with:(id)arg2;

@end

@interface WebHTMLView : NSControl <WebDocumentView, WebDocumentSearching>
{
    WebHTMLViewPrivate *_private;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)callDelegateDoCommandBySelectorIfNeeded:(SEL)arg1;
- (struct Command)coreCommandBySelector:(SEL)arg1;
- (struct Command)coreCommandByName:(const char *)arg1;
- (void)executeCoreCommandBySelector:(SEL)arg1;
- (void)executeCoreCommandByName:(const char *)arg1;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)indent:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)outdent:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)setMark:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)transpose:(id)arg1;
- (void)underline:(id)arg1;
- (void)unscript:(id)arg1;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)jumpToSelection:(id)arg1;
- (long long)selectionHasStyle:(struct CSSStyleDeclaration *)arg1;
- (BOOL)validateUserInterfaceItemWithoutDelegate:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)maintainsInactiveSelection;
- (void)addMouseMovedObserver;
- (void)removeMouseMovedObserver;
- (void)addSuperviewObservers;
- (void)addWindowObservers;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)viewDidMoveToHostWindow;
- (void)addSubview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)reapplyStyles;
- (void)layoutToMinimumPageWidth:(float)arg1 maximumPageWidth:(float)arg2 adjustingViewSize:(BOOL)arg3;
- (void)layout;
- (void)rightMouseUp:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (void)clearFocus;
- (BOOL)isOpaque;
- (void)setNeedsDisplay:(BOOL)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)setNeedsToApplyStyles:(BOOL)arg1;
- (void)drawSingleRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)visibleRect;
- (BOOL)isFlipped;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (BOOL)_isSelectionEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (void)mouseDragged:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseMovedNotification:(id)arg1;
- (BOOL)needsPanelToBecomeKey;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)setDataSource:(id)arg1;
- (void)dataSourceUpdated:(id)arg1;
- (void)updateCell:(id)arg1;
- (void)_setPrinting:(BOOL)arg1 minimumPageWidth:(float)arg2 maximumPageWidth:(float)arg3 adjustViewSize:(BOOL)arg4;
- (BOOL)canPrintHeadersAndFooters;
- (void)adjustPageHeightNew:(double *)arg1 top:(double)arg2 bottom:(double)arg3 limit:(double)arg4;
- (float)_availablePaperWidthForPrintOperation:(id)arg1;
- (float)_scaleFactorForPrintOperation:(id)arg1;
- (double)_provideTotalScaleFactorForPrintOperation:(id)arg1;
- (void)setPageWidthForPrinting:(float)arg1;
- (void)_endPrintMode;
- (void)_delayedEndPrintMode:(id)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;
- (struct CGRect)rectForPage:(long long)arg1;
- (void)drawPageBorderWithSize:(struct CGSize)arg1;
- (void)beginDocument;
- (void)endDocument;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)_accessibilityParentForSubview:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (id)_selectionStartFontAttributesAsRTF;
- (id)_fontAttributesFromFontPasteboard;
- (id)_emptyStyle;
- (id)_colorAsString:(id)arg1;
- (id)_shadowAsString:(id)arg1;
- (id)_styleFromFontAttributes:(id)arg1;
- (void)_applyStyleToSelection:(id)arg1 withUndoAction:(int)arg2;
- (void)_applyParagraphStyleToSelection:(id)arg1 withUndoAction:(int)arg2;
- (BOOL)_handleStyleKeyEquivalent:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (id)_originalFontA;
- (id)_originalFontB;
- (void)_addToStyle:(id)arg1 fontA:(id)arg2 fontB:(id)arg3;
- (id)_styleFromFontManagerOperation;
- (void)changeFont:(id)arg1;
- (id)_styleForAttributeChange:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (id)_styleFromColorPanelWithSelector:(SEL)arg1;
- (int)_undoActionFromColorPanelWithSelector:(SEL)arg1;
- (void)_changeCSSColorUsingSelector:(SEL)arg1 inRange:(id)arg2;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)_changeWordCaseWithSelector:(SEL)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)complete:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)_changeSpellingToWord:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)_changeBaseWritingDirectionTo:(long long)arg1;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeBaseWritingDirectionNatural:(id)arg1;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)_updateControlTints;
- (void)_windowChangedKeyState;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseUp:(id)arg1;

@end

@interface WebHTMLViewPrivate : NSObject
{
    BOOL closed;
    BOOL needsToApplyStyles;
    BOOL ignoringMouseDraggedEvents;
    BOOL printing;
    BOOL avoidingPrintOrphan;
    BOOL observingMouseMovedNotifications;
    BOOL observingSuperviewNotifications;
    BOOL observingWindowNotifications;
    id savedSubviews;
    BOOL subviewsSetAside;
    NSView *layerHostingView;
    NSEvent *mouseDownEvent;
    BOOL handlingMouseDownEvent;
    NSEvent *keyDownEvent;
    BOOL exposeInputContext;
    struct CGPoint lastScrollPosition;
    WebPluginController *pluginController;
    NSString *toolTip;
    long long lastToolTipTag;
    id trackingRectOwner;
    void *trackingRectUserData;
    NSTimer *autoscrollTimer;
    NSEvent *autoscrollTriggerEvent;
    NSArray *pageRects;
    NSMutableDictionary *highlighters;
    WebTextCompletionController *completionController;
    BOOL transparentBackground;
    struct WebHTMLViewInterpretKeyEventsParameters *interpretKeyEventsParameters;
    BOOL receivedNOOP;
    WebDataSource *dataSource;
    struct CachedImage {
        void **;
        struct HashCountedSet<WebCore::CachedResourceClient*, WTF::PtrHash<WebCore::CachedResourceClient*>, WTF::HashTraits<WebCore::CachedResourceClient*>>;
        struct String;
        struct String;
        struct Request *;
        struct ResourceResponse;
        double;
        struct RefPtr<WebCore::SharedBuffer>;
        struct OwnPtr<WebCore::PurgeableBuffer>;
        int;
        int;
        _Bool;
        unsigned int;
        unsigned int;
        unsigned int;
        unsigned int;
        double;
        _Bool;
        unsigned int;
        int;
        _Bool;
        _Bool;
        _Bool;
        struct CachedResource *;
        struct CachedResource *;
        struct CachedResource *;
        struct CachedResource *;
        struct DocLoader *;
        unsigned int;
        struct CachedResource *;
        _Bool;
        struct HashSet<WebCore::CachedResourceHandleBase*, WTF::PtrHash<WebCore::CachedResourceHandleBase*>, WTF::HashTraits<WebCore::CachedResourceHandleBase*>>;
        void **;
        struct RefPtr<WebCore::Image>;
        Timer_61066283;
        _Bool;
    } *promisedDragTIFFDataSource;
    struct __CFRunLoopTimer *updateMouseoverTimer;
    SEL selectorForDoCommandBySelector;
}

+ (void)initialize;
- (void)dealloc;
- (void)finalize;
- (void)clear;

@end

@interface WebCoreScrollView : NSScrollView
{
}

@end

@interface WebHistory : NSObject
{
    WebHistoryPrivate *_historyPrivate;
}

+ (id)optionalSharedHistory;
+ (void)setOptionalSharedHistory:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)_sendNotification:(id)arg1 entries:(id)arg2;
- (void)removeItems:(id)arg1;
- (void)removeAllItems;
- (void)addItems:(id)arg1;
- (id)orderedLastVisitedDays;
- (id)orderedItemsLastVisitedOnDay:(id)arg1;
- (BOOL)containsURL:(id)arg1;
- (id)itemForURL:(id)arg1;
- (BOOL)loadFromURL:(id)arg1 error:(id *)arg2;
- (BOOL)saveToURL:(id)arg1 error:(id *)arg2;
- (void)setHistoryItemLimit:(int)arg1;
- (int)historyItemLimit;
- (void)setHistoryAgeInDaysLimit:(int)arg1;
- (int)historyAgeInDaysLimit;

@end

@interface WebHistoryPrivate : NSObject
{
    NSMutableDictionary *_entriesByURL;
    struct HashMap<long long int, WTF::RetainPtr<NSMutableArray>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RetainPtr<NSMutableArray>>> *_entriesByDate;
    NSMutableArray *_orderedLastVisitedDays;
    BOOL itemLimitSet;
    int itemLimit;
    BOOL ageInDaysLimitSet;
    int ageInDaysLimit;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (BOOL)findKey:(long long *)arg1 forDay:(double)arg2;
- (void)insertItem:(id)arg1 forDateKey:(long long)arg2;
- (BOOL)removeItemFromDateCaches:(id)arg1;
- (BOOL)removeItemForURLString:(id)arg1;
- (void)addItemToDateCaches:(id)arg1;
- (id)visitedURL:(id)arg1 withTitle:(id)arg2 increaseVisitCount:(BOOL)arg3;
- (BOOL)addItem:(id)arg1 discardDuplicate:(BOOL)arg2;
- (BOOL)removeItem:(id)arg1;
- (BOOL)removeItems:(id)arg1;
- (BOOL)removeAllItems;
- (void)addItems:(id)arg1;
- (id)orderedLastVisitedDays;
- (id)orderedItemsLastVisitedOnDay:(id)arg1;
- (id)itemForURLString:(id)arg1;
- (BOOL)containsURL:(id)arg1;
- (id)itemForURL:(id)arg1;
- (id)allItems;
- (void)setHistoryAgeInDaysLimit:(int)arg1;
- (int)historyAgeInDaysLimit;
- (void)setHistoryItemLimit:(int)arg1;
- (int)historyItemLimit;
- (id)ageLimitDate;
- (BOOL)loadHistoryGutsFromURL:(id)arg1 savedItemsCount:(int *)arg2 collectDiscardedItemsInto:(id)arg3 error:(id *)arg4;
- (BOOL)loadFromURL:(id)arg1 collectDiscardedItemsInto:(id)arg2 error:(id *)arg3;
- (id)data;
- (BOOL)saveToURL:(id)arg1 error:(id *)arg2;
- (void)addVisitedLinksToPageGroup:(struct PageGroup *)arg1;

@end

@interface WebWindowWatcher : NSObject
{
}

- (void)windowWillClose:(id)arg1;

@end

@interface WebHistoryItem : NSObject <NSCopying>
{
    WebHistoryItemPrivate *_private;
}

+ (void)initialize;
- (id)init;
- (id)initWithURLString:(id)arg1 title:(id)arg2 lastVisitedTimeInterval:(double)arg3;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)URLString;
- (id)originalURLString;
- (id)title;
- (void)setAlternateTitle:(id)arg1;
- (id)alternateTitle;
- (id)icon;
- (double)lastVisitedTimeInterval;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface WebHostedNetscapePluginView : WebBaseNetscapePluginView <WebPluginManualLoader, WebPluginContainerCheckController>
{
    struct RetainPtr<NSArray> _attributeKeys;
    struct RetainPtr<NSArray> _attributeValues;
    struct RetainPtr<CALayer> _pluginLayer;
    struct __WKSoftwareCARendererRef *_softwareRenderer;
    struct CGSize _previousSize;
    struct RefPtr<WebKit::NetscapePluginInstanceProxy> _proxy;
    BOOL _pluginHostDied;
}

+ (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1 pluginPackage:(id)arg2 URL:(id)arg3 baseURL:(id)arg4 MIMEType:(id)arg5 attributeKeys:(id)arg6 attributeValues:(id)arg7 loadManually:(BOOL)arg8 element:(PassRefPtr_145026a0)arg9;
- (void)handleMouseMoved:(id)arg1;
- (void)setAttributeKeys:(id)arg1 andValues:(id)arg2;
- (BOOL)createPlugin;
- (void)setLayer:(id)arg1;
- (void)loadStream;
- (void)updateAndSetWindow;
- (void)windowFocusChanged:(BOOL)arg1;
- (BOOL)shouldStop;
- (void)destroyPlugin;
- (void)startTimers;
- (void)stopTimers;
- (void)focusChanged;
- (void)windowFrameDidChange:(id)arg1;
- (void)addWindowObservers;
- (void)removeWindowObservers;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (id)inputContext;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)sendModifierEventWithKeyCode:(int)arg1 character:(BOOL)arg2;
- (void)pluginHostDied;
- (void)drawRect:(struct CGRect)arg1;
- (PassRefPtr_10ecef58)createPluginBindingsInstance:(PassRefPtr_8e019d1c)arg1;
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginViewFinishedLoading:(id)arg1;
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
- (void)_containerCheckResult:(int)arg1 contextInfo:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface ThreadEnabler : NSObject
{
}

+ (void)enableThreading;
- (void)threadEnablingSelector:(id)arg1;

@end

@interface WebIconDatabasePrivate : NSObject
{
    id delegate;
    BOOL delegateImplementsDefaultIconForURL;
    NSMutableDictionary *htmlIcons;
}

@end

@interface WebIconDatabase : NSObject
{
    WebIconDatabasePrivate *_private;
    BOOL _isClosing;
}

+ (id)sharedIconDatabase;
+ (void)delayDatabaseCleanup;
+ (void)allowDatabaseCleanup;
- (id)init;
- (id)iconForURL:(id)arg1 withSize:(struct CGSize)arg2 cache:(BOOL)arg3;
- (id)iconForURL:(id)arg1 withSize:(struct CGSize)arg2;
- (id)iconURLForURL:(id)arg1;
- (id)defaultIconWithSize:(struct CGSize)arg1;
- (id)defaultIconForURL:(id)arg1 withSize:(struct CGSize)arg2;
- (void)retainIconForURL:(id)arg1;
- (void)releaseIconForURL:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;

@end

@interface WebIconFetcher : NSObject
{
    WebIconFetcherPrivate *_private;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)cancel;

@end

@interface WebImageRendererFactory : NSObject
{
}

+ (BOOL)shouldUseThreadedDecoding;
+ (void)setShouldUseThreadedDecoding:(BOOL)arg1;

@end

@interface WebInspector : NSObject
{
    WebView *_webView;
}

- (id)initWithWebView:(id)arg1;
- (void)webViewClosed;
- (void)show:(id)arg1;
- (void)showConsole:(id)arg1;
- (void)showTimeline:(id)arg1;
- (BOOL)isDebuggingJavaScript;
- (void)toggleDebuggingJavaScript:(id)arg1;
- (void)startDebuggingJavaScript:(id)arg1;
- (void)stopDebuggingJavaScript:(id)arg1;
- (BOOL)isProfilingJavaScript;
- (void)toggleProfilingJavaScript:(id)arg1;
- (void)startProfilingJavaScript:(id)arg1;
- (void)stopProfilingJavaScript:(id)arg1;
- (BOOL)isJavaScriptProfilingEnabled;
- (void)setJavaScriptProfilingEnabled:(BOOL)arg1;
- (void)close:(id)arg1;
- (void)attach:(id)arg1;
- (void)detach:(id)arg1;

@end

@interface WebInspectorWindowController : NSWindowController <NSWindowDelegate>
{
    WebView *_inspectedWebView;
    WebView *_webView;
    WebNodeHighlight *_currentHighlight;
    BOOL _attachedToInspectedWebView;
    BOOL _shouldAttach;
    BOOL _visible;
    BOOL _movingWindows;
}

- (id)init;
- (id)initWithInspectedWebView:(id)arg1;
- (void)dealloc;
- (BOOL)inspectorVisible;
- (id)webView;
- (id)window;
- (BOOL)windowShouldClose:(id)arg1;
- (void)close;
- (void)showWindow:(id)arg1;
- (void)attach;
- (void)detach;
- (void)setAttachedWindowHeight:(unsigned int)arg1;
- (void)highlightNode:(id)arg1;
- (void)hideHighlight;
- (void)didAttachWebNodeHighlight:(id)arg1;
- (void)willDetachWebNodeHighlight:(id)arg1;
- (unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2;
- (void)showWebInspector:(id)arg1;
- (void)showErrorConsole:(id)arg1;
- (void)toggleDebuggingJavaScript:(id)arg1;
- (void)toggleProfilingJavaScript:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;

@end

@interface WebJavaScriptTextInputPanel : NSWindowController
{
    NSTextField *prompt;
    NSTextField *textInput;
}

- (id)initWithPrompt:(id)arg1 text:(id)arg2;
- (id)text;
- (void)pressedCancel:(id)arg1;
- (void)pressedOK:(id)arg1;

@end

@interface WebKeyGenerator : WebCoreKeyGenerator
{
    NSArray *strengthMenuItemTitles;
}

+ (void)createSharedGenerator;
- (void)dealloc;
- (id)strengthMenuItemTitles;
- (id)signedPublicKeyAndChallengeStringWithStrengthIndex:(unsigned int)arg1 challenge:(id)arg2 pageURL:(id)arg3;
- (int)addCertificatesToKeychainFromData:(id)arg1;

@end

@interface WebKitStatistics : NSObject
{
}

+ (int)webViewCount;
+ (int)frameCount;
+ (int)dataSourceCount;
+ (int)viewCount;
+ (int)bridgeCount;
+ (int)HTMLRepresentationCount;

@end

@interface WebMainThreadInvoker : NSProxy
{
    id target;
    id exception;
}

- (id)initWithTarget:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)handleException:(id)arg1;

@end

@interface WebNetscapePluginPackage : WebBasePluginPackage
{
    struct _NPPluginFuncs pluginFuncs;
    struct _NPNetscapeFuncs browserFuncs;
    unsigned short pluginSize;
    unsigned short pluginVersion;
    int resourceRef;
    void *NP_Shutdown;
    BOOL isLoaded;
    BOOL needsUnload;
    unsigned int instanceCount;
    int pluginHostArchitecture;
}

- (int)openResourceFile;
- (void)closeResourceFile:(int)arg1;
- (id)stringForStringListID:(short)arg1 andIndex:(short)arg2;
- (BOOL)getPluginInfoFromResources;
- (BOOL)_initWithPath:(id)arg1;
- (id)initWithPath:(id)arg1;
- (int)executableType;
- (int)pluginHostArchitecture;
- (void)createPropertyListFile;
- (void)launchRealPlayer;
- (void)_applyDjVuWorkaround;
- (void)unload;
- (BOOL)_tryLoad;
- (BOOL)load;
- (struct _NPPluginFuncs *)pluginFuncs;
- (void)wasRemovedFromPluginDatabase:(id)arg1;
- (void)open;
- (void)close;

@end

@interface WebNetscapePluginDocumentView : WebBaseNetscapePluginView <WebPluginManualLoader, WebPluginContainerCheckController>
{
    struct RefPtr<WebNetscapePluginStream> _manualStream;
    struct RetainPtr<CALayer> _pluginLayer;
    unsigned int _dataLengthReceived;
    struct RetainPtr<NSError> _error;
    unsigned int argsCount;
    char **cAttributes;
    char **cValues;
    struct _NPP *plugin;
    struct _NPWindow window;
    struct _NPWindow lastSetWindow;
    union PluginPort nPort;
    union PluginPort lastSetPort;
    int drawingModel;
    int eventModel;
    struct OwnPtr<WebNetscapePluginEventHandler> _eventHandler;
    BOOL inSetWindow;
    BOOL shouldStopSoon;
    unsigned int currentTimerID;
    struct HashMap<unsigned int, PluginTimer*, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<PluginTimer*>> *timers;
    unsigned int pluginFunctionCallDepth;
    int specifiedHeight;
    int specifiedWidth;
    struct HashSet<WTF::RefPtr<WebNetscapePluginStream>, WTF::PtrHash<WTF::RefPtr<WebNetscapePluginStream>>, WTF::HashTraits<WTF::RefPtr<WebNetscapePluginStream>>> streams;
    struct RetainPtr<NSMutableDictionary> _pendingFrameLoads;
    BOOL _isFlash;
    BOOL _isSilverlight;
    NSMutableDictionary *_containerChecksInProgress;
    unsigned int _currentContainerCheckRequestID;
}

+ (void)initialize;
+ (void)setCurrentPluginView:(id)arg1;
+ (id)currentPluginView;
- (void)fixWindowPort;
- (struct OpaquePortState *)saveAndSetNewPortStateForUpdate:(BOOL)arg1;
- (struct OpaquePortState *)saveAndSetNewPortState;
- (void)restorePortState:(struct OpaquePortState *)arg1;
- (BOOL)sendEvent:(void *)arg1 isDrawRect:(BOOL)arg2;
- (void)windowFocusChanged:(BOOL)arg1;
- (void)sendDrawRectEvent:(struct CGRect)arg1;
- (void)stopTimers;
- (void)startTimers;
- (void)focusChanged;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)handleMouseMoved:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)sendModifierEventWithKeyCode:(int)arg1 character:(BOOL)arg2;
- (BOOL)isNewWindowEqualToOldWindow;
- (void)tellQuickTimeToChill;
- (void)updateAndSetWindow;
- (void)setWindowIfNecessary;
- (BOOL)createPlugin;
- (void)setLayer:(id)arg1;
- (void)loadStream;
- (BOOL)shouldStop;
- (void)destroyPlugin;
- (int)eventModel;
- (struct _NPP *)plugin;
- (void)setAttributeKeys:(id)arg1 andValues:(id)arg2;
- (unsigned int)checkIfAllowedToLoadURL:(const char *)arg1 frame:(const char *)arg2 callbackFunc:(void *)arg3 context:(void *)arg4;
- (void)_containerCheckResult:(int)arg1 contextInfo:(id)arg2;
- (void)cancelCheckIfAllowedToLoadURL:(unsigned int)arg1;
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 pluginPackage:(id)arg2 URL:(id)arg3 baseURL:(id)arg4 MIMEType:(id)arg5 attributeKeys:(id)arg6 attributeValues:(id)arg7 loadManually:(BOOL)arg8 element:(PassRefPtr_145026a0)arg9;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)fini;
- (void)disconnectStream:(struct WebNetscapePluginStream *)arg1;
- (void)dealloc;
- (void)finalize;
- (void)drawRect:(struct CGRect)arg1;
- (struct NPObject *)createPluginScriptableObject;
- (void)willCallPlugInFunction;
- (void)didCallPlugInFunction;
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginViewFinishedLoading:(id)arg1;
- (id)inputContext;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebNodeHighlight : NSObject
{
    NSView *_targetView;
    NSWindow *_highlightWindow;
    WebNodeHighlightView *_highlightView;
    struct InspectorController {
        void **;
        int;
        struct Page *;
        struct InspectorClient *;
        struct OwnPtr<WebCore::InspectorFrontend>;
        struct Page *;
        struct RefPtr<WebCore::Node>;
        struct RefPtr<WebCore::InspectorResource>;
        struct HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>;
        struct HashSet<WebCore::String, WebCore::StringHash, WTF::HashTraits<WebCore::String>>;
        struct HashMap<WTF::RefPtr<WebCore::Frame>, WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*, WTF::PtrHash<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::RefPtr<WebCore::Frame>>, WTF::HashTraits<WTF::HashMap<long long int, WTF::RefPtr<WebCore::InspectorResource>, WTF::IntHash<long long unsigned int>, WTF::HashTraits<long long int>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorResource>>>*>>;
        struct Vector<WebCore::ConsoleMessage*, 0ul>;
        struct HashMap<WebCore::String, double, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<double>>;
        struct HashMap<WebCore::String, unsigned int, WebCore::StringHash, WTF::HashTraits<WebCore::String>, WTF::HashTraits<unsigned int>>;
        struct HashSet<WTF::RefPtr<WebCore::InspectorDatabaseResource>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDatabaseResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDatabaseResource>>>;
        struct HashSet<WTF::RefPtr<WebCore::InspectorDOMStorageResource>, WTF::PtrHash<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>, WTF::HashTraits<WTF::RefPtr<WebCore::InspectorDOMStorageResource>>>;
        struct ExecState *;
        _Bool;
        int;
        long long;
        struct RefPtr<WebCore::Node>;
        unsigned int;
        _Bool;
        struct ConsoleMessage *;
        _Bool;
        _Bool;
        _Bool;
        _Bool;
        _Bool;
        _Bool;
        int;
        unsigned int;
        Timer_ddf91ec2;
        struct Vector<WTF::RefPtr<JSC::Profile>, 0ul>;
    } *_inspectorController;
    id _delegate;
}

- (id)initWithTargetView:(id)arg1 inspectorController:(struct InspectorController *)arg2;
- (void)dealloc;
- (void)attach;
- (id)delegate;
- (void)detach;
- (id)highlightView;
- (void)setDelegate:(id)arg1;
- (void)setNeedsUpdateInTargetViewRect:(struct CGRect)arg1;
- (id)targetView;
- (struct InspectorController *)inspectorController;

@end

@interface WebNodeHighlightView : NSView
{
    WebNodeHighlight *_webNodeHighlight;
}

- (id)initWithWebNodeHighlight:(id)arg1;
- (void)dealloc;
- (void)detachFromWebNodeHighlight;
- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (id)webNodeHighlight;

@end

@interface WebNullPluginView : NSImageView
{
    NSError *error;
    DOMElement *element;
}

- (id)initWithFrame:(struct CGRect)arg1 error:(id)arg2 DOMElement:(id)arg3;
- (void)dealloc;
- (void)reportFailure;
- (void)viewDidMoveToWindow;

@end

@interface WebPDFRepresentation : NSObject <WebDocumentRepresentation>
{
}

+ (id)postScriptMIMETypes;
+ (id)supportedMIMETypes;
+ (Class)PDFDocumentClass;
- (void)setDataSource:(id)arg1;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (id)convertPostScriptDataSourceToPDF:(id)arg1;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (BOOL)canProvideDocumentSource;
- (id)documentSource;
- (id)title;

@end

@interface PDFPrefUpdatingProxy : NSProxy
{
    WebPDFView *view;
}

- (id)initWithView:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

@interface WebPDFView : NSView <WebDocumentView, WebDocumentSearching, WebDocumentIncrementalSearching, WebMultipleTextMatches, WebDocumentSelection, WebDocumentElement, _WebDocumentViewState, _WebDocumentZooming>
{
    NSView *previewView;
    PDFView *PDFSubview;
    NSString *path;
    BOOL firstResponderIsPDFDocumentView;
    BOOL written;
    BOOL _ignoreScaleAndDisplayModeAndPageNotifications;
    BOOL _willUpdatePreferencesSoon;
    PDFView *PDFSubviewProxy;
    WebDataSource *dataSource;
    NSArray *textMatches;
    struct CGPoint lastScrollPosition;
}

+ (id)PDFKitBundle;
+ (id)supportedMIMETypes;
- (void)setPDFDocument:(id)arg1;
- (void)dealloc;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)jumpToSelection:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)hitTest:(struct CGPoint)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)menuForEvent:(id)arg1;
- (void)setNextKeyView:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)validateUserInterfaceItemWithoutDelegate:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)copy:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (BOOL)canPrintHeadersAndFooters;
- (id)printOperationWithPrintInfo:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)dataSourceUpdated:(id)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)layout;
- (void)viewWillMoveToHostWindow:(id)arg1;
- (void)viewDidMoveToHostWindow;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (id)elementAtPoint:(struct CGPoint)arg1 allowShadowContent:(BOOL)arg2;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (void)setMarkedTextMatchesAreHighlighted:(BOOL)arg1;
- (BOOL)markedTextMatchesAreHighlighted;
- (unsigned long long)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 limit:(unsigned long long)arg3;
- (void)unmarkAllTextMatches;
- (id)rectsForTextMatches;
- (BOOL)supportsTextEncoding;
- (id)string;
- (id)attributedString;
- (id)selectedString;
- (id)selectedAttributedString;
- (void)selectAll;
- (void)deselectAll;
- (struct CGPoint)scrollPoint;
- (void)setScrollPoint:(struct CGPoint)arg1;
- (id)viewState;
- (void)setViewState:(id)arg1;
- (void)_zoomOut:(id)arg1;
- (void)_zoomIn:(id)arg1;
- (void)_resetZoom:(id)arg1;
- (BOOL)_canZoomOut;
- (BOOL)_canZoomIn;
- (BOOL)_canResetZoom;
- (struct CGRect)selectionRect;
- (id)selectionTextRects;
- (id)selectionView;
- (id)selectionImageForcingBlackText:(BOOL)arg1;
- (struct CGRect)selectionImageRect;
- (id)pasteboardTypesForSelection;
- (void)writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2;
- (void)PDFViewWillClickOnLink:(id)arg1 withURL:(id)arg2;
- (void)PDFViewOpenPDFInNativeApplication:(id)arg1;
- (void)PDFViewPerformPrint:(id)arg1;
- (void)PDFViewSavePDFToDownloadFolder:(id)arg1;

@end

@interface WebPanelAuthenticationHandler : NSObject
{
    NSMutableDictionary *windowToPanel;
    NSMutableDictionary *challengeToWindow;
    NSMutableDictionary *windowToChallengeQueue;
}

+ (id)sharedHandler;
- (id)init;
- (void)dealloc;
- (void)enqueueChallenge:(id)arg1 forWindow:(id)arg2;
- (void)tryNextChallengeForWindow:(id)arg1;
- (void)startAuthentication:(id)arg1 window:(id)arg2;
- (void)cancelAuthentication:(id)arg1;
- (void)_authenticationDoneWithChallenge:(id)arg1 result:(id)arg2;

@end

@interface WebPluginContainerCheck : NSObject
{
    NSURLRequest *_request;
    NSString *_target;
    id <WebPluginContainerCheckController> _controller;
    id _resultObject;
    SEL _resultSelector;
    id _contextInfo;
    BOOL _done;
    WebPolicyDecisionListener *_listener;
}

+ (id)checkWithRequest:(id)arg1 target:(id)arg2 resultObject:(id)arg3 selector:(SEL)arg4 controller:(id)arg5 contextInfo:(id)arg6;
- (id)initWithRequest:(id)arg1 target:(id)arg2 resultObject:(id)arg3 selector:(SEL)arg4 controller:(id)arg5 contextInfo:(id)arg6;
- (void)finalize;
- (void)dealloc;
- (void)_continueWithPolicy:(int)arg1;
- (BOOL)_isForbiddenFileLoad;
- (id)_actionInformationWithURL:(id)arg1;
- (void)_askPolicyDelegate;
- (void)start;
- (void)cancel;
- (id)contextInfo;

@end

@interface WebPluginController : NSObject <WebPluginManualLoader, WebPluginContainerCheckController>
{
    NSView *_documentView;
    WebDataSource *_dataSource;
    NSMutableArray *_views;
    BOOL _started;
    NSMutableSet *_checksInProgress;
}

+ (id)plugInViewWithArguments:(id)arg1 fromPluginPackage:(id)arg2;
+ (BOOL)isPlugInView:(id)arg1;
- (id)initWithDocumentView:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)dealloc;
- (void)startAllPlugins;
- (void)stopAllPlugins;
- (void)addPlugin:(id)arg1;
- (void)destroyPlugin:(id)arg1;
- (void)_webPluginContainerCancelCheckIfAllowedToLoadRequest:(id)arg1;
- (void)_cancelOutstandingChecks;
- (void)destroyAllPlugins;
- (id)_webPluginContainerCheckIfAllowedToLoadRequest:(id)arg1 inFrame:(id)arg2 resultObject:(id)arg3 selector:(SEL)arg4;
- (void)webPlugInContainerLoadRequest:(id)arg1 inFrame:(id)arg2;
- (void)showURL:(id)arg1 inFrame:(id)arg2;
- (void)webPlugInContainerShowStatus:(id)arg1;
- (void)showStatus:(id)arg1;
- (id)webPlugInContainerSelectionColor;
- (id)selectionColor;
- (id)webFrame;
- (id)webView;
- (id)URLPolicyCheckReferrer;
- (void)pluginView:(id)arg1 receivedResponse:(id)arg2;
- (void)pluginView:(id)arg1 receivedData:(id)arg2;
- (void)pluginView:(id)arg1 receivedError:(id)arg2;
- (void)pluginViewFinishedLoading:(id)arg1;

@end

@interface WebPluginDatabase : NSObject
{
    NSMutableDictionary *plugins;
    NSMutableSet *registeredMIMETypes;
    NSArray *plugInPaths;
    NSMutableSet *pluginInstanceViews;
}

+ (id)sharedDatabase;
+ (void)closeSharedDatabase;
+ (void)setAdditionalWebPlugInPaths:(id)arg1;
- (id)pluginForKey:(id)arg1 withEnumeratorSelector:(SEL)arg2;
- (id)pluginForMIMEType:(id)arg1;
- (id)pluginForExtension:(id)arg1;
- (id)plugins;
- (void)setPlugInPaths:(id)arg1;
- (void)close;
- (id)init;
- (void)dealloc;
- (void)refresh;
- (BOOL)isMIMETypeRegistered:(id)arg1;
- (void)addPluginInstanceView:(id)arg1;
- (void)removePluginInstanceView:(id)arg1;
- (void)removePluginInstanceViewsFor:(id)arg1;
- (void)destroyAllPluginInstanceViews;

@end

@interface WebPluginPackage : WebBasePluginPackage
{
}

- (id)initWithPath:(id)arg1;
- (Class)viewFactory;
- (BOOL)load;

@end

@interface WebPluginRequest : NSObject
{
    NSURLRequest *_request;
    NSString *_frameName;
    void *_notifyData;
    BOOL _didStartFromUserGesture;
    BOOL _sendNotification;
}

- (id)initWithRequest:(id)arg1 frameName:(id)arg2 notifyData:(void *)arg3 sendNotification:(BOOL)arg4 didStartFromUserGesture:(BOOL)arg5;
- (void)dealloc;
- (id)request;
- (id)frameName;
- (BOOL)isCurrentEventUserGesture;
- (BOOL)sendNotification;
- (void *)notifyData;

@end

@interface WebPolicyDecisionListener : NSObject <WebPolicyDecisionListener>
{
    WebPolicyDecisionListenerPrivate *_private;
}

- (id)_initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;
- (void)_usePolicy:(int)arg1;
- (void)_invalidate;
- (void)use;
- (void)ignore;
- (void)download;

@end

@interface WebPolicyDecisionListenerPrivate : NSObject
{
    id target;
    SEL action;
}

- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;

@end

@interface WebPreferences : NSObject <NSCoding>
{
    WebPreferencesPrivate *_private;
}

+ (id)standardPreferences;
+ (void)initialize;
- (id)init;
- (id)initWithIdentifier:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)identifier;
- (id)_valueForKey:(id)arg1;
- (id)_stringValueForKey:(id)arg1;
- (void)_setStringValue:(id)arg1 forKey:(id)arg2;
- (int)_integerValueForKey:(id)arg1;
- (void)_setIntegerValue:(int)arg1 forKey:(id)arg2;
- (float)_floatValueForKey:(id)arg1;
- (void)_setFloatValue:(float)arg1 forKey:(id)arg2;
- (BOOL)_boolValueForKey:(id)arg1;
- (void)_setBoolValue:(BOOL)arg1 forKey:(id)arg2;
- (unsigned long long)_unsignedLongLongValueForKey:(id)arg1;
- (void)_setUnsignedLongLongValue:(unsigned long long)arg1 forKey:(id)arg2;
- (id)standardFontFamily;
- (void)setStandardFontFamily:(id)arg1;
- (id)fixedFontFamily;
- (void)setFixedFontFamily:(id)arg1;
- (id)serifFontFamily;
- (void)setSerifFontFamily:(id)arg1;
- (id)sansSerifFontFamily;
- (void)setSansSerifFontFamily:(id)arg1;
- (id)cursiveFontFamily;
- (void)setCursiveFontFamily:(id)arg1;
- (id)fantasyFontFamily;
- (void)setFantasyFontFamily:(id)arg1;
- (int)defaultFontSize;
- (void)setDefaultFontSize:(int)arg1;
- (int)defaultFixedFontSize;
- (void)setDefaultFixedFontSize:(int)arg1;
- (int)minimumFontSize;
- (void)setMinimumFontSize:(int)arg1;
- (int)minimumLogicalFontSize;
- (void)setMinimumLogicalFontSize:(int)arg1;
- (id)defaultTextEncodingName;
- (void)setDefaultTextEncodingName:(id)arg1;
- (BOOL)userStyleSheetEnabled;
- (void)setUserStyleSheetEnabled:(BOOL)arg1;
- (id)userStyleSheetLocation;
- (void)setUserStyleSheetLocation:(id)arg1;
- (BOOL)shouldPrintBackgrounds;
- (void)setShouldPrintBackgrounds:(BOOL)arg1;
- (BOOL)isJavaEnabled;
- (void)setJavaEnabled:(BOOL)arg1;
- (BOOL)isJavaScriptEnabled;
- (void)setJavaScriptEnabled:(BOOL)arg1;
- (BOOL)javaScriptCanOpenWindowsAutomatically;
- (void)setJavaScriptCanOpenWindowsAutomatically:(BOOL)arg1;
- (BOOL)arePlugInsEnabled;
- (void)setPlugInsEnabled:(BOOL)arg1;
- (BOOL)allowsAnimatedImages;
- (void)setAllowsAnimatedImages:(BOOL)arg1;
- (BOOL)allowsAnimatedImageLooping;
- (void)setAllowsAnimatedImageLooping:(BOOL)arg1;
- (void)setLoadsImagesAutomatically:(BOOL)arg1;
- (BOOL)loadsImagesAutomatically;
- (void)setAutosaves:(BOOL)arg1;
- (BOOL)autosaves;
- (void)setTabsToLinks:(BOOL)arg1;
- (BOOL)tabsToLinks;
- (void)setPrivateBrowsingEnabled:(BOOL)arg1;
- (BOOL)privateBrowsingEnabled;
- (void)setUsesPageCache:(BOOL)arg1;
- (BOOL)usesPageCache;
- (void)setCacheModel:(unsigned long long)arg1;
- (unsigned long long)cacheModel;

@end

@interface WebPreferencesPrivate : NSObject
{
    NSMutableDictionary *values;
    NSString *identifier;
    NSString *IBCreatorID;
    BOOL autosaves;
    BOOL automaticallyDetectsCacheModel;
    unsigned int numWebViews;
}

- (void)dealloc;

@end

@interface WebRenderNode : NSObject
{
    NSArray *children;
    NSString *name;
    struct CGRect rect;
    struct CGPoint absolutePosition;
}

- (id)initWithName:(id)arg1 position:(struct CGPoint)arg2 rect:(struct CGRect)arg3 view:(id)arg4 children:(id)arg5;
- (id)initWithWebFrameView:(id)arg1;
- (void)dealloc;
- (id)children;
- (id)name;
- (id)absolutePositionString;
- (id)positionString;
- (id)widthString;
- (id)heightString;

@end

@interface WebResource : NSObject <NSCoding, NSCopying>
{
    WebResourcePrivate *_private;
}

- (id)init;
- (id)initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)data;
- (id)URL;
- (id)MIMEType;
- (id)textEncodingName;
- (id)frameName;
- (id)description;

@end

@interface WebResourcePrivate : NSObject
{
    struct ArchiveResource *coreResource;
}

+ (void)initialize;
- (id)init;
- (id)initWithCoreResource:(PassRefPtr_43de0ce5)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface WebScriptCallFrame : NSObject
{
    WebScriptCallFramePrivate *_private;
    id _userInfo;
}

- (void)dealloc;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (id)caller;
- (id)scopeChain;
- (id)functionName;
- (id)exception;
- (id)evaluateWebScript:(id)arg1;

@end

@interface WebScriptCallFramePrivate : NSObject
{
    WebScriptObject *globalObject;
    WebScriptCallFrame *caller;
    struct DebuggerCallFrame *debuggerCallFrame;
    struct WebScriptDebugger *debugger;
}

- (void)dealloc;

@end

@interface WebSecurityOrigin : NSObject
{
    WebSecurityOriginPrivate *_private;
}

- (id)initWithURL:(id)arg1;
- (id)protocol;
- (id)host;
- (id)domain;
- (unsigned short)port;
- (unsigned long long)usage;
- (unsigned long long)quota;
- (void)setQuota:(unsigned long long)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface WebStringTruncator : NSObject
{
}

+ (void)initialize;
+ (id)centerTruncateString:(id)arg1 toWidth:(float)arg2;
+ (id)centerTruncateString:(id)arg1 toWidth:(float)arg2 withFont:(id)arg3;
+ (id)rightTruncateString:(id)arg1 toWidth:(float)arg2 withFont:(id)arg3;
+ (float)widthOfString:(id)arg1 font:(id)arg2;

@end

@interface WebTextIterator : NSObject
{
    WebTextIteratorPrivate *_private;
}

- (void)dealloc;
- (id)initWithRange:(id)arg1;
- (void)advance;
- (BOOL)atEnd;
- (id)currentRange;
- (const unsigned short *)currentTextPointer;
- (unsigned long long)currentTextLength;

@end

@interface WebTextIteratorPrivate : NSObject
{
    struct OwnPtr<WebCore::TextIterator> _textIterator;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WebURLsWithTitles : NSObject
{
}

+ (id)arrayWithIFURLsWithTitlesPboardType;
+ (void)writeURLs:(id)arg1 andTitles:(id)arg2 toPasteboard:(id)arg3;
+ (id)titlesFromPasteboard:(id)arg1;
+ (id)URLsFromPasteboard:(id)arg1;

@end

@interface WebView : NSView
{
    WebViewPrivate *_private;
}

+ (void)initialize;
+ (void)_applicationWillTerminate;
+ (BOOL)canShowMIMEType:(id)arg1;
+ (BOOL)canShowMIMETypeAsHTML:(id)arg1;
+ (id)MIMETypesShownAsHTML;
+ (void)setMIMETypesShownAsHTML:(id)arg1;
+ (id)URLFromPasteboard:(id)arg1;
+ (id)URLTitleFromPasteboard:(id)arg1;
+ (void)registerURLSchemeAsLocal:(id)arg1;
+ (void)registerViewClass:(Class)arg1 representationClass:(Class)arg2 forMIMEType:(id)arg3;
- (id)_pluginForMIMEType:(id)arg1;
- (id)_pluginForExtension:(id)arg1;
- (void)addPluginInstanceView:(id)arg1;
- (void)removePluginInstanceView:(id)arg1;
- (void)removePluginInstanceViewsFor:(id)arg1;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)arg1;
- (id)_initWithArguments:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)close;
- (void)setShouldCloseWithWindow:(BOOL)arg1;
- (BOOL)shouldCloseWithWindow;
- (void)addWindowObserversForWindow:(id)arg1;
- (void)removeWindowObservers;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)_windowDidBecomeKey:(id)arg1;
- (void)_windowDidResignKey:(id)arg1;
- (void)_windowWillOrderOnScreen:(id)arg1;
- (void)_windowWillClose:(id)arg1;
- (void)setPreferences:(id)arg1;
- (id)preferences;
- (void)setPreferencesIdentifier:(id)arg1;
- (id)preferencesIdentifier;
- (void)setUIDelegate:(id)arg1;
- (id)UIDelegate;
- (void)setResourceLoadDelegate:(id)arg1;
- (id)resourceLoadDelegate;
- (void)setDownloadDelegate:(id)arg1;
- (id)downloadDelegate;
- (void)setPolicyDelegate:(id)arg1;
- (id)policyDelegate;
- (void)setFrameLoadDelegate:(id)arg1;
- (id)frameLoadDelegate;
- (id)mainFrame;
- (id)selectedFrame;
- (id)backForwardList;
- (void)setMaintainsBackForwardList:(BOOL)arg1;
- (BOOL)goBack;
- (BOOL)goForward;
- (BOOL)goToBackForwardItem:(id)arg1;
- (void)setTextSizeMultiplier:(float)arg1;
- (float)textSizeMultiplier;
- (void)_setZoomMultiplier:(float)arg1 isTextOnly:(BOOL)arg2;
- (float)_zoomMultiplier:(BOOL)arg1;
- (float)_realZoomMultiplier;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (BOOL)_canZoomOut:(BOOL)arg1;
- (BOOL)_canZoomIn:(BOOL)arg1;
- (void)_zoomOut:(id)arg1 isTextOnly:(BOOL)arg2;
- (void)_zoomIn:(id)arg1 isTextOnly:(BOOL)arg2;
- (BOOL)_canResetZoom:(BOOL)arg1;
- (void)_resetZoom:(id)arg1 isTextOnly:(BOOL)arg2;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (id)applicationNameForUserAgent;
- (void)setCustomUserAgent:(id)arg1;
- (id)customUserAgent;
- (void)setMediaStyle:(id)arg1;
- (id)mediaStyle;
- (BOOL)supportsTextEncoding;
- (void)setCustomTextEncodingName:(id)arg1;
- (id)_mainFrameOverrideEncoding;
- (id)customTextEncodingName;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)windowScriptObject;
- (id)userAgentForURL:(id)arg1;
- (void)setHostWindow:(id)arg1;
- (id)hostWindow;
- (id)documentViewAtWindowPoint:(struct CGPoint)arg1;
- (id)_elementAtWindowPoint:(struct CGPoint)arg1;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (id)_hitTest:(struct CGPoint *)arg1 dragTypes:(id)arg2;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)_webcore_effectiveFirstResponder;
- (void)setNextKeyView:(id)arg1;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4;
- (void)setGroupName:(id)arg1;
- (id)groupName;
- (double)estimatedProgress;
- (id)pasteboardTypesForSelection;
- (void)writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2;
- (id)pasteboardTypesForElement:(id)arg1;
- (void)writeElement:(id)arg1 withPasteboardTypes:(id)arg2 toPasteboard:(id)arg3;
- (void)moveDragCaretToPoint:(struct CGPoint)arg1;
- (void)removeDragCaret;
- (void)setMainFrameURL:(id)arg1;
- (id)mainFrameURL;
- (BOOL)isLoading;
- (id)mainFrameTitle;
- (id)mainFrameIcon;
- (id)mainFrameDocument;
- (void)setDrawsBackground:(BOOL)arg1;
- (BOOL)drawsBackground;
- (void)setShouldUpdateWhileOffscreen:(BOOL)arg1;
- (BOOL)shouldUpdateWhileOffscreen;
- (void)setCurrentNodeHighlight:(id)arg1;
- (id)currentNodeHighlight;
- (id)previousValidKeyView;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;

@end

@interface _WebSafeForwarder : NSObject
{
    id target;
    id defaultTarget;
    BOOL catchExceptions;
}

- (id)initWithTarget:(id)arg1 defaultTarget:(id)arg2 catchExceptions:(BOOL)arg3;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

@interface WebProgressItem : NSObject
{
    long long bytesReceived;
    long long estimatedLength;
}

@end

@interface WebViewFactory : WebCoreViewFactory <WebCoreViewFactory>
{
}

+ (void)createSharedFactory;
- (id)pluginsInfo;
- (void)refreshPlugins;
- (id)inputElementAltText;
- (id)resetButtonDefaultLabel;
- (id)searchableIndexIntroduction;
- (id)submitButtonDefaultLabel;
- (id)fileButtonChooseFileLabel;
- (id)fileButtonNoFileSelectedLabel;
- (id)copyImageUnknownFileLabel;
- (id)searchMenuNoRecentSearchesText;
- (id)searchMenuRecentSearchesText;
- (id)searchMenuClearRecentSearchesText;
- (id)defaultLanguageCode;
- (id)contextMenuItemTagOpenLinkInNewWindow;
- (id)contextMenuItemTagDownloadLinkToDisk;
- (id)contextMenuItemTagCopyLinkToClipboard;
- (id)contextMenuItemTagOpenImageInNewWindow;
- (id)contextMenuItemTagDownloadImageToDisk;
- (id)contextMenuItemTagCopyImageToClipboard;
- (id)contextMenuItemTagOpenFrameInNewWindow;
- (id)contextMenuItemTagCopy;
- (id)contextMenuItemTagGoBack;
- (id)contextMenuItemTagGoForward;
- (id)contextMenuItemTagStop;
- (id)contextMenuItemTagReload;
- (id)contextMenuItemTagCut;
- (id)contextMenuItemTagPaste;
- (id)contextMenuItemTagNoGuessesFound;
- (id)contextMenuItemTagIgnoreSpelling;
- (id)contextMenuItemTagLearnSpelling;
- (id)contextMenuItemTagSearchInSpotlight;
- (id)contextMenuItemTagSearchWeb;
- (id)contextMenuItemTagLookUpInDictionary;
- (id)contextMenuItemTagOpenLink;
- (id)contextMenuItemTagIgnoreGrammar;
- (id)contextMenuItemTagSpellingMenu;
- (id)contextMenuItemTagShowSpellingPanel:(_Bool)arg1;
- (id)contextMenuItemTagCheckSpelling;
- (id)contextMenuItemTagCheckSpellingWhileTyping;
- (id)contextMenuItemTagCheckGrammarWithSpelling;
- (id)contextMenuItemTagFontMenu;
- (id)contextMenuItemTagShowFonts;
- (id)contextMenuItemTagBold;
- (id)contextMenuItemTagItalic;
- (id)contextMenuItemTagUnderline;
- (id)contextMenuItemTagOutline;
- (id)contextMenuItemTagStyles;
- (id)contextMenuItemTagShowColors;
- (id)contextMenuItemTagSpeechMenu;
- (id)contextMenuItemTagStartSpeaking;
- (id)contextMenuItemTagStopSpeaking;
- (id)contextMenuItemTagWritingDirectionMenu;
- (id)contextMenuItemTagTextDirectionMenu;
- (id)contextMenuItemTagDefaultDirection;
- (id)contextMenuItemTagLeftToRight;
- (id)contextMenuItemTagRightToLeft;
- (id)contextMenuItemTagCorrectSpellingAutomatically;
- (id)contextMenuItemTagSubstitutionsMenu;
- (id)contextMenuItemTagShowSubstitutions:(_Bool)arg1;
- (id)contextMenuItemTagSmartCopyPaste;
- (id)contextMenuItemTagSmartQuotes;
- (id)contextMenuItemTagSmartDashes;
- (id)contextMenuItemTagSmartLinks;
- (id)contextMenuItemTagTextReplacement;
- (id)contextMenuItemTagTransformationsMenu;
- (id)contextMenuItemTagMakeUpperCase;
- (id)contextMenuItemTagMakeLowerCase;
- (id)contextMenuItemTagCapitalize;
- (id)contextMenuItemTagChangeBack:(id)arg1;
- (id)contextMenuItemTagInspectElement;
- (BOOL)objectIsTextMarker:(id)arg1;
- (BOOL)objectIsTextMarkerRange:(id)arg1;
- (id)textMarkerWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (BOOL)getBytes:(void *)arg1 fromTextMarker:(id)arg2 length:(unsigned long long)arg3;
- (id)textMarkerRangeWithStart:(id)arg1 end:(id)arg2;
- (id)startOfTextMarkerRange:(id)arg1;
- (id)endOfTextMarkerRange:(id)arg1;
- (void)accessibilityHandleFocusChanged;
- (struct __AXUIElement *)AXUIElementForElement:(id)arg1;
- (struct CGRect)accessibilityConvertScreenRect:(struct CGRect)arg1;
- (void)unregisterUniqueIdForUIElement:(id)arg1;
- (id)AXWebAreaText;
- (id)AXLinkText;
- (id)AXListMarkerText;
- (id)AXImageMapText;
- (id)AXHeadingText;
- (id)AXDefinitionListTermText;
- (id)AXDefinitionListDefinitionText;
- (id)AXButtonActionVerb;
- (id)AXRadioButtonActionVerb;
- (id)AXTextFieldActionVerb;
- (id)AXCheckedCheckBoxActionVerb;
- (id)AXUncheckedCheckBoxActionVerb;
- (id)AXLinkActionVerb;
- (id)AXMenuListPopupActionVerb;
- (id)AXMenuListActionVerb;
- (id)multipleFileUploadTextForNumberOfFiles:(unsigned int)arg1;
- (id)unknownFileSizeText;
- (id)imageTitleForFilename:(id)arg1 width:(int)arg2 height:(int)arg3;
- (id)mediaElementLoadingStateText;
- (id)mediaElementLiveBroadcastStateText;

@end

@interface WebTextInputWindowController : NSObject
{
    WebTextInputPanel *_panel;
}

+ (id)sharedTextInputWindowController;
- (id)init;
- (id)inputContext;
- (BOOL)interpretKeyEvent:(id)arg1 string:(id *)arg2;

@end

@interface WebTextInputPanel : NSPanel
{
    NSTextView *_inputTextView;
}

- (void)dealloc;
- (id)init;
- (void)_keyboardInputSourceChanged:(id)arg1;
- (BOOL)_interpretKeyEvent:(id)arg1 string:(id *)arg2;
- (id)_inputContext;

@end

@interface WebGeolocation : NSObject
{
    WebGeolocationPrivate *_private;
}

- (BOOL)shouldClearCache;
- (void)setIsAllowed:(BOOL)arg1;
- (void)dealloc;

@end

@interface WebNetscapeContainerCheckContextInfo : NSObject
{
    unsigned int _checkRequestID;
    void *_callback;
    void *_context;
}

- (id)initWithCheckRequestID:(unsigned int)arg1 callbackFunc:(void *)arg2 context:(void *)arg3;
- (unsigned int)checkRequestID;
- (void *)callback;
- (void *)context;

@end

@interface WebDownload : NSURLDownload
{
    WebDownloadInternal *_webInternal;
}

- (void)_setRealDelegate:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (id)_initWithLoadingConnection:(id)arg1 request:(id)arg2 response:(id)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 directory:(id)arg3;
- (void)connection:(id)arg1 willStopBufferingData:(id)arg2;

@end

@interface WebDownloadInternal : NSObject
{
    id realDelegate;
}

- (void)dealloc;
- (void)setRealDelegate:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (void)downloadDidBegin:(id)arg1;
- (id)download:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)download:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)download:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)download:(id)arg1 didReceiveResponse:(id)arg2;
- (void)download:(id)arg1 didReceiveDataOfLength:(unsigned long long)arg2;
- (BOOL)download:(id)arg1 shouldDecodeSourceDataOfMIMEType:(id)arg2;
- (void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2;
- (void)download:(id)arg1 didCreateDestination:(id)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)download:(id)arg1 didFailWithError:(id)arg2;
- (id)download:(id)arg1 shouldBeginChildDownloadOfSource:(id)arg2 delegate:(id *)arg3;
- (void)download:(id)arg1 didBeginChildDownload:(id)arg2;

@end

@interface WebTextCompletionController : NSObject <NSTableViewDelegate, NSTableViewDataSource>
{
    WebView *_view;
    WebHTMLView *_htmlView;
    NSWindow *_popupWindow;
    NSTableView *_tableView;
    NSArray *_completions;
    NSString *_originalString;
    int prefixLength;
}

- (id)initWithWebView:(id)arg1 HTMLView:(id)arg2;
- (void)dealloc;
- (void)_insertMatch:(id)arg1;
- (void)_buildUI;
- (void)_placePopupWindow:(struct CGPoint)arg1;
- (void)doCompletion;
- (void)endRevertingChange:(BOOL)arg1 moveLeft:(BOOL)arg2;
- (BOOL)popupWindowIsOpen;
- (BOOL)filterKeyDown:(id)arg1;
- (void)_reflectSelection;
- (void)tableAction:(id)arg1;
- (long long)numberOfRowsInTableView:(id)arg1;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableViewSelectionDidChange:(id)arg1;

@end

@interface WebViewPrivate : NSObject
{
    struct Page *page;
    id UIDelegate;
    id UIDelegateForwarder;
    id resourceProgressDelegate;
    id downloadDelegate;
    id policyDelegate;
    id policyDelegateForwarder;
    id frameLoadDelegate;
    id frameLoadDelegateForwarder;
    id <WebFormDelegate> formDelegate;
    id editingDelegate;
    id editingDelegateForwarder;
    id scriptDebugDelegate;
    WebInspector *inspector;
    WebNodeHighlight *currentNodeHighlight;
    BOOL allowsUndo;
    float zoomMultiplier;
    NSString *applicationNameForUserAgent;
    struct String userAgent;
    BOOL userAgentOverridden;
    WebPreferences *preferences;
    BOOL useSiteSpecificSpoofing;
    NSWindow *hostWindow;
    int programmaticFocusCount;
    struct WebResourceDelegateImplementationCache resourceLoadDelegateImplementations;
    struct WebFrameLoadDelegateImplementationCache frameLoadDelegateImplementations;
    struct WebScriptDebugDelegateImplementationCache scriptDebugDelegateImplementations;
    void *observationInfo;
    BOOL closed;
    BOOL shouldCloseWithWindow;
    BOOL mainFrameDocumentReady;
    BOOL drawsBackground;
    BOOL editable;
    BOOL tabKeyCyclesThroughElementsChanged;
    BOOL becomingFirstResponder;
    BOOL becomingFirstResponderFromOutside;
    BOOL hoverFeedbackSuspended;
    BOOL usesPageCache;
    BOOL catchesDelegateExceptions;
    BOOL cssAnimationsSuspended;
    NSColor *backgroundColor;
    NSString *mediaStyle;
    BOOL hasSpellCheckerDocumentTag;
    long long spellCheckerDocumentTag;
    BOOL smartInsertDeleteEnabled;
    BOOL selectTrailingWhitespaceEnabled;
    BOOL dashboardBehaviorAlwaysSendMouseEventsToAllWindows;
    BOOL dashboardBehaviorAlwaysSendActiveNullEventsToPlugIns;
    BOOL dashboardBehaviorAlwaysAcceptsFirstMouse;
    BOOL dashboardBehaviorAllowWheelScrolling;
    WebPluginDatabase *pluginDatabase;
    struct HashMap<long unsigned int, WTF::RetainPtr<objc_object*>, WTF::IntHash<long unsigned int>, WTF::HashTraits<long unsigned int>, WTF::HashTraits<WTF::RetainPtr<objc_object*>>> identifierMap;
    BOOL _keyboardUIModeAccessed;
    int _keyboardUIMode;
    BOOL shouldUpdateWhileOffscreen;
    BOOL usesDocumentViews;
    BOOL needsOneShotDrawingSynchronization;
    int acceleratedFramesCount;
    struct __CFRunLoopObserver *layerSyncRunLoopObserver;
    NSPasteboard *insertionPasteboard;
    struct CGSize lastLayoutSize;
    BOOL ignoringMouseDraggedEvents;
    NSEvent *mouseDownEvent;
    BOOL handlingMouseDownEvent;
    NSEvent *keyDownEvent;
    WebTextCompletionController *completionController;
    NSTimer *autoscrollTimer;
    NSEvent *autoscrollTriggerEvent;
    struct __CFRunLoopTimer *updateMouseoverTimer;
}

+ (void)initialize;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface WKAppKitDrawDecoyWindow : NSWindow
{
}

- (BOOL)isKeyWindow;

@end

@interface WebArchive (WebInternal)
- (id)_initWithCoreLegacyWebArchive:(PassRefPtr_d33dc2c2)arg1;
- (struct LegacyWebArchive *)_coreLegacyWebArchive;
@end

@interface WebBackForwardList (WebBackForwardListInternal)
- (id)initWithBackForwardList:(PassRefPtr_bc1f952d)arg1;
@end

@interface NSArray (WebPluginExtensions)
- (id)_web_lowercaseStrings;
@end

@interface WebFrame (WebKitDebug)
- (id)renderTreeAsExternalRepresentation;
@end

@interface DOMHTMLObjectElement (WebDOMHTMLObjectElementOperations)
- (id)contentFrame;
@end

@interface DOMHTMLIFrameElement (WebDOMHTMLIFrameElementOperations)
- (id)contentFrame;
@end

@interface DOMHTMLFrameElement (WebDOMHTMLFrameElementOperations)
- (id)contentFrame;
@end

@interface DOMRange (WebDOMRangeOperations)
- (id)webArchive;
- (id)markupString;
@end

@interface DOMDocument (WebDOMDocumentOperationsPrivate)
- (id)_focusableNodes;
@end

@interface DOMDocument (WebDOMDocumentOperationsInternal)
- (id)_createRangeWithNode:(id)arg1;
- (id)_documentRange;
@end

@interface DOMDocument (WebDOMDocumentOperations)
- (id)webFrame;
- (id)URLWithAttributeString:(id)arg1;
@end

@interface DOMNode (WebDOMNodeOperationsInternal)
- (id)_subresourceURLs;
@end

@interface DOMNode (WebDOMNodeOperations)
- (id)webArchive;
- (id)markupString;
@end

@interface WebDataSource (WebInternal)
+ (id)_repTypesAllowImageTypeOmission:(BOOL)arg1;
- (void)_finishedLoading;
- (void)_receivedData:(id)arg1;
- (void)_setMainDocumentError:(id)arg1;
- (void)_revertToProvisionalState;
- (void)_replaceSelectionWithArchive:(id)arg1 selectReplacement:(BOOL)arg2;
- (id)_documentFragmentWithArchive:(id)arg1;
- (id)_documentFragmentWithImageResource:(id)arg1;
- (id)_imageElementWithImageResource:(id)arg1;
- (id)_URL;
- (id)_webView;
- (BOOL)_isDocumentHTML;
- (void)_makeRepresentation;
- (struct DocumentLoader *)_documentLoader;
- (id)_initWithDocumentLoader:(PassRefPtr_a1b5a79e)arg1;
@end

@interface WebDataSource (WebPrivate)
- (id)_mainDocumentError;
- (void)_addSubframeArchives:(id)arg1;
- (id)_fileWrapperForURL:(id)arg1;
- (id)_responseMIMEType;
- (BOOL)_transferApplicationCache:(id)arg1;
@end

@interface WebDataSource (WebFileInternal)
+ (Class)_representationClassForMIMEType:(id)arg1;
- (void)_setRepresentation:(id)arg1;
@end

@interface WebDefaultUIDelegate (WebContextMenu)
- (id)menuItemWithTag:(int)arg1 target:(id)arg2 representedObject:(id)arg3;
- (void)appendDefaultItems:(id)arg1 toArray:(id)arg2;
- (id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3;
@end

@interface WebDynamicScrollBarsView (WebInternal) <WebCoreFrameScrollView>
- (void)setSuppressLayout:(BOOL)arg1;
- (void)setScrollBarsSuppressed:(BOOL)arg1 repaintOnUnsuppress:(BOOL)arg2;
- (void)updateScrollers;
- (void)reflectScrolledClipView:(id)arg1;
- (BOOL)allowsHorizontalScrolling;
- (BOOL)allowsVerticalScrolling;
- (void)scrollingModes:(int *)arg1 vertical:(int *)arg2;
- (int)horizontalScrollingMode;
- (int)verticalScrollingMode;
- (void)setHorizontalScrollingMode:(int)arg1 andLock:(BOOL)arg2;
- (void)setVerticalScrollingMode:(int)arg1 andLock:(BOOL)arg2;
- (void)setVerticalScrollingMode:(int)arg1;
- (void)setScrollingModes:(int)arg1 vertical:(int)arg2 andLock:(BOOL)arg3;
- (void)setHorizontalScrollingModeLocked:(BOOL)arg1;
- (void)setVerticalScrollingModeLocked:(BOOL)arg1;
- (void)setScrollingModesLocked:(BOOL)arg1;
- (BOOL)horizontalScrollingModeLocked;
- (BOOL)verticalScrollingModeLocked;
- (BOOL)autoforwardsScrollWheelEvents;
- (void)scrollWheel:(id)arg1;
- (BOOL)accessibilityIsIgnored;
@end

@interface WebFrame (WebPrivate)
- (BOOL)_isDescendantOfFrame:(id)arg1;
- (void)_setShouldCreateRenderers:(BOOL)arg1;
- (id)_bodyBackgroundColor;
- (BOOL)_isFrameSet;
- (BOOL)_firstLayoutDone;
- (int)_loadType;
- (struct _NSRange)_selectedNSRange;
- (void)_selectNSRange:(struct _NSRange)arg1;
- (BOOL)_isDisplayingStandaloneImage;
- (unsigned int)_pendingFrameUnloadEventCount;
- (id)fetchApplicationIcon:(id)arg1 selector:(SEL)arg2;
- (void)_setIsDisconnected:(_Bool)arg1;
- (void)_setExcludeFromTextSearch:(_Bool)arg1;
- (void)_recursive_resumeNullEventsForAllNetscapePlugins;
- (void)_recursive_pauseNullEventsForAllNetscapePlugins;
- (BOOL)_pauseAnimation:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (BOOL)_pauseTransitionOfProperty:(id)arg1 onNode:(id)arg2 atTime:(double)arg3;
- (unsigned int)_numberOfActiveAnimations;
- (void)_replaceSelectionWithFragment:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)_replaceSelectionWithText:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3;
- (void)_replaceSelectionWithMarkupString:(id)arg1 baseURLString:(id)arg2 selectReplacement:(BOOL)arg3 smartReplace:(BOOL)arg4;
- (BOOL)_allowsFollowingLink:(id)arg1;
@end

@interface WebFrame (WebInternal)
+ (PassRefPtr_4af616b4)_createFrameWithPage:(struct Page *)arg1 frameName:(const struct String *)arg2 frameView:(id)arg3 ownerElement:(struct HTMLFrameOwnerElement *)arg4;
+ (void)_createMainFrameWithPage:(struct Page *)arg1 frameName:(const struct String *)arg2 frameView:(id)arg3;
+ (PassRefPtr_4af616b4)_createSubframeWithOwnerElement:(struct HTMLFrameOwnerElement *)arg1 frameName:(const struct String *)arg2 frameView:(id)arg3;
- (void)_attachScriptDebugger;
- (void)_detachScriptDebugger;
- (id)_initWithWebFrameView:(id)arg1 webView:(id)arg2;
- (void)_clearCoreFrame;
- (void)_updateBackgroundAndUpdatesWhileOffscreen;
- (void)_setInternalLoadDelegate:(id)arg1;
- (id)_internalLoadDelegate;
- (void)_unmarkAllBadGrammar;
- (void)_unmarkAllMisspellings;
- (BOOL)_hasSelection;
- (void)_clearSelection;
- (id)_findFrameWithSelection;
- (void)_clearSelectionInOtherFrames;
- (id)_dataSource;
- (void)_addData:(id)arg1;
- (id)_stringWithDocumentTypeStringAndMarkupString:(id)arg1;
- (id)_nodesFromList:(Vector_37bbce44 *)arg1;
- (id)_markupStringFromRange:(id)arg1 nodes:(id *)arg2;
- (id)_selectedString;
- (id)_stringForRange:(id)arg1;
- (void)_drawRect:(struct CGRect)arg1 contentsOnly:(BOOL)arg2;
- (id)_computePageRectsWithPrintWidthScaleFactor:(float)arg1 printHeight:(float)arg2;
- (BOOL)_getVisibleRect:(struct CGRect *)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)_stringByEvaluatingJavaScriptFromString:(id)arg1 forceUserGesture:(BOOL)arg2;
- (struct CGRect)_caretRectAtNode:(id)arg1 offset:(int)arg2 affinity:(unsigned long long)arg3;
- (struct CGRect)_firstRectForDOMRange:(id)arg1;
- (void)_scrollDOMRangeToVisible:(id)arg1;
- (BOOL)_needsLayout;
- (id)_accessibilityTree;
- (id)_rangeByAlteringCurrentSelection:(int)arg1 direction:(int)arg2 granularity:(int)arg3;
- (int)_selectionGranularity;
- (struct _NSRange)_convertToNSRange:(struct Range *)arg1;
- (PassRefPtr_d7fc6f43)_convertToDOMRange:(struct _NSRange)arg1;
- (id)convertNSRangeToDOMRange:(struct _NSRange)arg1;
- (id)_convertNSRangeToDOMRange:(struct _NSRange)arg1;
- (struct _NSRange)convertDOMRangeToNSRange:(id)arg1;
- (struct _NSRange)_convertDOMRangeToNSRange:(id)arg1;
- (id)_markDOMRange;
- (id)_smartDeleteRangeForProposedRange:(id)arg1;
- (void)_smartInsertForString:(id)arg1 replacingRange:(id)arg2 beforeString:(id *)arg3 afterString:(id *)arg4;
- (id)_documentFragmentWithMarkupString:(id)arg1 baseURLString:(id)arg2;
- (id)_documentFragmentWithNodesAsParagraphs:(id)arg1;
- (void)_replaceSelectionWithNode:(id)arg1 selectReplacement:(BOOL)arg2 smartReplace:(BOOL)arg3 matchStyle:(BOOL)arg4;
- (void)_insertParagraphSeparatorInQuotedContent;
- (struct VisiblePosition)_visiblePositionForPoint:(struct CGPoint)arg1;
- (id)_characterRangeAtPoint:(struct CGPoint)arg1;
- (id)_typingStyle;
- (void)_setTypingStyle:(id)arg1 withUndoAction:(int)arg2;
- (void)_dragSourceMovedTo:(struct CGPoint)arg1;
- (void)_dragSourceEndedAt:(struct CGPoint)arg1 operation:(unsigned long long)arg2;
- (BOOL)_canProvideDocumentSource;
- (BOOL)_canSaveAsWebArchive;
- (void)_receivedData:(id)arg1 textEncodingName:(id)arg2;
@end

@interface WebFrameView (WebPrivate)
- (float)_area;
- (BOOL)_hasScrollBars;
- (id)_largestChildWithScrollBars;
- (id)_contentView;
- (Class)_customScrollViewClass;
- (void)_setCustomScrollViewClass:(Class)arg1;
@end

@interface WebFrameView (WebInternal)
+ (id)_viewTypesAllowImageTypeOmission:(BOOL)arg1;
+ (BOOL)_canShowMIMETypeAsHTML:(id)arg1;
+ (Class)_viewClassForMIMEType:(id)arg1;
- (id)_webView;
- (void)_setDocumentView:(id)arg1;
- (id)_makeDocumentViewForDataSource:(id)arg1;
- (void)_setWebFrame:(id)arg1;
- (id)_scrollView;
- (float)_verticalPageScrollDistance;
- (void)_install;
@end

@interface WebFrameView (WebFrameViewFileInternal) <WebCoreFrameView>
- (float)_verticalKeyboardScrollDistance;
- (struct Frame *)_web_frame;
@end

@interface NSURL (WebDataURL)
+ (id)_web_uniqueWebDataURL;
@end

@interface WebHTMLView (WebDocumentInternalProtocols) <WebDocumentElement, WebMultipleTextMatches>
- (id)elementAtPoint:(struct CGPoint)arg1;
- (id)elementAtPoint:(struct CGPoint)arg1 allowShadowContent:(BOOL)arg2;
- (unsigned long long)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 limit:(unsigned long long)arg3;
- (void)setMarkedTextMatchesAreHighlighted:(BOOL)arg1;
- (BOOL)markedTextMatchesAreHighlighted;
- (void)unmarkAllTextMatches;
- (id)rectsForTextMatches;
@end

@interface WebHTMLView (WebDocumentPrivateProtocols) <WebDocumentSelection, WebDocumentIncrementalSearching>
- (struct CGRect)selectionRect;
- (id)selectionTextRects;
- (id)selectionView;
- (id)selectionImageForcingBlackText:(BOOL)arg1;
- (struct CGRect)selectionImageRect;
- (id)pasteboardTypesForSelection;
- (void)writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2;
- (void)selectAll;
- (void)deselectAll;
- (id)string;
- (id)_attributeStringFromDOMRange:(id)arg1;
- (id)attributedString;
- (id)selectedString;
- (id)selectedAttributedString;
- (BOOL)supportsTextEncoding;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
@end

@interface WebHTMLView (WebNSTextInputSupport) <NSTextInput>
- (id)validAttributesForMarkedText;
- (id)inputContext;
- (id)textStorage;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (long long)conversationIdentifier;
- (BOOL)hasMarkedText;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)insertText:(id)arg1;
- (void)_updateSelectionForInputManager;
@end

@interface WebHTMLView (WebInternal)
- (void)_selectionChanged;
- (void)_updateFontPanel;
- (BOOL)_canSmartCopyOrDelete;
- (id)_mouseDownEvent;
- (id)_highlighterForType:(id)arg1;
- (id)_frame;
- (void)paste:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)closeIfNotCurrentView;
- (id)_documentFragmentFromPasteboard:(id)arg1;
- (BOOL)isGrammarCheckingEnabled;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (BOOL)smartInsertDeleteEnabled;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (BOOL)isAutomaticTextReplacementEnabled;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)_lookUpInDictionaryFromMenu:(id)arg1;
- (void)_hoverFeedbackSuspendedChanged;
- (BOOL)_interceptEditingKeyEvent:(struct KeyboardEvent *)arg1 shouldSaveCommand:(BOOL)arg2;
- (struct CachedImage *)promisedDragTIFFDataSource;
- (void)setPromisedDragTIFFDataSource:(struct CachedImage *)arg1;
- (void)_layoutIfNeeded;
- (void)_web_layoutIfNeededRecursive;
- (void)_destroyAllWebPlugins;
- (BOOL)_needsLayout;
- (void)attachRootLayer:(id)arg1;
- (void)detachRootLayer;
@end

@interface NSArray (WebHTMLView)
- (void)_web_makePluginViewsPerformSelector:(SEL)arg1 withObject:(id)arg2;
@end

@interface NSString (WebHTMLViewFileInternal)
- (BOOL)matchesExtensionEquivalent:(id)arg1;
@end

@interface NSMutableDictionary (WebHTMLViewFileInternal)
- (void)_web_setObjectIfNotNil:(id)arg1 forKey:(id)arg2;
@end

@interface NSView (WebHTMLViewFileInternal)
- (void)_web_addDescendantWebHTMLViewsToArray:(id)arg1;
@end

@interface WebHTMLView (WebPrivate)
+ (id)supportedMIMETypes;
+ (id)supportedImageMIMETypes;
+ (id)supportedNonImageMIMETypes;
+ (id)unsupportedTextMIMETypes;
+ (void)_postFlagsChangedEvent:(id)arg1;
+ (id)_insertablePasteboardTypes;
+ (id)_selectionPasteboardTypes;
- (id)_bridge;
- (void)_updateMouseoverWithFakeEvent;
- (void)_frameOrBoundsChanged;
- (void)_setAsideSubviews;
- (void)_restoreSubviews;
- (void)viewWillDraw;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;
- (void)_recursive:(BOOL)arg1 displayRectIgnoringOpacity:(struct CGRect)arg2 inContext:(id)arg3 topView:(BOOL)arg4;
- (BOOL)_insideAnotherHTMLView;
- (id)hitTest:(struct CGPoint)arg1;
- (void)_clearLastHitViewIfSelf;
- (long long)addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4;
- (long long)_addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4 useTrackingNum:(int)arg5;
- (void)_addTrackingRects:(struct CGRect *)arg1 owner:(id)arg2 userDataList:(void **)arg3 assumeInsideList:(char *)arg4 trackingNums:(long long *)arg5 count:(int)arg6;
- (void)removeTrackingRect:(long long)arg1;
- (void)_removeTrackingRects:(long long *)arg1 count:(int)arg2;
- (void)_sendToolTipMouseExited;
- (void)_sendToolTipMouseEntered;
- (void)_setToolTip:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)_updateMouseoverWithEvent:(id)arg1;
- (id)_dragImageForURL:(id)arg1 withLabel:(id)arg2;
- (id)_dragImageForLinkElement:(id)arg1;
- (void)pasteboardChangedOwner:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)_handleAutoscrollForMouseDragged:(id)arg1;
- (id)_pluginController;
- (void)_layoutForPrinting;
- (void)_smartInsertForString:(id)arg1 replacingRange:(id)arg2 beforeString:(id *)arg3 afterString:(id *)arg4;
- (BOOL)_canSmartReplaceWithPasteboard:(id)arg1;
- (void)_startAutoscrollTimer:(id)arg1;
- (struct CGRect)_selectionRect;
- (void)_stopAutoscrollTimer;
- (void)_autoscroll;
- (BOOL)_canEdit;
- (BOOL)_canEditRichly;
- (BOOL)_canAlterCurrentSelection;
- (BOOL)_hasSelection;
- (BOOL)_hasSelectionOrInsertionPoint;
- (BOOL)_hasInsertionPoint;
- (BOOL)_isEditable;
- (BOOL)_transparentBackground;
- (void)_setTransparentBackground:(BOOL)arg1;
- (id)_selectionDraggingImage;
- (struct CGRect)_selectionDraggingRect;
- (id)_insertOrderedList;
- (id)_insertUnorderedList;
- (BOOL)_canIncreaseSelectionListLevel;
- (BOOL)_canDecreaseSelectionListLevel;
- (id)_increaseSelectionListLevel;
- (id)_increaseSelectionListLevelOrdered;
- (id)_increaseSelectionListLevelUnordered;
- (void)_decreaseSelectionListLevel;
- (void)_setHighlighter:(id)arg1 ofType:(id)arg2;
- (void)_removeHighlighterOfType:(id)arg1;
- (void)_writeSelectionToPasteboard:(id)arg1;
- (void)close;
- (BOOL)_hasHTMLDocument;
- (id)_documentFragmentFromPasteboard:(id)arg1 forType:(id)arg2 inContext:(id)arg3 subresources:(id *)arg4;
- (void)_pauseNullEventsForAllNetscapePlugins;
- (void)_resumeNullEventsForAllNetscapePlugins;
- (BOOL)_isUsingAcceleratedCompositing;
@end

@interface WebHTMLView (WebHTMLViewFileInternal)
+ (id)_excludedElementsForAttributedStringConversion;
- (id)_documentRange;
- (BOOL)_imageExistsAtPaths:(id)arg1;
- (id)_dataSource;
- (id)_webView;
- (id)_frameView;
- (id)_documentFragmentWithPaths:(id)arg1;
- (id)_documentFragmentFromPasteboard:(id)arg1 inContext:(id)arg2 allowPlainText:(BOOL)arg3;
- (id)_plainTextFromPasteboard:(id)arg1;
- (void)_pasteWithPasteboard:(id)arg1 allowPlainText:(BOOL)arg2;
- (void)_pasteAsPlainTextWithPasteboard:(id)arg1;
- (void)_removeMouseMovedObserverUnconditionally;
- (void)_removeSuperviewObservers;
- (void)_removeWindowObservers;
- (BOOL)_shouldInsertFragment:(id)arg1 replacingDOMRange:(id)arg2 givenAction:(int)arg3;
- (BOOL)_shouldInsertText:(id)arg1 replacingDOMRange:(id)arg2 givenAction:(int)arg3;
- (BOOL)_shouldReplaceSelectionWithText:(id)arg1 givenAction:(int)arg2;
- (float)_calculatePrintHeight;
- (id)_selectedRange;
- (BOOL)_shouldDeleteRange:(id)arg1;
- (id)_hitViewForEvent:(id)arg1;
- (void)_writeSelectionWithPasteboardTypes:(id)arg1 toPasteboard:(id)arg2 cachedAttributedString:(id)arg3;
- (void)_setMouseDownEvent:(id)arg1;
- (void)_cancelUpdateMouseoverTimer;
- (id)_topHTMLView;
- (BOOL)_isTopHTMLView;
- (void)_web_setPrintingModeRecursive;
- (void)_web_clearPrintingModeRecursive;
- (void)_web_setPrintingModeRecursiveAndAdjustViewSize;
@end

@interface NSWindow (BorderViewAccess)
- (id)_web_borderView;
@end

@interface WebHistory (WebInternal)
- (void)_visitedURL:(id)arg1 withTitle:(id)arg2 method:(id)arg3 wasFailure:(BOOL)arg4 increaseVisitCount:(BOOL)arg5;
- (void)_addVisitedLinksToPageGroup:(struct PageGroup *)arg1;
@end

@interface WebHistory (WebPrivate)
- (id)_itemForURLString:(id)arg1;
- (id)allItems;
- (id)_data;
@end

@interface WebHistoryItem (WebPrivate)
+ (void)_releaseAllPendingPageCaches;
- (id)initWithURL:(id)arg1 title:(id)arg2;
- (id)dictionaryRepresentation;
- (id)target;
- (BOOL)isTargetItem;
- (int)visitCount;
- (id)RSSFeedReferrer;
- (void)setRSSFeedReferrer:(id)arg1;
- (id)children;
- (void)setAlwaysAttemptToUsePageCache:(BOOL)arg1;
- (id)URL;
- (void)_setLastVisitedTimeInterval:(double)arg1;
- (id)_lastVisitedDate;
- (id)targetItem;
- (id)_transientPropertyForKey:(id)arg1;
- (void)_setTransientProperty:(id)arg1 forKey:(id)arg2;
- (BOOL)lastVisitWasFailure;
- (void)_setLastVisitWasFailure:(BOOL)arg1;
- (BOOL)_lastVisitWasHTTPNonGet;
- (id)_redirectURLs;
- (unsigned long long)_getDailyVisitCounts:(const int **)arg1;
- (unsigned long long)_getWeeklyVisitCounts:(const int **)arg1;
@end

@interface WebHistoryItem (WebInternal)
+ (id)entryWithURL:(id)arg1;
+ (void)initWindowWatcherIfNecessary;
- (id)initWithURL:(id)arg1 target:(id)arg2 parent:(id)arg3 title:(id)arg4;
- (id)initWithURLString:(id)arg1 title:(id)arg2 displayTitle:(id)arg3 lastVisitedTimeInterval:(double)arg4;
- (id)initWithWebCoreHistoryItem:(PassRefPtr_b1663a8c)arg1;
- (void)setTitle:(id)arg1;
- (void)setVisitCount:(int)arg1;
- (void)setViewState:(id)arg1;
- (void)_mergeAutoCompleteHints:(id)arg1;
- (id)initFromDictionaryRepresentation:(id)arg1;
- (struct CGPoint)scrollPoint;
- (void)_visitedWithTitle:(id)arg1 increaseVisitCount:(BOOL)arg2;
- (void)_recordInitialVisit;
@end

@interface WebIconDatabase (WebInternal)
- (void)_sendNotificationForURL:(id)arg1;
- (void)_sendDidRemoveAllIconsNotification;
- (void)_startUpIconDatabase;
- (void)_shutDownIconDatabase;
- (void)_applicationWillTerminate:(id)arg1;
- (id)_iconForFileURL:(id)arg1 withSize:(struct CGSize)arg2;
- (void)_resetCachedWebPreferences:(id)arg1;
- (id)_largestIconFromDictionary:(id)arg1;
- (id)_iconsBySplittingRepresentationsOfIcon:(id)arg1;
- (id)_iconFromDictionary:(id)arg1 forSize:(struct CGSize)arg2 cache:(BOOL)arg3;
- (void)_scaleIcon:(id)arg1 toSize:(struct CGSize)arg2;
- (id)_databaseDirectory;
@end

@interface WebIconDatabase (WebPrivate)
+ (void)_checkIntegrityBeforeOpening;
@end

@interface WebIconDatabase (WebPendingPublic)
- (BOOL)isEnabled;
- (void)setEnabled:(BOOL)arg1;
- (void)removeAllIcons;
@end

@interface WebIconFetcher (WebInternal)
+ (id)_fetchApplicationIconForFrame:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
- (id)_initWithIconFetcher:(PassRefPtr_8ac8f013)arg1 client:(struct WebIconFetcherClient *)arg2;
@end

@interface WebInspector (Obsolete)
+ (id)webInspector;
- (void)setWebFrame:(id)arg1;
- (id)window;
- (void)showWindow:(id)arg1;
@end

@interface NSError (WebKitExtras)
+ (void)_registerWebKitErrors;
+ (id)_webkit_errorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)_webKitErrorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)_webKitErrorWithCode:(int)arg1 failingURL:(id)arg2;
+ (void)_webkit_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
- (id)_webkit_initWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
- (id)_initWithPluginErrorCode:(int)arg1 contentURL:(id)arg2 pluginPageURL:(id)arg3 pluginName:(id)arg4 MIMEType:(id)arg5;
@end

@interface NSString (WebKitExtras)
+ (unsigned long long)_web_encodingForResource:(char **)arg1;
+ (id)_webkit_localCacheDirectoryWithBundleIdentifier:(id)arg1;
- (void)_web_drawAtPoint:(struct CGPoint)arg1 font:(id)arg2 textColor:(id)arg3;
- (void)_web_drawDoubledAtPoint:(struct CGPoint)arg1 withTopColor:(id)arg2 bottomColor:(id)arg3 font:(id)arg4;
- (float)_web_widthWithFont:(id)arg1;
- (id)_web_stringByAbbreviatingWithTildeInPath;
- (id)_web_stringByStrippingReturnCharacters;
- (BOOL)_webkit_isCaseInsensitiveEqualToString:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitivePrefix:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitiveSuffix:(id)arg1;
- (BOOL)_webkit_hasCaseInsensitiveSubstring:(id)arg1;
- (id)_webkit_filenameByFixingIllegalCharacters;
- (id)_webkit_stringByTrimmingWhitespace;
- (id)_webkit_stringByCollapsingNonPrintingCharacters;
- (id)_webkit_stringByCollapsingWhitespaceCharacters;
- (id)_webkit_fixedCarbonPOSIXPath;
@end

@interface NSMutableArray (WebNSArrayExtras)
- (void)_webkit_removeUselessMenuItemSeparators;
@end

@interface NSArray (WebNSArrayExtras)
- (id)_webkit_numberAtIndex:(unsigned long long)arg1;
- (id)_webkit_stringAtIndex:(unsigned long long)arg1;
@end

@interface NSAttributedString (WebKitExtras)
+ (id)_web_attributedStringFromRange:(struct Range *)arg1;
- (id)_web_attributedStringByStrippingAttachmentCharacters;
@end

@interface NSControl (WebExtras)
- (void)sizeToFitAndAdjustWindowHeight;
@end

@interface NSData (WebNSDataExtras)
- (BOOL)_web_isCaseInsensitiveEqualToCString:(const char *)arg1;
- (id)_webkit_parseRFC822HeaderFields;
- (BOOL)_web_startsWithBlankLine;
- (long long)_web_locationAfterFirstBlankLine;
@end

@interface NSData (WebKitExtras)
- (id)_webkit_guessedMIMETypeForXML;
- (id)_webkit_guessedMIMEType;
@end

@interface NSString (WebNSDataExtrasInternal)
- (id)_web_capitalizeRFC822HeaderFieldName;
@end

@interface NSMutableDictionary (WebNSDictionaryExtras)
- (void)_webkit_setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)_webkit_setInt:(int)arg1 forKey:(id)arg2;
- (void)_webkit_setFloat:(float)arg1 forKey:(id)arg2;
- (void)_webkit_setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)_webkit_setUnsignedLongLong:(unsigned long long)arg1 forKey:(id)arg2;
@end

@interface NSDictionary (WebNSDictionaryExtras)
- (id)_webkit_numberForKey:(id)arg1;
- (int)_webkit_intForKey:(id)arg1;
- (id)_webkit_stringForKey:(id)arg1;
- (id)_webkit_arrayForKey:(id)arg1;
- (id)_webkit_objectForMIMEType:(id)arg1;
- (BOOL)_webkit_boolForKey:(id)arg1;
@end

@interface NSEvent (WebExtras)
- (BOOL)_web_isKeyEvent:(unsigned short)arg1;
- (BOOL)_web_isDeleteKeyEvent;
- (BOOL)_web_isEscapeKeyEvent;
- (BOOL)_web_isOptionTabKeyEvent;
- (BOOL)_web_isReturnOrEnterKeyEvent;
- (BOOL)_web_isTabKeyEvent;
@end

@interface NSFileManager (WebNSFileManagerExtras)
- (BOOL)_webkit_removeFileOnlyAtPath:(id)arg1;
- (void)_webkit_backgroundRemoveFileAtPath:(id)arg1;
- (void)_webkit_backgroundRemoveLeftoverFiles:(id)arg1;
- (id)_webkit_carbonPathForPath:(id)arg1;
- (void)_webkit_setMetadataURL:(id)arg1 referrer:(id)arg2 atPath:(id)arg3;
- (id)_webkit_startupVolumeName;
- (id)_webkit_pathWithUniqueFilenameForPath:(id)arg1;
@end

@interface NSImage (WebExtras)
- (void)_web_scaleToMaxSize:(struct CGSize)arg1;
- (void)_web_dissolveToFraction:(float)arg1;
- (void)_web_saveAndOpen;
@end

@interface NSNotificationCenter (WebNSNotificationCenterExtras)
+ (void)_postNotificationName:(id)arg1;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationOnMainThreadWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 waitUntilDone:(BOOL)arg4;
@end

@interface NSObject (WebNSObjectExtras)
- (id)_webkit_invokeOnMainThread;
@end

@interface NSInvocation (WebMainThreadInvoker)
- (void)_webkit_invokeAndHandleException:(id)arg1;
@end

@interface NSPasteboard (WebExtras)
+ (id)_web_writableTypesForURL;
+ (id)_web_writableTypesForImageIncludingArchive:(BOOL)arg1;
+ (id)_web_dragTypesForURL;
+ (int)_web_setFindPasteboardString:(id)arg1 withOwner:(id)arg2;
- (id)_web_bestURL;
- (void)_web_writeURL:(id)arg1 andTitle:(id)arg2 types:(id)arg3;
- (void)_web_writeFileWrapperAsRTFDAttachment:(id)arg1;
- (void)_web_writePromisedRTFDFromArchive:(id)arg1 containsImage:(BOOL)arg2;
- (void)_web_writeImage:(id)arg1 element:(id)arg2 URL:(id)arg3 title:(id)arg4 archive:(id)arg5 types:(id)arg6 source:(id)arg7;
- (id)_web_declareAndWriteDragImageForElement:(id)arg1 URL:(id)arg2 title:(id)arg3 archive:(id)arg4 source:(id)arg5;
@end

@interface NSPrintOperation (WebKitExtras)
- (float)_web_pageSetupScaleFactor;
@end

@interface NSString (WebNSURLExtras)
- (BOOL)_web_isUserVisibleURL;
- (BOOL)_webkit_isJavaScriptURL;
- (BOOL)_webkit_isFileURL;
- (id)_webkit_stringByReplacingValidPercentEscapes;
- (id)_webkit_scriptIfJavaScriptURL;
- (BOOL)_webkit_isFTPDirectoryURL;
- (id)_web_mapHostNameWithRange:(struct _NSRange)arg1 encode:(BOOL)arg2 makeString:(BOOL)arg3;
- (BOOL)_web_hostNameNeedsDecodingWithRange:(struct _NSRange)arg1;
- (BOOL)_web_hostNameNeedsEncodingWithRange:(struct _NSRange)arg1;
- (id)_web_decodeHostNameWithRange:(struct _NSRange)arg1;
- (id)_web_encodeHostNameWithRange:(struct _NSRange)arg1;
- (id)_web_decodeHostName;
- (id)_web_encodeHostName;
- (struct _NSRange)_webkit_rangeOfURLScheme;
- (BOOL)_webkit_looksLikeAbsoluteURL;
- (id)_webkit_URLFragment;
@end

@interface NSURL (WebNSURLExtras)
+ (id)_web_URLWithUserTypedString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithUserTypedString:(id)arg1;
+ (id)_web_URLWithDataAsString:(id)arg1;
+ (id)_web_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithData:(id)arg1;
+ (id)_web_URLWithData:(id)arg1 relativeToURL:(id)arg2;
- (id)_web_originalData;
- (id)_web_originalDataAsString;
- (id)_web_userVisibleString;
- (BOOL)_web_isEmpty;
- (const char *)_web_URLCString;
- (id)_webkit_canonicalize;
- (id)_webkit_URLByRemovingComponent:(long long)arg1;
- (id)_webkit_URLByRemovingFragment;
- (id)_webkit_URLByRemovingResourceSpecifier;
- (BOOL)_webkit_isJavaScriptURL;
- (id)_webkit_scriptIfJavaScriptURL;
- (BOOL)_webkit_isFileURL;
- (BOOL)_webkit_isFTPDirectoryURL;
- (BOOL)_webkit_shouldLoadAsEmptyDocument;
- (id)_web_URLWithLowercasedScheme;
- (BOOL)_web_hasQuestionMarkOnlyQueryString;
- (id)_web_schemeSeparatorWithoutColon;
- (id)_web_dataForURLComponentType:(long long)arg1;
- (id)_web_schemeData;
- (id)_web_hostData;
- (id)_web_hostString;
- (id)_webkit_suggestedFilenameWithMIMEType:(id)arg1;
@end

@interface NSMutableURLRequest (WebNSURLRequestExtras)
- (void)_web_setHTTPContentType:(id)arg1;
- (void)_web_setHTTPReferrer:(id)arg1;
- (void)_web_setHTTPUserAgent:(id)arg1;
@end

@interface NSURLRequest (WebNSURLRequestExtras)
- (id)_web_HTTPReferrer;
- (id)_web_HTTPContentType;
- (BOOL)_web_isConditionalRequest;
@end

@interface NSUserDefaults (WebNSUserDefaultsExtras)
+ (void)_webkit_ensureAndLockPreferredLanguageLock;
+ (void)_webkit_defaultsDidChange;
+ (void)_webkit_addDefaultsChangeObserver;
+ (id)_webkit_preferredLanguageCode;
@end

@interface NSString (WebNSUserDefaultsPrivate)
- (id)_webkit_HTTPStyleLanguageCode;
@end

@interface NSView (WebExtras)
- (id)_web_superviewOfClass:(Class)arg1;
- (id)_web_parentWebFrameView;
- (id)_webView;
- (BOOL)_web_dragShouldBeginFromMouseDown:(id)arg1 withExpiration:(id)arg2 xHysteresis:(float)arg3 yHysteresis:(float)arg4;
- (BOOL)_web_dragShouldBeginFromMouseDown:(id)arg1 withExpiration:(id)arg2;
- (unsigned long long)_web_dragOperationForDraggingInfo:(id)arg1;
- (void)_web_DragImageForElement:(id)arg1 rect:(struct CGRect)arg2 event:(id)arg3 pasteboard:(id)arg4 source:(id)arg5 offset:(struct CGPoint *)arg6;
- (BOOL)_web_firstResponderIsSelfOrDescendantView;
- (struct CGRect)_web_convertRect:(struct CGRect)arg1 toView:(id)arg2;
@end

@interface NSWindow (WebExtras)
- (void)centerOverMainWindow;
@end

@interface WebNetscapePluginPackage (Internal)
- (void)_unloadWithShutdown:(BOOL)arg1;
@end

@interface WebNetscapePluginDocumentView (Internal)
- (BOOL)_shouldCancelSrcStream;
- (void)_workaroundSilverlightFullScreenBug:(BOOL)arg1;
- (short)_createPlugin;
- (void)_destroyPlugin;
- (id)_printedPluginBitmap;
- (void)_redeliverStream;
@end

@interface WebNetscapePluginDocumentView (WebNPPCallbacks)
- (void)evaluateJavaScriptPluginRequest:(id)arg1;
- (void)webFrame:(id)arg1 didFinishLoadWithReason:(short)arg2;
- (void)webFrame:(id)arg1 didFinishLoadWithError:(id)arg2;
- (void)loadPluginRequest:(id)arg1;
- (short)loadRequest:(id)arg1 inTarget:(const char *)arg2 withNotifyData:(void *)arg3 sendNotification:(BOOL)arg4;
- (short)getURLNotify:(const char *)arg1 target:(const char *)arg2 notifyData:(void *)arg3;
- (short)getURL:(const char *)arg1 target:(const char *)arg2;
- (short)_postURL:(const char *)arg1 target:(const char *)arg2 len:(unsigned int)arg3 buf:(const char *)arg4 file:(unsigned char)arg5 notifyData:(void *)arg6 sendNotification:(BOOL)arg7 allowHeaders:(BOOL)arg8;
- (short)postURLNotify:(const char *)arg1 target:(const char *)arg2 len:(unsigned int)arg3 buf:(const char *)arg4 file:(unsigned char)arg5 notifyData:(void *)arg6;
- (short)postURL:(const char *)arg1 target:(const char *)arg2 len:(unsigned int)arg3 buf:(const char *)arg4 file:(unsigned char)arg5;
- (short)newStream:(char *)arg1 target:(const char *)arg2 stream:(struct _NPStream **)arg3;
- (short)write:(struct _NPStream *)arg1 len:(int)arg2 buffer:(void *)arg3;
- (short)destroyStream:(struct _NPStream *)arg1 reason:(short)arg2;
- (const char *)userAgent;
- (void)status:(const char *)arg1;
- (void)invalidateRect:(struct _NPRect *)arg1;
- (void)invalidateRegion:(void *)arg1;
- (void)forceRedraw;
- (short)getVariable:(int)arg1 value:(void *)arg2;
- (short)setVariable:(int)arg1 value:(void *)arg2;
- (unsigned int)scheduleTimerWithInterval:(unsigned int)arg1 repeat:(unsigned char)arg2 timerFunc:(void *)arg3;
- (void)unscheduleTimer:(unsigned int)arg1;
- (short)popUpContextMenu:(struct _NPNSMenu *)arg1;
- (short)getVariable:(int)arg1 forURL:(const char *)arg2 value:(char **)arg3 length:(unsigned int *)arg4;
- (short)setVariable:(int)arg1 forURL:(const char *)arg2 value:(const char *)arg3 length:(unsigned int)arg4;
- (short)getAuthenticationInfoWithProtocol:(const char *)arg1 host:(const char *)arg2 port:(int)arg3 scheme:(const char *)arg4 realm:(const char *)arg5 username:(char **)arg6 usernameLength:(unsigned int *)arg7 password:(char **)arg8 passwordLength:(unsigned int *)arg9;
- (char *)resolveURL:(const char *)arg1 forTarget:(const char *)arg2;
@end

@interface WebNodeHighlight (FileInternal)
- (struct CGRect)_computeHighlightWindowFrame;
- (void)_repositionHighlightWindow;
@end

@interface WebPDFView (FileInternal)
+ (Class)_PDFPreviewViewClass;
+ (Class)_PDFViewClass;
- (BOOL)_anyPDFTagsFoundInMenu:(id)arg1;
- (void)_applyPDFDefaults;
- (BOOL)_canLookUpInDictionary;
- (id)_clipViewForPDFDocumentView;
- (id)_fakeKeyEventWithFunctionKey:(unsigned short)arg1;
- (void)_lookUpInDictionaryFromMenu:(id)arg1;
- (id)_menuItemsFromPDFKitForEvent:(id)arg1;
- (id)_nextMatchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 fromSelection:(id)arg5 startInSelection:(BOOL)arg6;
- (void)_openWithFinder:(id)arg1;
- (id)_path;
- (void)_PDFDocumentViewMightHaveScrolled:(id)arg1;
- (id)_PDFSubview;
- (BOOL)_pointIsInSelection:(struct CGPoint)arg1;
- (void)_scaleOrDisplayModeOrPageChanged:(id)arg1;
- (id)_scaledAttributedString:(id)arg1;
- (void)_setTextMatches:(id)arg1;
- (id)_temporaryPDFDirectoryPath;
- (void)_trackFirstResponder;
- (void)_updatePreferences:(id)arg1;
- (void)_updatePreferencesSoon;
- (id)_visiblePDFPages;
@end

@interface WebPluginDatabase (Internal)
+ (id)_defaultPlugInPaths;
- (id)_plugInPaths;
- (void)_addPlugin:(id)arg1;
- (void)_removePlugin:(id)arg1;
- (id)_scanForNewPlugins;
@end

@interface NSObject (WebScripting)
+ (BOOL)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (BOOL)isKeyExcludedFromWebScript:(const char *)arg1;
@end

@interface WebPreferences (WebInternal)
+ (id)_IBCreatorID;
+ (id)_concatenateKeyWithIBCreatorID:(id)arg1;
@end

@interface WebPreferences (WebPrivate)
+ (id)_getInstanceForIdentifier:(id)arg1;
+ (void)_setInstance:(id)arg1 forIdentifier:(id)arg2;
+ (void)_checkLastReferenceForIdentifier:(id)arg1;
+ (void)_removeReferenceForIdentifier:(id)arg1;
+ (unsigned int)_systemCFStringEncoding;
+ (void)_setInitialDefaultTextEncodingToSystemEncoding;
+ (void)_setIBCreatorID:(id)arg1;
- (BOOL)developerExtrasEnabled;
- (void)setDeveloperExtrasEnabled:(BOOL)arg1;
- (BOOL)authorAndUserStylesEnabled;
- (void)setAuthorAndUserStylesEnabled:(BOOL)arg1;
- (BOOL)applicationChromeModeEnabled;
- (void)setApplicationChromeModeEnabled:(BOOL)arg1;
- (BOOL)webArchiveDebugModeEnabled;
- (void)setWebArchiveDebugModeEnabled:(BOOL)arg1;
- (BOOL)localFileContentSniffingEnabled;
- (void)setLocalFileContentSniffingEnabled:(BOOL)arg1;
- (BOOL)offlineWebApplicationCacheEnabled;
- (void)setOfflineWebApplicationCacheEnabled:(BOOL)arg1;
- (BOOL)zoomsTextOnly;
- (void)setZoomsTextOnly:(BOOL)arg1;
- (BOOL)isXSSAuditorEnabled;
- (void)setXSSAuditorEnabled:(BOOL)arg1;
- (BOOL)respectStandardStyleKeyEquivalents;
- (void)setRespectStandardStyleKeyEquivalents:(BOOL)arg1;
- (BOOL)showsURLsInToolTips;
- (void)setShowsURLsInToolTips:(BOOL)arg1;
- (BOOL)textAreasAreResizable;
- (void)setTextAreasAreResizable:(BOOL)arg1;
- (BOOL)shrinksStandaloneImagesToFit;
- (void)setShrinksStandaloneImagesToFit:(BOOL)arg1;
- (BOOL)automaticallyDetectsCacheModel;
- (void)setAutomaticallyDetectsCacheModel:(BOOL)arg1;
- (BOOL)usesEncodingDetector;
- (void)setUsesEncodingDetector:(BOOL)arg1;
- (BOOL)isWebSecurityEnabled;
- (void)setWebSecurityEnabled:(BOOL)arg1;
- (BOOL)allowUniversalAccessFromFileURLs;
- (void)setAllowUniversalAccessFromFileURLs:(BOOL)arg1;
- (double)_backForwardCacheExpirationInterval;
- (float)PDFScaleFactor;
- (void)setPDFScaleFactor:(float)arg1;
- (long long)PDFDisplayMode;
- (void)setPDFDisplayMode:(long long)arg1;
- (int)editableLinkBehavior;
- (void)setEditableLinkBehavior:(int)arg1;
- (int)textDirectionSubmenuInclusionBehavior;
- (void)setTextDirectionSubmenuInclusionBehavior:(int)arg1;
- (BOOL)_useSiteSpecificSpoofing;
- (void)_setUseSiteSpecificSpoofing:(BOOL)arg1;
- (BOOL)databasesEnabled;
- (void)setDatabasesEnabled:(BOOL)arg1;
- (BOOL)localStorageEnabled;
- (void)setLocalStorageEnabled:(BOOL)arg1;
- (void)_postPreferencesChangesNotification;
- (BOOL)isDOMPasteAllowed;
- (void)setDOMPasteAllowed:(BOOL)arg1;
- (id)_localStorageDatabasePath;
- (void)_setLocalStorageDatabasePath:(id)arg1;
- (id)_ftpDirectoryTemplatePath;
- (void)_setFTPDirectoryTemplatePath:(id)arg1;
- (BOOL)_forceFTPDirectoryListings;
- (void)_setForceFTPDirectoryListings:(BOOL)arg1;
- (BOOL)acceleratedCompositingEnabled;
- (void)setAcceleratedCompositingEnabled:(BOOL)arg1;
- (void)didRemoveFromWebView;
- (void)willAddToWebView;
@end

@interface WebResource (WebResourcePrivate)
- (void)_ignoreWhenUnarchiving;
- (id)_initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5 response:(id)arg6 copyData:(BOOL)arg7;
- (id)_initWithData:(id)arg1 URL:(id)arg2 response:(id)arg3;
- (id)_suggestedFilename;
- (id)_fileWrapperRepresentation;
- (id)_response;
- (id)_stringValue;
@end

@interface WebResource (WebResourceInternal)
- (id)_initWithCoreResource:(PassRefPtr_43de0ce5)arg1;
- (struct ArchiveResource *)_coreResource;
@end

@interface WebScriptCallFrame (WebScriptDebugDelegateInternal)
- (id)_initWithGlobalObject:(id)arg1 debugger:(struct WebScriptDebugger *)arg2 caller:(id)arg3 debuggerCallFrame:(const struct DebuggerCallFrame *)arg4;
- (void)_setDebuggerCallFrame:(const struct DebuggerCallFrame *)arg1;
- (void)_clearDebuggerCallFrame;
- (id)_convertValueToObjcValue:(struct JSValue)arg1;
@end

@interface WebSecurityOrigin (WebInternal)
- (id)_initWithWebCoreSecurityOrigin:(struct SecurityOrigin *)arg1;
- (struct SecurityOrigin *)_core;
@end

@interface WebTextIterator (WebTextIteratorDeprecated)
- (id)currentNode;
- (id)currentText;
@end

@interface WebView (WebViewInternal)
+ (void)_updateMouseoverWithEvent:(id)arg1;
- (BOOL)_becomingFirstResponderFromOutside;
- (void)_receivedIconChangedNotification:(id)arg1;
- (void)_registerForIconNotification:(BOOL)arg1;
- (void)_dispatchDidReceiveIconFromWebFrame:(id)arg1;
- (struct String)_userAgentForURL:(const struct KURL *)arg1;
- (void)_addObject:(id)arg1 forIdentifier:(unsigned long long)arg2;
- (id)_objectForIdentifier:(unsigned long long)arg1;
- (void)_removeObjectForIdentifier:(unsigned long long)arg1;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)arg1;
- (int)_keyboardUIMode;
- (void)_setInsertionPasteboard:(id)arg1;
- (void)_setMouseDownEvent:(id)arg1;
- (void)_cancelUpdateMouseoverTimer;
- (void)_stopAutoscrollTimer;
- (void)_updateMouseoverWithFakeEvent;
- (void)_setToolTip:(id)arg1;
- (void)_selectionChanged;
- (struct Frame *)_mainCoreFrame;
- (BOOL)_needsOneShotDrawingSynchronization;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)arg1;
- (void)_startedAcceleratedCompositingForFrame:(id)arg1;
- (void)_stoppedAcceleratedCompositingForFrame:(id)arg1;
- (BOOL)_syncCompositingChanges;
- (void)_scheduleCompositingLayerSync;
@end

@interface WebView (WebFileInternal)
+ (void)_setCacheModel:(unsigned long long)arg1;
+ (unsigned long long)_cacheModel;
+ (unsigned long long)_didSetCacheModel;
+ (unsigned long long)_maxCacheModelInAnyInstance;
+ (void)_preferencesChangedNotification:(id)arg1;
+ (void)_preferencesRemovedNotification:(id)arg1;
+ (void)_preflightSpellCheckerNow:(id)arg1;
+ (void)_preflightSpellChecker;
- (id)_focusedFrame;
- (id)_selectedOrMainFrame;
- (BOOL)_isLoading;
- (id)_frameViewAtWindowPoint:(struct CGPoint)arg1;
- (BOOL)_continuousCheckingAllowed;
- (id)_responderForResponderOperations;
- (void)_openFrameInNewWindowFromMenu:(id)arg1;
- (void)_searchWithGoogleFromMenu:(id)arg1;
- (void)_searchWithSpotlightFromMenu:(id)arg1;
- (void)_clearLayerSyncLoopObserver;
@end

@interface WebView (WebViewEditingInMail)
- (void)_insertNewlineInQuotedContent;
- (void)_replaceSelectionWithNode:(id)arg1 matchStyle:(BOOL)arg2;
- (BOOL)_selectionIsCaret;
- (BOOL)_selectionIsAll;
@end

@interface WebView (WebViewEditingActions)
- (void)_performResponderOperation:(SEL)arg1 with:(id)arg2;
- (void)alignCenter:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)changeBaseWritingDirection:(id)arg1;
- (void)changeBaseWritingDirectionToLTR:(id)arg1;
- (void)changeBaseWritingDirectionToRTL:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeDocumentBackgroundColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)complete:(id)arg1;
- (void)copy:(id)arg1;
- (void)copyFont:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)indent:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)makeBaseWritingDirectionLeftToRight:(id)arg1;
- (void)makeBaseWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)outdent:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)paste:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)pasteAsRichText:(id)arg1;
- (void)pasteFont:(id)arg1;
- (void)performFindPanelAction:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)setMark:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)subscript:(id)arg1;
- (void)superscript:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)toggleBaseWritingDirection:(id)arg1;
- (void)transpose:(id)arg1;
- (void)underline:(id)arg1;
- (void)unscript:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)yank:(id)arg1;
- (void)yankAndSelect:(id)arg1;
- (void)insertText:(id)arg1;
@end

@interface WebView (WebViewUndoableEditing)
- (void)replaceSelectionWithNode:(id)arg1;
- (void)replaceSelectionWithText:(id)arg1;
- (void)replaceSelectionWithMarkupString:(id)arg1;
- (void)replaceSelectionWithArchive:(id)arg1;
- (void)deleteSelection;
- (void)applyStyle:(id)arg1;
@end

@interface WebView (WebViewTextChecking)
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)setAutomaticSpellingCorrectionEnabled:(BOOL)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
@end

@interface WebView (WebViewGrammarChecking)
- (BOOL)isGrammarCheckingEnabled;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (void)toggleGrammarChecking:(id)arg1;
@end

@interface WebView (WebViewEditing)
- (id)editableDOMRangeForPoint:(struct CGPoint)arg1;
- (BOOL)_shouldChangeSelectedDOMRange:(id)arg1 toDOMRange:(id)arg2 affinity:(unsigned long long)arg3 stillSelecting:(BOOL)arg4;
- (BOOL)maintainsInactiveSelection;
- (void)setSelectedDOMRange:(id)arg1 affinity:(unsigned long long)arg2;
- (id)selectedDOMRange;
- (unsigned long long)selectionAffinity;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (void)setTypingStyle:(id)arg1;
- (id)typingStyle;
- (void)setSmartInsertDeleteEnabled:(BOOL)arg1;
- (BOOL)smartInsertDeleteEnabled;
- (void)setContinuousSpellCheckingEnabled:(BOOL)arg1;
- (BOOL)isContinuousSpellCheckingEnabled;
- (long long)spellCheckerDocumentTag;
- (id)undoManager;
- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;
- (void)setEditingDelegate:(id)arg1;
- (id)editingDelegate;
- (id)styleDeclarationWithText:(id)arg1;
@end

@interface WebView (WebViewCSS)
- (id)computedStyleForElement:(id)arg1 pseudoElement:(id)arg2;
@end

@interface WebView (WebDebugBinding)
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
@end

@interface WebView (WebViewPrintingPrivate)
- (float)_headerHeight;
- (float)_footerHeight;
- (void)_drawHeaderInRect:(struct CGRect)arg1;
- (void)_drawFooterInRect:(struct CGRect)arg1;
- (void)_adjustPrintingMarginsForHeaderAndFooter;
- (void)_drawHeaderAndFooter;
@end

@interface WebView (WebPendingPublic)
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)searchFor:(id)arg1 direction:(BOOL)arg2 caseSensitive:(BOOL)arg3 wrap:(BOOL)arg4 startInSelection:(BOOL)arg5;
- (void)setHoverFeedbackSuspended:(BOOL)arg1;
- (BOOL)isHoverFeedbackSuspended;
- (void)setMainFrameDocumentReady:(BOOL)arg1;
- (id)_frameForCurrentSelection;
- (void)setTabKeyCyclesThroughElements:(BOOL)arg1;
- (BOOL)tabKeyCyclesThroughElements;
- (void)setScriptDebugDelegate:(id)arg1;
- (id)scriptDebugDelegate;
- (BOOL)shouldClose;
- (id)aeDescByEvaluatingJavaScriptFromString:(id)arg1;
- (BOOL)canMarkAllTextMatches;
- (unsigned long long)markAllMatchesForText:(id)arg1 caseSensitive:(BOOL)arg2 highlight:(BOOL)arg3 limit:(unsigned long long)arg4;
- (void)unmarkAllTextMatches;
- (id)rectsForTextMatches;
- (void)scrollDOMRangeToVisible:(id)arg1;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)arg1;
- (void)setPageSizeMultiplier:(float)arg1;
- (float)pageSizeMultiplier;
- (BOOL)canZoomPageIn;
- (void)zoomPageIn:(id)arg1;
- (BOOL)canZoomPageOut;
- (void)zoomPageOut:(id)arg1;
- (BOOL)canResetPageZoom;
- (void)resetPageZoom:(id)arg1;
- (void)setMediaVolume:(float)arg1;
- (float)mediaVolume;
@end

@interface WebView (WebIBActions) <NSUserInterfaceValidations>
- (void)takeStringURLFrom:(id)arg1;
- (BOOL)canGoBack;
- (BOOL)canGoForward;
- (void)goBack:(id)arg1;
- (void)goForward:(id)arg1;
- (void)stopLoading:(id)arg1;
- (void)reload:(id)arg1;
- (void)reloadFromOrigin:(id)arg1;
- (BOOL)canMakeTextSmaller;
- (void)makeTextSmaller:(id)arg1;
- (BOOL)canMakeTextLarger;
- (void)makeTextLarger:(id)arg1;
- (BOOL)canMakeTextStandardSize;
- (void)makeTextStandardSize:(id)arg1;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (BOOL)_responderValidateUserInterfaceItem:(id)arg1;
- (BOOL)validateUserInterfaceItemWithoutDelegate:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@end

@interface WebView (WebPrivate)
+ (id)_standardUserAgentWithApplicationName:(id)arg1;
+ (id)_supportedMIMETypes;
+ (id)_supportedFileExtensions;
+ (BOOL)_viewClass:(Class *)arg1 andRepresentationClass:(Class *)arg2 forMIMEType:(id)arg3;
+ (void)_setAlwaysUseATSU:(BOOL)arg1;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)arg1;
+ (BOOL)canCloseAllWebViews;
+ (void)closeAllWebViews;
+ (BOOL)canShowFile:(id)arg1;
+ (id)suggestedFileExtensionForMIMEType:(id)arg1;
+ (id)_MIMETypeForFile:(id)arg1;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)arg1;
+ (void)_registerViewClass:(Class)arg1 representationClass:(Class)arg2 forURLScheme:(id)arg3;
+ (id)_generatedMIMETypeForURLScheme:(id)arg1;
+ (BOOL)_representationExistsForURLScheme:(id)arg1;
+ (BOOL)_canHandleRequest:(id)arg1 forMainFrame:(BOOL)arg2;
+ (BOOL)_canHandleRequest:(id)arg1;
+ (id)_decodeData:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (void)_setShouldUseFontSmoothing:(BOOL)arg1;
+ (BOOL)_shouldUseFontSmoothing;
+ (void)_setUsesTestModeFocusRingColor:(BOOL)arg1;
+ (BOOL)_usesTestModeFocusRingColor;
+ (id)_pointingHandCursor;
- (void)_dispatchPendingLoadRequests;
- (void)_registerDraggedTypes;
- (BOOL)_usesDocumentViews;
- (void)_commonInitializationWithFrameName:(id)arg1 groupName:(id)arg2 usesDocumentViews:(BOOL)arg3;
- (id)_initWithFrame:(struct CGRect)arg1 frameName:(id)arg2 groupName:(id)arg3 usesDocumentViews:(BOOL)arg4;
- (BOOL)_mustDrawUnionedRect:(struct CGRect)arg1 singleRects:(const struct CGRect *)arg2 count:(long long)arg3;
- (void)drawSingleRect:(struct CGRect)arg1;
- (BOOL)isFlipped;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_viewWillDrawInternal;
- (void)viewWillDraw;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)_viewClass:(Class *)arg1 andRepresentationClass:(Class *)arg2 forMIMEType:(id)arg3;
- (BOOL)_isClosed;
- (void)_closePluginDatabases;
- (void)_closeWithFastTeardown;
- (void)_close;
- (BOOL)_isProcessingUserGesture;
- (id)_downloadURL:(id)arg1;
- (id)_openNewWindowWithRequest:(id)arg1;
- (id)inspector;
- (struct Page *)page;
- (id)_menuForElement:(id)arg1 defaultItems:(id)arg2;
- (void)_mouseDidMoveOverElement:(id)arg1 modifierFlags:(unsigned long long)arg2;
- (void)_loadBackForwardListFromOtherView:(id)arg1;
- (void)_setFormDelegate:(id)arg1;
- (id)_formDelegate;
- (BOOL)_needsAdobeFrameReloadingQuirk;
- (BOOL)_needsLinkElementTextCSSQuirk;
- (BOOL)_needsKeyboardEventDisambiguationQuirks;
- (BOOL)_needsFrameLoadDelegateRetainQuirk;
- (void)_preferencesChangedNotification:(id)arg1;
- (void)_cacheResourceLoadDelegateImplementations;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (id)_policyDelegateForwarder;
- (id)_UIDelegateForwarder;
- (id)_editingDelegateForwarder;
- (void)_closeWindow;
- (void)_pushPerformingProgrammaticFocus;
- (void)_popPerformingProgrammaticFocus;
- (BOOL)_isPerformingProgrammaticFocus;
- (void)_didChangeValueForKey:(id)arg1;
- (void)_willChangeValueForKey:(id)arg1;
- (id)_declaredKeys;
- (void)setObservationInfo:(void *)arg1;
- (void *)observationInfo;
- (void)_willChangeBackForwardKeys;
- (void)_didChangeBackForwardKeys;
- (void)_didStartProvisionalLoadForFrame:(id)arg1;
- (void)_didCommitLoadForFrame:(id)arg1;
- (void)_didFinishLoadForFrame:(id)arg1;
- (void)_didFailLoadWithError:(id)arg1 forFrame:(id)arg2;
- (void)_didFailProvisionalLoadWithError:(id)arg1 forFrame:(id)arg2;
- (id)_cachedResponseForURL:(id)arg1;
- (void)_writeImageForElement:(id)arg1 withPasteboardTypes:(id)arg2 toPasteboard:(id)arg3;
- (void)_writeLinkElement:(id)arg1 withPasteboardTypes:(id)arg2 toPasteboard:(id)arg3;
- (void)_setInitiatedDrag:(BOOL)arg1;
- (void)_addControlRect:(struct CGRect)arg1 clip:(struct CGRect)arg2 fromView:(id)arg3 toDashboardRegions:(id)arg4;
- (void)_addScrollerDashboardRegionsForFrameView:(struct FrameView *)arg1 dashboardRegions:(id)arg2;
- (void)_addScrollerDashboardRegions:(id)arg1 from:(id)arg2;
- (void)_addScrollerDashboardRegions:(id)arg1;
- (id)_dashboardRegions;
- (void)_setDashboardBehavior:(int)arg1 to:(BOOL)arg2;
- (BOOL)_dashboardBehavior:(int)arg1;
- (void)setAlwaysShowVerticalScroller:(BOOL)arg1;
- (BOOL)alwaysShowVerticalScroller;
- (void)setAlwaysShowHorizontalScroller:(BOOL)arg1;
- (void)setProhibitsMainFrameScrolling:(BOOL)arg1;
- (BOOL)alwaysShowHorizontalScroller;
- (void)_setInViewSourceMode:(BOOL)arg1;
- (BOOL)_inViewSourceMode;
- (void)_setUseFastImageScalingMode:(BOOL)arg1;
- (BOOL)_inFastImageScalingMode;
- (BOOL)_cookieEnabled;
- (void)_setCookieEnabled:(BOOL)arg1;
- (void)_setAdditionalWebPlugInPaths:(id)arg1;
- (void)_attachScriptDebuggerToAllFrames;
- (void)_detachScriptDebuggerFromAllFrames;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (BOOL)defersCallbacks;
- (void)setDefersCallbacks:(BOOL)arg1;
- (BOOL)usesPageCache;
- (void)setUsesPageCache:(BOOL)arg1;
- (id)_globalHistoryItem;
- (id)textIteratorForRect:(struct CGRect)arg1;
- (void)handleAuthenticationForResource:(id)arg1 challenge:(id)arg2 fromDataSource:(id)arg3;
- (void)_clearUndoRedoOperations;
- (void)_setCatchesDelegateExceptions:(BOOL)arg1;
- (BOOL)_catchesDelegateExceptions;
- (void)_executeCoreCommandByName:(id)arg1 value:(id)arg2;
- (void)_setCustomHTMLTokenizerTimeDelay:(double)arg1;
- (void)_setCustomHTMLTokenizerChunkSize:(int)arg1;
- (void)_clearMainFrameName;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)arg1;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)arg1;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (void)_setJavaScriptURLsAreAllowed:(BOOL)arg1;
- (BOOL)_isUsingAcceleratedCompositing;
- (id)_insertionPasteboard;
- (void)_updateActiveState;
- (BOOL)cssAnimationsSuspended;
- (void)setCSSAnimationsSuspended:(BOOL)arg1;
@end

@interface WebView (AllWebViews)
+ (void)_makeAllWebViewsPerformSelector:(SEL)arg1;
- (void)_removeFromAllWebViewsSet;
- (void)_addToAllWebViewsSet;
@end

@interface NSMenu (WebViewFactoryAdditions)
- (id)addItemWithTitle:(id)arg1 action:(SEL)arg2 tag:(int)arg3;
@end

@interface WebGeolocation (WebInternal)
- (id)_initWithWebCoreGeolocation:(struct Geolocation *)arg1;
@end

@interface WebView (WebDelegateImplementationCaching)
@end

@interface NSWindowGraphicsContext (WebKitSystemInterface)
- (void)_WebKitSystemInterface_setGraphicsPort:(struct CGContext *)arg1;
@end

