/*
 *     Generated by class-dump 3.3.1 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

#pragma mark Named Structures

struct AEDesc {
    unsigned int descriptorType;
    struct OpaqueAEDataStorageType **dataHandle;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct ComponentInstanceRecord {
    long long _field1[1];
};

struct NSSlice {
    void **items;
    char wantsStrong;
    char wantsWeak;
    char shouldCopyIn;
    char usesStrong;
    char usesWeak;
    char usesSentinel;
    char pointerPersonality;
    char integerPersonality;
    char simpleReadClear;
    struct auto_weak_callback_block block;
    void *sizeFunction;
    void *hashFunction;
    void *isEqualFunction;
    void *describeFunction;
    void *acquireFunction;
    void *relinquishFunction;
    void *allocateFunction;
    void *freeFunction;
    void *readAt;
    void *clearAt;
    void *storeAt;
};

struct OpaqueAEDataStorageType;

struct UTCDateTime {
    unsigned short highSeconds;
    unsigned int lowSeconds;
    unsigned short fraction;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NSRefCountedRunArray {
    void *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    struct _NSRunArrayItem _field8[0];
};

struct _NSRunArrayItem {
    unsigned long long length;
    id obj;
};

struct _NSSimpleAttributeDictionaryElement {
    unsigned long long hash;
    id key;
    id value;
};

struct _NSStringBuffer {
    unsigned long long _field1;
    unsigned long long _field2;
    id _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned short _field6[32];
    unsigned short _field7;
    unsigned short _field8;
};

struct _TidyDoc {
    int _field1;
};

struct _TidyNode {
    int _field1;
};

struct _ftsent {
    struct _ftsent *_field1;
    struct _ftsent *_field2;
    struct _ftsent *_field3;
    long long _field4;
    void *_field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned long long _field12;
    int _field13;
    unsigned short _field14;
    short _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    struct stat *_field19;
    char _field20[1];
};

struct _xmlAttr;

struct _xmlDict;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlDoc *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    void *_field10;
    void *_field11;
    void *_field12;
    void *_field13;
    char *_field14;
    char *_field15;
    void *_field16;
};

struct _xmlElementContent {
    int _field1;
    int _field2;
    char *_field3;
    struct _xmlElementContent *_field4;
    struct _xmlElementContent *_field5;
    struct _xmlElementContent *_field6;
    char *_field7;
};

struct _xmlHashTable;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct _xmlParserCtxt {
    struct _xmlSAXHandler *_field1;
    void *_field2;
    struct _xmlDoc *_field3;
    int _field4;
    int _field5;
    char *_field6;
    char *_field7;
    int _field8;
    int _field9;
    struct _xmlParserInput *_field10;
    int _field11;
    int _field12;
    struct _xmlParserInput **_field13;
    struct _xmlNode *_field14;
    int _field15;
    int _field16;
    struct _xmlNode **_field17;
    int _field18;
    struct _xmlParserNodeInfoSeq {
        unsigned long long maximum;
        unsigned long long length;
        struct _xmlParserNodeInfo *buffer;
    } _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    struct _xmlValidCtxt _field26;
    int _field27;
    int _field28;
    char *_field29;
    char *_field30;
    int _field31;
    int _field32;
    char **_field33;
    long long _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    char *_field39;
    char *_field40;
    char *_field41;
    int *_field42;
    int _field43;
    int _field44;
    int *_field45;
    int _field46;
    struct _xmlParserInput *_field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    void *_field52;
    int _field53;
    int _field54;
    void *_field55;
    int _field56;
    int _field57;
    struct _xmlDict *_field58;
    char **_field59;
    int _field60;
    int _field61;
    char *_field62;
    char *_field63;
    char *_field64;
    int _field65;
    int _field66;
    int _field67;
    char **_field68;
    int *_field69;
    void **_field70;
    struct _xmlHashTable *_field71;
    struct _xmlHashTable *_field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    struct _xmlNode *_field77;
    int _field78;
    struct _xmlAttr *_field79;
    struct _xmlError {
        int domain;
        int code;
        char *message;
        int level;
        char *file;
        int line;
        char *str1;
        char *str2;
        char *str3;
        int int1;
        int int2;
        void *ctxt;
        void *node;
    } _field80;
    int _field81;
    unsigned long long _field82;
    unsigned long long _field83;
};

struct _xmlParserInput;

struct _xmlSAXHandler {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    void *_field6;
    void *_field7;
    void *_field8;
    void *_field9;
    void *_field10;
    void *_field11;
    void *_field12;
    void *_field13;
    void *_field14;
    void *_field15;
    void *_field16;
    void *_field17;
    void *_field18;
    void *_field19;
    void *_field20;
    void *_field21;
    void *_field22;
    void *_field23;
    void *_field24;
    void *_field25;
    void *_field26;
    void *_field27;
    unsigned int _field28;
    void *_field29;
    void *_field30;
    void *_field31;
    void *_field32;
};

struct _xmlTextReader {
    int _field1;
    struct _xmlDoc *_field2;
    int _field3;
    int _field4;
    int _field5;
    struct _xmlParserCtxt *_field6;
    struct _xmlSAXHandler *_field7;
    struct _xmlParserInputBuffer *_field8;
    void *_field9;
    void *_field10;
    void *_field11;
    void *_field12;
    void *_field13;
    void *_field14;
    unsigned int _field15;
    unsigned int _field16;
    struct _xmlNode *_field17;
    struct _xmlNode *_field18;
    int _field19;
    struct _xmlNode *_field20;
    int _field21;
    struct _xmlBuffer *_field22;
    struct _xmlDict *_field23;
    struct _xmlNode *_field24;
    int _field25;
    int _field26;
    struct _xmlNode **_field27;
    void *_field28;
    void *_field29;
    struct _xmlRelaxNG *_field30;
    struct _xmlRelaxNGValidCtxt *_field31;
    int _field32;
    struct _xmlNode *_field33;
    struct _xmlSchema *_field34;
    struct _xmlSchemaValidCtxt *_field35;
    int _field36;
    int _field37;
    struct _xmlSchemaSAXPlug *_field38;
    int _field39;
    char *_field40;
    struct _xmlXIncludeCtxt *_field41;
    int _field42;
    int _field43;
    int _field44;
    struct _xmlPattern **_field45;
    int _field46;
    int _field47;
    void *_field48;
};

struct _xmlValidCtxt {
    void *userData;
    void *error;
    void *warning;
    struct _xmlNode *node;
    int nodeNr;
    int nodeMax;
    struct _xmlNode **nodeTab;
    unsigned int finishDtd;
    struct _xmlDoc *doc;
    int valid;
    struct _xmlValidState *vstate;
    int vstateNr;
    int vstateMax;
    struct _xmlValidState *vstateTab;
    struct _xmlAutomata *am;
    struct _xmlAutomataState *state;
};

struct _xmlValidState;

struct addrinfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    char *_field6;
    struct sockaddr *_field7;
    struct addrinfo *_field8;
};

struct auto_weak_callback_block {
    struct auto_weak_callback_block *next;
    void *callback_function;
    void *arg1;
    void *arg2;
};

struct internal_state;

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct sockaddr;

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct timespec {
    long long tv_sec;
    long long tv_nsec;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    void *zalloc;
    void *zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    long long _field5;
    id _field6;
    id _field7;
    id _field8;
} CDStruct_4f05a0fa;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
} CDStruct_89ddc8e1;

typedef struct {
    id _field1;
    id _field2;
    unsigned int _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
    id _field10;
    id _field11;
    char _field12;
    id _field13;
} CDStruct_f7128cc9;

typedef struct {
    id _field1;
    id _field2;
    unsigned int _field3;
    unsigned int _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    char _field9;
    id _field10;
    id _field11;
} CDStruct_32caee37;

typedef struct {
    id _field1;
    id _field2;
    char _field3;
    char _field4;
} CDStruct_4cb9d06e;

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    NSBundle *bundle;
    unsigned int appleEventCode;
    NSArray *classDescriptions;
    NSArray *commandDescriptions;
    NSArray *typeDescriptions;
    NSString *presentableDescription;
    NSObject *presentableNameOrNames;
    char isHidden;
} CDStruct_bb59a0ca;

typedef struct {
    NSString *_field1;
    void *_field2;
} CDStruct_ed1313e2;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
} CDStruct_19b88e92;

typedef struct {
    unsigned long long kind;
    NSObject *oldValue;
    NSObject *newValue;
    NSIndexSet *indexes;
} CDStruct_6e6d02c6;

typedef struct {
    unsigned long long _field1;
    id _field2[4];
} CDStruct_7c9a8e9f;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short *_field1;
    long long _field2;
    unsigned short *_field3;
    long long _field4;
    unsigned short *_field5;
    long long _field6;
} CDStruct_177dfe65;

typedef struct {
    unsigned int :8;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :18;
    unsigned short _field1[8];
} CDStruct_5fe7aead;

typedef struct {
    double m11;
    double m12;
    double m21;
    double m22;
    double tX;
    double tY;
} CDStruct_56a8f59f;

typedef struct {
    long long _field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
} CDStruct_e097db04;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

#pragma mark -

/*
 * File: /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
 * Arch: Intel x86-64 (x86_64)
 *       Current version: 751.21.0, Compatibility version: 300.0.0
 *
 *       Objective-C Garbage Collection: Supported
 */

@protocol NSCoding
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@protocol NSConnectionProtocol
- (id)rootObject;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDecimalNumberBehaviors
- (unsigned long long)roundingMode;
- (short)scale;
- (id)exceptionDuringOperation:(SEL)arg1 error:(unsigned long long)arg2 leftOperand:(id)arg3 rightOperand:(id)arg4;
@end

@protocol NSDiscardableContent
- (BOOL)beginContentAccess;
- (void)endContentAccess;
- (void)discardContentIfPossible;
- (BOOL)isContentDiscarded;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSKeyValueProxyCaching
+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
@end

@protocol NSLocking
- (void)lock;
- (void)unlock;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)description;
@end

@protocol NSURLAuthenticationChallengeSender <NSObject>
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
@end

@protocol NSURLDataDecoder
- (id)decodeData:(id)arg1;
- (BOOL)isFinishedDecoding;
@end

@protocol NSURLDownloadDecoder <NSObject>
+ (BOOL)canDecodeDownloadHeaderData:(id)arg1;
+ (id)MIMEType;
- (BOOL)decodeDownloadData:(id)arg1 dataForkData:(id *)arg2 resourceForkData:(id *)arg3;
- (BOOL)finishDownloadDecoding;
- (id)fileAttributes;
- (id)filenameWithOriginalFilename:(id)arg1;
@end

@protocol NSURLHandleClient
- (void)URLHandle:(id)arg1 resourceDataDidBecomeAvailable:(id)arg2;
- (void)URLHandleResourceDidBeginLoading:(id)arg1;
- (void)URLHandleResourceDidFinishLoading:(id)arg1;
- (void)URLHandleResourceDidCancelLoading:(id)arg1;
- (void)URLHandle:(id)arg1 resourceDidFailLoadingWithReason:(id)arg2;
@end

@protocol NSURLProtocolCFRunloopScheduling
- (void)scheduleOnRunloop:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)unscheduleOnRunloop:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
@end

@protocol NSURLProtocolClient <NSObject>
- (void)URLProtocol:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)URLProtocol:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveResponse:(id)arg2 cacheStoragePolicy:(unsigned long long)arg3;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2;
- (void)URLProtocolDidFinishLoading:(id)arg1;
- (void)URLProtocol:(id)arg1 didFailWithError:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parserDidStartDocument:(id)arg1;
- (void)parserDidEndDocument:(id)arg1;
- (void)parser:(id)arg1 foundNotationDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parser:(id)arg1 foundUnparsedEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4 notationName:(id)arg5;
- (void)parser:(id)arg1 foundAttributeDeclarationWithName:(id)arg2 forElement:(id)arg3 type:(id)arg4 defaultValue:(id)arg5;
- (void)parser:(id)arg1 foundElementDeclarationWithName:(id)arg2 model:(id)arg3;
- (void)parser:(id)arg1 foundInternalEntityDeclarationWithName:(id)arg2 value:(id)arg3;
- (void)parser:(id)arg1 foundExternalEntityDeclarationWithName:(id)arg2 publicID:(id)arg3 systemID:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartMappingPrefix:(id)arg2 toURI:(id)arg3;
- (void)parser:(id)arg1 didEndMappingPrefix:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 foundProcessingInstructionWithTarget:(id)arg2 data:(id)arg3;
- (void)parser:(id)arg1 foundComment:(id)arg2;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (id)parser:(id)arg1 resolveExternalEntityName:(id)arg2 systemID:(id)arg3;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 validationErrorOccurred:(id)arg2;
@end

@interface NSAEDescriptorTranslator : NSObject
{
    id _descToObjMap;
    id _objToDescMap;
}

+ (id)sharedAEDescriptorTranslator;
- (id)init;
- (void)dealloc;
- (void)registerTranslator:(id)arg1 selector:(SEL)arg2 toTranslateFromDescriptorType:(unsigned int)arg3;
- (void)registerTranslator:(id)arg1 selector:(SEL)arg2 toTranslateFromClass:(Class)arg3;
- (id)objectByTranslatingDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
- (id)descriptorByTranslatingObject:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;

@end

@interface _NSAETranslatorData : NSObject
{
    id translator;
    SEL selector;
}

- (id)initWithTranslator:(id)arg1 selector:(SEL)arg2;
- (void)dealloc;

@end

@interface NSAboutURLProtocol : NSURLProtocol
{
}

+ (BOOL)canInitWithRequest:(id)arg1;
+ (id)canonicalRequestForRequest:(id)arg1;
- (void)startLoading;
- (void)stopLoading;

@end

@interface NSAffineTransform : NSObject <NSCopying, NSCoding>
{
    CDStruct_56a8f59f _transformStruct;
}

+ (id)transform;
- (id)init;
- (id)initWithTransform:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)translateXBy:(double)arg1 yBy:(double)arg2;
- (void)rotateByDegrees:(double)arg1;
- (void)rotateByRadians:(double)arg1;
- (void)scaleBy:(double)arg1;
- (void)scaleXBy:(double)arg1 yBy:(double)arg2;
- (void)invert;
- (void)appendTransform:(id)arg1;
- (void)prependTransform:(id)arg1;
- (struct CGPoint)transformPoint:(struct CGPoint)arg1;
- (struct CGSize)transformSize:(struct CGSize)arg1;
- (CDStruct_56a8f59f)transformStruct;
- (void)setTransformStruct:(CDStruct_56a8f59f)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSAggregateExpression : NSExpression
{
    id _collection;
}

- (id)initWithCollection:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)predicateFormat;
- (id)constantValue;
- (id)collection;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;

@end

@interface NSAnyKeyExpression : NSExpression
{
}

- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;

@end

@interface NSAppleEventDescriptor : NSObject <NSCopying>
{
    struct AEDesc _desc;
    BOOL _hasValidDesc;
    char _padding[3];
}

+ (id)nullDescriptor;
+ (id)descriptorWithDescriptorType:(unsigned int)arg1 bytes:(const void *)arg2 length:(unsigned long long)arg3;
+ (id)descriptorWithDescriptorType:(unsigned int)arg1 data:(id)arg2;
+ (id)descriptorWithBoolean:(unsigned char)arg1;
+ (id)descriptorWithEnumCode:(unsigned int)arg1;
+ (id)descriptorWithInt32:(int)arg1;
+ (id)descriptorWithTypeCode:(unsigned int)arg1;
+ (id)descriptorWithString:(id)arg1;
+ (id)appleEventWithEventClass:(unsigned int)arg1 eventID:(unsigned int)arg2 targetDescriptor:(id)arg3 returnID:(short)arg4 transactionID:(int)arg5;
+ (id)listDescriptor;
+ (id)recordDescriptor;
- (id)init;
- (id)initWithAEDescNoCopy:(const struct AEDesc *)arg1;
- (id)initWithDescriptorType:(unsigned int)arg1 bytes:(const void *)arg2 length:(unsigned long long)arg3;
- (id)initWithDescriptorType:(unsigned int)arg1 data:(id)arg2;
- (id)initWithEventClass:(unsigned int)arg1 eventID:(unsigned int)arg2 targetDescriptor:(id)arg3 returnID:(short)arg4 transactionID:(int)arg5;
- (id)initListDescriptor;
- (id)initRecordDescriptor;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const struct AEDesc *)aeDesc;
- (unsigned int)descriptorType;
- (id)data;
- (unsigned char)booleanValue;
- (unsigned int)enumCodeValue;
- (int)int32Value;
- (unsigned int)typeCodeValue;
- (id)stringValue;
- (unsigned int)eventClass;
- (unsigned int)eventID;
- (short)returnID;
- (int)transactionID;
- (void)setParamDescriptor:(id)arg1 forKeyword:(unsigned int)arg2;
- (id)paramDescriptorForKeyword:(unsigned int)arg1;
- (void)removeParamDescriptorWithKeyword:(unsigned int)arg1;
- (void)setAttributeDescriptor:(id)arg1 forKeyword:(unsigned int)arg2;
- (id)attributeDescriptorForKeyword:(unsigned int)arg1;
- (long long)numberOfItems;
- (void)insertDescriptor:(id)arg1 atIndex:(long long)arg2;
- (id)descriptorAtIndex:(long long)arg1;
- (void)removeDescriptorAtIndex:(long long)arg1;
- (void)setDescriptor:(id)arg1 forKeyword:(unsigned int)arg2;
- (id)descriptorForKeyword:(unsigned int)arg1;
- (void)removeDescriptorWithKeyword:(unsigned int)arg1;
- (unsigned int)keywordForDescriptorAtIndex:(long long)arg1;
- (id)coerceToDescriptorType:(unsigned int)arg1;

@end

@interface NSAppleEventManager : NSObject
{
    BOOL _isPreparedForDispatch;
    char _padding[3];
}

+ (id)sharedAppleEventManager;
- (id)init;
- (void)setEventHandler:(id)arg1 andSelector:(SEL)arg2 forEventClass:(unsigned int)arg3 andEventID:(unsigned int)arg4;
- (void)removeEventHandlerForEventClass:(unsigned int)arg1 andEventID:(unsigned int)arg2;
- (short)dispatchRawAppleEvent:(const struct AEDesc *)arg1 withRawReply:(struct AEDesc *)arg2 handlerRefCon:(void *)arg3;
- (id)currentAppleEvent;
- (id)currentReplyAppleEvent;
- (struct __NSAppleEventManagerSuspension *)suspendCurrentAppleEvent;
- (id)appleEventForSuspensionID:(struct __NSAppleEventManagerSuspension *)arg1;
- (id)replyAppleEventForSuspensionID:(struct __NSAppleEventManagerSuspension *)arg1;
- (void)setCurrentAppleEventAndReplyEventWithSuspensionID:(struct __NSAppleEventManagerSuspension *)arg1;
- (void)resumeWithSuspensionID:(struct __NSAppleEventManagerSuspension *)arg1;

@end

@interface NSAppleEventHandling : NSObject
{
    NSAppleEventDescriptor *_event;
    NSAppleEventDescriptor *_replyEvent;
    NSScriptCommand *_scriptCommand;
    BOOL _isSuspendedWithAE;
    char _padding[3];
}

- (id)initWithEvent:(const struct AEDesc *)arg1 replyEvent:(struct AEDesc *)arg2;
- (void)dealloc;
- (void)setScriptCommand:(id)arg1;
- (id)event;
- (id)replyEvent;
- (id)scriptCommand;
- (void)suspend;
- (void)resumeWithScriptCommandResult:(id)arg1;

@end

@interface NSAppleScript : NSObject <NSCopying>
{
    NSString *_source;
    unsigned int _compiledScriptID;
    void *_reserved1;
    void *_reserved2;
}

+ (id)_infoForOSAError:(int)arg1;
- (id)_initWithScriptIDNoCopy:(unsigned int)arg1;
- (id)_initWithData:(id)arg1 error:(id *)arg2;
- (id)_initWithContentsOfFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfURL:(id)arg1 error:(id *)arg2;
- (id)initWithSource:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)finalize;
- (id)source;
- (BOOL)isCompiled;
- (BOOL)compileAndReturnError:(id *)arg1;
- (id)executeAndReturnError:(id *)arg1;
- (id)executeAppleEvent:(id)arg1 error:(id *)arg2;

@end

@interface NSUnarchiver : NSCoder
{
    void *datax;
    unsigned long long cursor;
    struct _NSZone *objectZone;
    unsigned long long systemVersion;
    BOOL streamerVersion;
    BOOL swap;
    BOOL unused1;
    BOOL unused2;
    void *pointerTable;
    void *stringTable;
    id classVersions;
    long long lastLabel;
    void *map;
    void *allUnarchivedObjects;
    id reserved;
}

+ (void)initialize;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (id)unarchiveObjectWithFile:(id)arg1;
+ (void)decodeClassName:(id)arg1 asClassName:(id)arg2;
+ (id)classNameDecodedForArchiveClassName:(id)arg1;
- (id)initForReadingWithData:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)_setAllowedClasses:(id)arg1;
- (void)setObjectZone:(struct _NSZone *)arg1;
- (struct _NSZone *)objectZone;
- (BOOL)isAtEnd;
- (unsigned int)systemVersion;
- (long long)versionForClassName:(id)arg1;
- (id)data;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (id)decodeObject;
- (id)decodeDataObject;
- (id)decodePropertyList;
- (void)decodeClassName:(id)arg1 asClassName:(id)arg2;
- (id)classNameDecodedForArchiveClassName:(id)arg1;

@end

@interface NSArchiver : NSCoder
{
    void *mdata;
    void *pointerTable;
    void *stringTable;
    void *ids;
    void *map;
    void *replacementTable;
    void *reserved;
}

+ (void)initialize;
+ (void)encodeClassName:(id)arg1 intoClassName:(id)arg2;
+ (id)classNameEncodedForTrueClassName:(id)arg1;
+ (id)archivedDataWithRootObject:(id)arg1;
+ (BOOL)archiveRootObject:(id)arg1 toFile:(id)arg2;
- (id)initForWritingWithMutableData:(id)arg1;
- (id)archiverData;
- (id)data;
- (void)dealloc;
- (void)finalize;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (long long)versionForClassName:(id)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeObject:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodePropertyList:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeClassName:(id)arg1 intoClassName:(id)arg2;
- (id)classNameEncodedForTrueClassName:(id)arg1;

@end

@interface NSCFArray : NSMutableArray
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsInRange:(struct _NSRange)arg1;
- (BOOL)containsObject:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (void)removeAllObjects;
- (void)exchangeObjectAtIndex:(unsigned long long)arg1 withObjectAtIndex:(unsigned long long)arg2;
- (void)sortUsingFunction:(void *)arg1 context:(void *)arg2;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjects:(id *)arg2 count:(unsigned long long)arg3;

@end

@interface NSSimpleAttributeDictionaryEnumerator : NSEnumerator
{
    NSSimpleAttributeDictionary *dictionary;
    unsigned long long nextElement;
}

- (id)initWithAttributeDictionary:(id)arg1;
- (id)nextObject;
- (void)dealloc;
- (void)finalize;

@end

@interface NSSimpleAttributeDictionary : NSDictionary
{
    unsigned int numElements;
    unsigned int refCount;
    struct _NSSimpleAttributeDictionaryElement elements[1];
}

+ (id)emptyAttributeDictionary;
+ (id)newWithDictionary:(id)arg1;
- (id)newWithKey:(id)arg1 object:(id)arg2;
- (unsigned long long)count;
- (unsigned long long)slotForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (void)dealloc;
- (void)finalize;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSMutableRLEArray : NSRLEArray
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setBlockCapacity:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObject:(id)arg2 length:(unsigned long long)arg3;
- (void)deleteObjectsInRange:(struct _NSRange)arg1;

@end

@interface NSRLEArray : NSObject <NSCopying, NSMutableCopying>
{
    struct _NSRefCountedRunArray *theList;
}

- (id)init;
- (id)initWithRefCountedRunArray:(struct _NSRefCountedRunArray *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)finalize;
- (void)_makeNewListFrom:(struct _NSRefCountedRunArray *)arg1;
- (id)objectAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)objectAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 runIndex:(unsigned long long *)arg3;
- (id)objectAtRunIndex:(unsigned long long)arg1 length:(unsigned long long *)arg2;
- (unsigned long long)count;
- (id)description;

@end

@interface NSMutableStringProxyForMutableAttributedString : NSMutableString
{
    NSMutableAttributedString *mutableAttributedString;
}

- (id)initWithMutableAttributedString:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;

@end

@interface NSConcreteMutableAttributedString : NSMutableAttributedString
{
    NSMutableString *mutableString;
    NSMutableRLEArray *mutableAttributes;
    struct {
        unsigned int attributeFixingDisabled:8;
        unsigned int :24;
    } fields;
}

+ (Class)_mutableStringClass;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (unsigned long long)length;
- (id)string;
- (id)_runArrayHoldingAttributes;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;

@end

@interface NSMutableAttributedString : NSAttributedString
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (id)mutableString;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttributesWeakly:(id)arg1 range:(struct _NSRange)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)appendAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)setAttributedString:(id)arg1;
- (void)beginEditing;
- (void)endEditing;

@end

@interface NSConcreteAttributedString : NSAttributedString
{
    NSString *string;
    NSRLEArray *attributes;
}

- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithAttributedString:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (unsigned long long)length;
- (id)string;
- (id)_runArrayHoldingAttributes;

@end

@interface NSAttributedString : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
}

+ (void)_setAttributedDictionaryClass:(Class)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1 replacingCharactersInRanges:(const struct _NSRange *)arg2 numberOfRanges:(long long)arg3 withString:(id)arg4;
- (id)attributedStringByWeaklyAddingAttributes:(id)arg1;
- (unsigned long long)length;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToAttributedString:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (void)enumerateAttributesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(id)arg3;
- (void)enumerateAttribute:(id)arg1 inRange:(struct _NSRange)arg2 options:(unsigned long long)arg3 usingBlock:(id)arg4;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSAutoreleasePool : NSObject
{
    void *_token;
    void *_reserved3;
    void *_reserved2;
    void *_reserved;
}

+ (void)addObject:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)showPools;
+ (void)releaseAllPools;
+ (unsigned long long)autoreleasedObjectCount;
+ (unsigned long long)topAutoreleasePoolCount;
+ (BOOL)autoreleasePoolExists;
+ (void)enableRelease:(BOOL)arg1;
+ (void)enableFreedObjectCheck:(BOOL)arg1;
+ (unsigned long long)poolCountHighWaterMark;
+ (void)setPoolCountHighWaterMark:(unsigned long long)arg1;
+ (unsigned long long)poolCountHighWaterResolution;
+ (void)setPoolCountHighWaterResolution:(unsigned long long)arg1;
+ (unsigned long long)totalAutoreleasedObjects;
+ (void)resetTotalAutoreleasedObjects;
- (id)init;
- (void)drain;
- (oneway void)release;
- (id)initWithCapacity:(unsigned long long)arg1;
- (void)addObject:(id)arg1;
- (id)retain;
- (unsigned long long)retainCount;
- (id)autorelease;
- (void)dealloc;

@end

@interface NSBetweenPredicateOperator : NSPredicateOperator
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (void)_setOptions:(unsigned long long)arg1;

@end

@interface NSBigMutableString : NSMutableString
{
    struct {
        unsigned int isStorage:1;
        unsigned int isUnicode:1;
        unsigned int hasBOM:1;
        unsigned int swap:1;
        unsigned int :28;
    } flags;
    unsigned long long length;
    union {
        struct {
            NSData *data;
            char *dataBytes;
        } d;
        struct {
            struct __CFStorage *storage;
        } s;
    } contents;
}

- (id)initWithString:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (BOOL)_getData:(id *)arg1 encoding:(unsigned long long *)arg2;
- (BOOL)_setData:(id)arg1 encoding:(unsigned long long)arg2;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (BOOL)_isCString;

@end

@interface NSBundle : NSObject
{
    unsigned long long _flags;
    id _cfBundle;
    unsigned long long _refCount;
    Class _principalClass;
    id _tmp1;
    id _tmp2;
    void *_reserved1;
    void *_reserved0;
}

+ (id)findBundleResources:(id)arg1 callingMethod:(SEL)arg2 directory:(id)arg3 languages:(id)arg4 name:(id)arg5 types:(id)arg6 limit:(unsigned long long)arg7;
+ (id)findBundleResourceURLs:(id)arg1 callingMethod:(SEL)arg2 bundleURL:(id)arg3 languages:(id)arg4 name:(id)arg5 types:(id)arg6 limit:(unsigned long long)arg7;
+ (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
+ (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundleWithURL:(id)arg4;
+ (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;
+ (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 inBundleWithURL:(id)arg3;
+ (void)setSystemLanguages:(id)arg1;
+ (id)bundleWithPath:(id)arg1;
+ (id)bundleWithURL:(id)arg1;
+ (id)bundleWithIdentifier:(id)arg1;
+ (id)bundleForClass:(Class)arg1;
+ (id)loadedBundles;
+ (id)allBundles;
+ (id)allFrameworks;
+ (id)mainBundle;
+ (id)debugDescription;
+ (id)preferredLocalizationsFromArray:(id)arg1;
+ (id)preferredLocalizationsFromArray:(id)arg1 forPreferences:(id)arg2;
- (struct __CFBundle *)_cfBundle;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLocalization:(id)arg4;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 localization:(id)arg4;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLocalization:(id)arg3;
- (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2 localization:(id)arg3;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2;
- (id)URLsForResourcesWithExtension:(id)arg1 subdirectory:(id)arg2;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
- (id)_computeExecutablePath;
- (BOOL)load;
- (BOOL)loadAndReturnError:(id *)arg1;
- (BOOL)unload;
- (BOOL)isLoaded;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)finalize;
- (id)initWithURL:(id)arg1;
- (id)initWithPath:(id)arg1;
- (void)_initInfoDictionary;
- (id)bundlePath;
- (id)bundleURL;
- (id)resourcePath;
- (id)resourceURL;
- (id)executablePath;
- (id)executableURL;
- (id)pathForAuxiliaryExecutable:(id)arg1;
- (id)URLForAuxiliaryExecutable:(id)arg1;
- (id)privateFrameworksPath;
- (id)privateFrameworksURL;
- (id)sharedFrameworksPath;
- (id)sharedFrameworksURL;
- (id)sharedSupportPath;
- (id)sharedSupportURL;
- (id)builtInPlugInsPath;
- (id)builtInPlugInsURL;
- (id)bundleIdentifier;
- (unsigned long long)versionNumber;
- (id)bundleLanguages;
- (void)invalidateResourceCache;
- (id)defaultsDictionary;
- (Class)classNamed:(id)arg1;
- (Class)principalClass;
- (id)infoDictionary;
- (id)localizedInfoDictionary;
- (id)objectForInfoDictionaryKey:(id)arg1;
- (id)description;
- (id)_regionsArray;
- (id)_pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forRegion:(id)arg4;
- (id)_pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forRegion:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 forLanguage:(id)arg4;
- (id)pathsForResourcesOfType:(id)arg1 inDirectory:(id)arg2 forLanguage:(id)arg3;
- (id)localizations;
- (id)preferredLocalizations;
- (id)developmentLocalization;
- (id)localizationsToSearch;
- (BOOL)preflightAndReturnError:(id *)arg1;
- (id)executableArchitectures;

@end

@interface NSDebugString : NSString
{
    NSString *string;
}

- (id)initWithString:(id)arg1;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSCFAttributedString : NSMutableAttributedString
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (BOOL)isEqual:(id)arg1;
- (void)finalize;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)length;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (BOOL)isEqualToAttributedString:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (Class)classForCoder;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)insertAttributedString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)appendAttributedString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)setAttributedString:(id)arg1;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface NSCFBoolean : NSNumber
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (BOOL)charValue;
- (unsigned char)unsignedCharValue;
- (short)shortValue;
- (unsigned short)unsignedShortValue;
- (int)intValue;
- (unsigned int)unsignedIntValue;
- (long long)longValue;
- (unsigned long long)unsignedLongValue;
- (long long)longLongValue;
- (unsigned long long)unsignedLongLongValue;
- (float)floatValue;
- (double)doubleValue;
- (BOOL)boolValue;
- (unsigned long long)_cfTypeID;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSCFNumber : NSNumber
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (BOOL)charValue;
- (unsigned char)unsignedCharValue;
- (short)shortValue;
- (unsigned short)unsignedShortValue;
- (int)intValue;
- (unsigned int)unsignedIntValue;
- (long long)longValue;
- (unsigned long long)unsignedLongValue;
- (long long)longLongValue;
- (unsigned long long)unsignedLongLongValue;
- (float)floatValue;
- (double)doubleValue;
- (BOOL)boolValue;

@end

@interface NSCFString : NSMutableString
{
}

- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (unsigned long long)hash;
- (void)finalize;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (const unsigned short *)_fastCharacterContents;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (const char *)cString;
- (const char *)UTF8String;
- (unsigned long long)cStringLength;
- (const char *)cStringUsingEncoding:(unsigned long long)arg1;
- (BOOL)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (id)substringWithRange:(struct _NSRange)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToString:(id)arg1;
- (BOOL)hasPrefix:(id)arg1;
- (BOOL)hasSuffix:(id)arg1;
- (void)getLineStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)fastestEncoding;
- (unsigned long long)smallestEncoding;
- (Class)classForCoder;
- (BOOL)_isCString;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)appendString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)appendFormat:(id)arg1;
- (void)setString:(id)arg1;
- (void)appendCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;

@end

@interface NSCFURLProtocol : NSURLProtocol
{
    struct _CFURLProtocol *cfProt;
}

+ (BOOL)canInitWithRequest:(id)arg1;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
- (void)dealloc;
- (void)finalize;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (void)startLoading;
- (void)stopLoading;
- (void)_suspendLoading;
- (void)_resumeLoading;

@end

@interface _NSCFURLProtocolBridge : NSObject <NSURLProtocolClient>
{
    unsigned long long flags;
    NSURLProtocol *nsProt;
    struct _CFURLProtocol *_cfProt;
    struct _CFURLAuthChallenge *cfChallenge;
    NSURLAuthenticationChallenge *nsChallenge;
    struct __CFRunLoopSource *_rlSrc;
    NSMutableArray *events;
    NSLock *eventMutex;
    NSMutableArray *clientInstructions;
    NSLock *clientMutex;
    BOOL _loading;
}

+ (void)barRequest:(struct _CFURLRequest *)arg1;
+ (void)permitRequest:(struct _CFURLRequest *)arg1;
+ (void)registerWithCFURLProtocol;
- (id)description;
- (void)dealloc;
- (void)finalize;
- (id)initWithCFURLProtocol:(struct _CFURLProtocol *)arg1;
- (void)schedule:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)unschedule:(struct __CFRunLoop *)arg1 mode:(struct __CFString *)arg2;
- (void)sendInstruction:(int)arg1;
- (void)dispatchInstruction:(int)arg1;
- (void)dispatchInstructions;
- (void)start;
- (void)stop;
- (void)halt;
- (void)resume;
- (void)_forgetClient;
- (void)useCredential:(struct _CFURLCredential *)arg1 forChallenge:(struct _CFURLAuthChallenge *)arg2;
- (void)wasRedirectedToRequest:(id)arg1 redirectResponse:(id)arg2;
- (void)cachedResponseIsValid:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
- (void)didLoadData:(id)arg1 lengthReceived:(long long)arg2;
- (void)didFinishLoading;
- (void)didFailWithError:(id)arg1;
- (void)didReceiveAuthenticationChallenge:(id)arg1;
- (void)processEventQ;
- (void)marshalEvent:(long long)arg1 obj:(id)arg2 obj2:(id)arg3;
- (void)URLProtocol:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)URLProtocol:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveResponse:(id)arg2 cacheStoragePolicy:(unsigned long long)arg3;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2 lengthReceived:(long long)arg3;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2;
- (void)URLProtocolDidFinishLoading:(id)arg1;
- (void)URLProtocol:(id)arg1 didFailWithError:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;

@end

@interface NSAutoCalendar : NSCalendar
{
    NSCalendar *cal;
    NSLocale *changedLocale;
    NSTimeZone *changedTimeZone;
    unsigned long long changedFirstWeekday;
    unsigned long long changedMinimumDaysinFirstWeek;
    NSDate *changedGregorianStartDate;
}

- (void)_update:(id)arg1;
- (id)init;
- (id)initWithCalendarIdentifier:(id)arg1;
- (void)dealloc;
- (id)calendarIdentifier;
- (void)setLocale:(id)arg1;
- (id)locale;
- (void)setTimeZone:(id)arg1;
- (id)timeZone;
- (void)setFirstWeekday:(unsigned long long)arg1;
- (unsigned long long)firstWeekday;
- (void)setMinimumDaysInFirstWeek:(unsigned long long)arg1;
- (unsigned long long)minimumDaysInFirstWeek;
- (void)setGregorianStartDate:(id)arg1;
- (id)gregorianStartDate;
- (struct _NSRange)minimumRangeOfUnit:(unsigned long long)arg1;
- (struct _NSRange)maximumRangeOfUnit:(unsigned long long)arg1;
- (struct _NSRange)rangeOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3;
- (unsigned long long)ordinalityOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3;
- (BOOL)rangeOfUnit:(unsigned long long)arg1 startDate:(id *)arg2 interval:(double *)arg3 forDate:(id)arg4;
- (id)dateFromComponents:(id)arg1;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned long long)arg3;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned long long)arg4;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;

@end

@interface NSCalendarDate : NSDate
{
    unsigned long long refCount;
    double _timeIntervalSinceReferenceDate;
    NSTimeZone *_timeZone;
    NSString *_formatString;
    void *_reserved;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)distantFuture;
+ (id)distantPast;
+ (id)calendarDate;
+ (id)dateWithYear:(long long)arg1 month:(unsigned long long)arg2 day:(unsigned long long)arg3 hour:(unsigned long long)arg4 minute:(unsigned long long)arg5 second:(unsigned long long)arg6 timeZone:(id)arg7;
+ (id)dateWithString:(id)arg1 calendarFormat:(id)arg2;
+ (id)dateWithString:(id)arg1 calendarFormat:(id)arg2 locale:(id)arg3;
- (id)initWithString:(id)arg1;
- (void)dealloc;
- (oneway void)release;
- (id)initWithTimeIntervalSinceReferenceDate:(double)arg1;
- (id)init;
- (id)initWithYear:(long long)arg1 month:(unsigned long long)arg2 day:(unsigned long long)arg3 hour:(unsigned long long)arg4 minute:(unsigned long long)arg5 second:(unsigned long long)arg6 timeZone:(id)arg7;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)timeIntervalSinceReferenceDate;
- (id)timeZoneDetail;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)calendarFormat;
- (void)setCalendarFormat:(id)arg1;
- (long long)dayOfCommonEra;
- (long long)yearOfCommonEra;
- (long long)monthOfYear;
- (long long)dayOfMonth;
- (long long)dayOfWeek;
- (long long)dayOfYear;
- (long long)hourOfDay;
- (long long)minuteOfHour;
- (long long)secondOfMinute;
- (long long)microsecondOfSecond;
- (id)dateByAddingYears:(long long)arg1 months:(long long)arg2 days:(long long)arg3 hours:(long long)arg4 minutes:(long long)arg5 seconds:(long long)arg6;
- (void)years:(long long *)arg1 months:(long long *)arg2 days:(long long *)arg3 hours:(long long *)arg4 minutes:(long long *)arg5 seconds:(long long *)arg6 sinceDate:(id)arg7;
- (id)addTimeInterval:(double)arg1;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (id)descriptionWithCalendarFormat:(id)arg1;
- (id)initWithString:(id)arg1 calendarFormat:(id)arg2;
- (id)descriptionWithCalendarFormat:(id)arg1 locale:(id)arg2;
- (id)initWithString:(id)arg1 calendarFormat:(id)arg2 locale:(id)arg3;

@end

@interface NSBuiltinCharacterSet : NSCharacterSet
{
    long long offset;
    id expandedset;
}

- (id)initWithCoder:(id)arg1;

@end

@interface _NSPlaceholderCharacterSet : NSCharacterSet
{
    NSCharacterSet *_original;
    NSCharacterSet *_invertedSet;
    struct {
        unsigned int _inverted:1;
        unsigned int _builtin:1;
        unsigned int _isCF:1;
        unsigned int _reserved:29;
    } _flags;
}

- (id)initWithSet:(id)arg1 options:(unsigned long long)arg2;
- (struct __CFCharacterSet *)_expandedCFCharacterSet;
- (void)_expandInverted;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (BOOL)characterIsMember:(unsigned short)arg1;
- (BOOL)longCharacterIsMember:(unsigned int)arg1;
- (BOOL)isSupersetOfSet:(id)arg1;
- (BOOL)hasMemberInPlane:(unsigned char)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)bitmapRepresentation;
- (BOOL)isEmpty;
- (id)invertedSet;
- (id)autorelease;
- (id)retain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (void)dealloc;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
- (id)replacementObjectForCoder:(id)arg1;

@end

@interface NSCFCharacterSet : NSMutableCharacterSet
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (BOOL)characterIsMember:(unsigned short)arg1;
- (BOOL)longCharacterIsMember:(unsigned int)arg1;
- (BOOL)isSupersetOfSet:(id)arg1;
- (BOOL)hasMemberInPlane:(unsigned char)arg1;
- (id)bitmapRepresentation;
- (id)invertedSet;
- (void)addCharactersInRange:(struct _NSRange)arg1;
- (void)removeCharactersInRange:(struct _NSRange)arg1;
- (void)addCharactersInString:(id)arg1;
- (void)removeCharactersInString:(id)arg1;
- (void)formUnionWithCharacterSet:(id)arg1;
- (void)formIntersectionWithCharacterSet:(id)arg1;
- (void)invert;
- (void)makeCharacterSetCompact;
- (void)makeCharacterSetFast;
- (Class)classForArchiver;
- (Class)classForKeyedArchiver;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSMutableCharacterSet : NSCharacterSet <NSCopying, NSMutableCopying>
{
}

+ (id)characterSetWithRange:(struct _NSRange)arg1;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)controlCharacterSet;
+ (id)whitespaceCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)letterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)illegalCharacterSet;
+ (id)punctuationCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)symbolCharacterSet;
+ (id)newlineCharacterSet;
+ (id)characterSetWithBitmapRepresentation:(id)arg1;
+ (id)characterSetWithContentsOfFile:(id)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)addCharactersInRange:(struct _NSRange)arg1;
- (void)removeCharactersInRange:(struct _NSRange)arg1;
- (void)addCharactersInString:(id)arg1;
- (void)removeCharactersInString:(id)arg1;
- (void)formUnionWithCharacterSet:(id)arg1;
- (void)formIntersectionWithCharacterSet:(id)arg1;
- (void)invert;
- (BOOL)isMutable;
- (id)initWithCoder:(id)arg1;

@end

@interface NSCharacterSet : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
}

+ (void)initialize;
+ (id)controlCharacterSet;
+ (id)whitespaceCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)letterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)punctuationCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)illegalCharacterSet;
+ (id)symbolCharacterSet;
+ (id)newlineCharacterSet;
+ (id)characterSetWithContentsOfFile:(id)arg1;
+ (id)characterSetWithRange:(struct _NSRange)arg1;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)characterSetWithBitmapRepresentation:(id)arg1;
- (unsigned long long)_cfTypeID;
- (struct __CFCharacterSet *)_expandedCFCharacterSet;
- (id)init;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)invertedSet;
- (BOOL)isEmpty;
- (unsigned long long)count;
- (BOOL)isMutable;
- (void)makeImmutable;
- (BOOL)characterIsMember:(unsigned short)arg1;
- (BOOL)longCharacterIsMember:(unsigned int)arg1;
- (BOOL)isSupersetOfSet:(id)arg1;
- (BOOL)hasMemberInPlane:(unsigned char)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)bitmapRepresentation;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_retainedBitmapRepresentation;

@end

@interface NSClassDescription : NSObject
{
}

+ (void)registerClassDescription:(id)arg1 forClass:(Class)arg2;
+ (void)invalidateClassDescriptionCache;
+ (id)classDescriptionForClass:(Class)arg1;
- (id)attributeKeys;
- (id)toOneRelationshipKeys;
- (id)toManyRelationshipKeys;
- (id)inverseForRelationshipKey:(id)arg1;

@end

@interface NSCloneCommand : NSScriptCommand
{
    NSScriptObjectSpecifier *_keySpecifier;
}

- (void)setReceiversSpecifier:(id)arg1;
- (void)dealloc;
- (id)keySpecifier;
- (id)performDefaultImplementation;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSCoder : NSObject
{
}

- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeDataObject:(id)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (id)decodeDataObject;
- (long long)versionForClassName:(id)arg1;
- (void)encodeObject:(id)arg1;
- (void)encodePropertyList:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)decodeObject;
- (id)decodePropertyList;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (BOOL)allowsKeyedCoding;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodeLong:(long long)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (BOOL)containsValueForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (long long)decodeIntegerForKey:(id)arg1;
- (long long)decodeLongForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (void)setObjectZone:(struct _NSZone *)arg1;
- (struct _NSZone *)objectZone;
- (unsigned int)systemVersion;

@end

@interface NSComparisonPredicate : NSPredicate
{
    void *_reserved2;
    NSPredicateOperator *_predicateOperator;
    NSExpression *_lhs;
    NSExpression *_rhs;
}

+ (id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned long long)arg3 type:(unsigned long long)arg4 options:(unsigned long long)arg5;
+ (id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3;
+ (id)predicateWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
- (id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned long long)arg3 type:(unsigned long long)arg4 options:(unsigned long long)arg5;
- (id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3;
- (id)keyPathExpressionForString:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3;
- (id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3;
- (id)initWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
- (void)dealloc;
- (id)predicateFormat;
- (unsigned long long)predicateOperatorType;
- (unsigned long long)comparisonPredicateModifier;
- (id)leftExpression;
- (id)rightExpression;
- (SEL)customSelector;
- (id)predicateOperator;
- (void)setPredicateOperator:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)_acceptOperator:(id)arg1 flags:(unsigned long long)arg2;
- (void)_acceptExpressions:(id)arg1 flags:(unsigned long long)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (unsigned long long)options;

@end

@interface NSComparisonPredicateOperator : NSPredicateOperator
{
    unsigned long long _variant;
    unsigned long long _options;
}

- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (unsigned long long)variant;
- (unsigned long long)options;
- (BOOL)isEqual:(id)arg1;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;

@end

@interface NSCompoundPredicate : NSPredicate
{
    void *_reserved2;
    unsigned long long _type;
    NSArray *_subpredicates;
}

+ (id)andPredicateWithSubpredicates:(id)arg1;
+ (id)orPredicateWithSubpredicates:(id)arg1;
+ (id)notPredicateWithSubpredicate:(id)arg1;
+ (id)_operatorForType:(unsigned long long)arg1;
- (id)initWithType:(unsigned long long)arg1 subpredicates:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (unsigned long long)compoundPredicateType;
- (id)_predicateOperator;
- (id)subpredicates;
- (id)_subpredicateDescription:(id)arg1;
- (id)predicateFormat;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)_acceptSubpredicates:(id)arg1 flags:(unsigned long long)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (id)predicateOperator;

@end

@interface NSCompoundPredicateOperator : NSPredicateOperator
{
}

+ (id)andPredicateOperator;
+ (id)orPredicateOperator;
+ (id)notPredicateOperator;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (id)symbol;
- (BOOL)evaluatePredicates:(id)arg1 withObject:(id)arg2;
- (BOOL)evaluatePredicates:(id)arg1 withObject:(id)arg2 substitutionVariables:(id)arg3;

@end

@interface NSConnection : NSObject
{
    id receivePort;
    id sendPort;
    id delegate;
    int busy;
    int localProxyCount;
    int waitCount;
    id delayedRL;
    id statistics;
    unsigned char isDead;
    unsigned char isValid;
    unsigned char wantsInvalid;
    unsigned int authGen:1;
    unsigned int authCheck:1;
    unsigned int encryptFlag:1;
    unsigned int decryptFlag:1;
    unsigned int doRequest:1;
    unsigned int isQueueing:1;
    unsigned int isMulti:1;
    unsigned int invalidateRP:1;
    id ___1;
    id ___2;
    id runLoops;
    id requestModes;
    id rootObject;
    void *registerInfo;
    id replMode;
    id classInfoImported;
    id releasedProxies;
    void *reserved;
}

+ (void)initialize;
+ (void)_portInvalidated:(id)arg1;
+ (id)lookUpConnectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)connectionWithReceivePort:(id)arg1 sendPort:(id)arg2;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)connectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2;
+ (id)rootProxyForConnectionWithRegisteredName:(id)arg1 host:(id)arg2 usingNameServer:(id)arg3;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2 usingNameServer:(id)arg3;
+ (id)serviceConnectionWithName:(id)arg1 rootObject:(id)arg2;
+ (id)defaultConnection;
+ (id)statistics;
+ (id)allConnections;
+ (id)currentConversation;
+ (void)_toggleLogging;
+ (void)_enableLogging:(BOOL)arg1;
- (id)init;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2;
- (BOOL)registerName:(id)arg1;
- (BOOL)registerName:(id)arg1 withNameServer:(id)arg2;
- (id)portCoderWithComponents:(id)arg1;
- (void)sendReleasedProxies;
- (void)handlePortMessage:(id)arg1;
- (BOOL)isValid;
- (id)retain;
- (oneway void)release;
- (void)dealloc;
- (void)_threadDying:(id)arg1;
- (void)invalidate;
- (void)finalize;
- (id)statistics;
- (void)setRequestTimeout:(double)arg1;
- (double)requestTimeout;
- (void)setReplyTimeout:(double)arg1;
- (double)replyTimeout;
- (BOOL)independentConversationQueueing;
- (void)setIndependentConversationQueueing:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)addRequestMode:(id)arg1;
- (void)removeRequestMode:(id)arg1;
- (id)requestModes;
- (id)replyMode;
- (void)setReplyMode:(id)arg1;
- (id)receivePort;
- (id)sendPort;
- (id)rootProxy;
- (id)rootObject;
- (void)setRootObject:(id)arg1;
- (void)_incrementLocalProxyCount;
- (void)_decrementLocalProxyCount;
- (void)addClassNamed:(char *)arg1 version:(unsigned long long)arg2;
- (unsigned long long)versionForClassNamed:(id)arg1;
- (id)remoteObjects;
- (id)localObjects;
- (void)handlePortCoder:(id)arg1;
- (void)handleReleasedProxies:(char *)arg1 length:(unsigned long long)arg2;
- (void)decodeReleasedProxies:(id)arg1;
- (void)finishEncoding:(id)arg1;
- (void)releaseWireID:(unsigned int)arg1 count:(unsigned long long)arg2;
- (BOOL)sendWireCountForWireID:(unsigned int)arg1 port:(id)arg2;
- (BOOL)_cleanupAndAuthenticate:(id)arg1 sequence:(unsigned int)arg2 conversation:(id *)arg3 invocation:(id)arg4 raise:(BOOL)arg5;
- (id)newConversation;
- (BOOL)_shouldDispatch:(id *)arg1 invocation:(id)arg2 sequence:(unsigned int)arg3 coder:(id)arg4;
- (void)handleRequest:(id)arg1 sequence:(unsigned int)arg2;
- (id)dispatchInvocation:(id)arg1;
- (void)returnResult:(id)arg1 exception:(id)arg2 sequence:(unsigned int)arg3 imports:(id)arg4;
- (void)sendInvocation:(id)arg1 internal:(BOOL)arg2;
- (void)sendInvocation:(id)arg1;
- (id)description;
- (void)addPortsToRunLoop:(id)arg1;
- (void)removePortsFromRunLoop:(id)arg1;
- (BOOL)hasRunLoop:(id)arg1;
- (void)enableMultipleThreads;
- (BOOL)multipleThreadsEnabled;
- (void)addRunLoop:(id)arg1;
- (void)removeRunLoop:(id)arg1;
- (void)run;
- (void)runInNewThread;

@end

@interface NSConcreteDistantObjectRequest : NSDistantObjectRequest
{
    NSInvocation *invocation;
    NSMutableArray *importedObjects;
    id conversation;
    unsigned int sequence;
    NSConnection *connection;
}

- (id)initWithInvocation:(id)arg1 conversation:(id)arg2 sequence:(unsigned int)arg3 importedObjects:(id)arg4 connection:(id)arg5;
- (id)invocation;
- (id)connection;
- (id)conversation;
- (void)replyWithException:(id)arg1;
- (void)dealloc;

@end

@interface NSDistantObjectRequest : NSObject
{
}

- (id)invocation;
- (id)connection;
- (id)conversation;
- (void)replyWithException:(id)arg1;

@end

@interface NSDistributedObjectsStatistics : NSDictionary
{
    unsigned long long requestsReceived;
    unsigned long long repliesSent;
    unsigned long long requestsSent;
    unsigned long long repliesReceived;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (id)allKeys;
- (id)keyEnumerator;
- (void)addStatistics:(id)arg1;
- (id)objectForKey:(id)arg1;

@end

@interface _NSDOConversationInfo : NSObject
{
    id doConversation;
    unsigned long long doConversationCount;
    id doConversationRequest;
}

@end

@interface NSConstantString : NSSimpleCString
{
}

- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)length;
- (unsigned long long)cStringLength;
- (unsigned long long)fastestEncoding;
- (unsigned long long)smallestEncoding;
- (BOOL)canBeConvertedToEncoding:(unsigned long long)arg1;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToString:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (unsigned long long)hash;
- (id)autorelease;
- (id)retain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (void)dealloc;
- (void)finalize;
- (const char *)cString;
- (const char *)lossyCString;

@end

@interface NSConstantValueExpression : NSExpression
{
    id constantValue;
}

- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (id)constantValue;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;

@end

@interface NSCountCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface NSCreateCommand : NSScriptCommand
{
    id _moreVars2;
}

- (id)initWithCommandDescription:(id)arg1;
- (void)dealloc;
- (id)createClassDescription;
- (id)resolvedKeyDictionary;
- (id)_newObjectForContainer:(id)arg1 inValueForKey:(id)arg2 withClassDescription:(id)arg3;
- (id)performDefaultImplementation;
- (id)description;

@end

@interface NSCreateCommandMoreIVars : NSObject
{
    NSScriptObjectSpecifier *subjectsSpecifier;
}

@end

@interface NSCustomPredicateOperator : NSPredicateOperator
{
    SEL _selector;
}

- (id)initWithCustomSelector:(SEL)arg1 modifier:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (SEL)selector;
- (BOOL)isEqual:(id)arg1;
- (id)symbol;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;

@end

@interface NSCFData : NSMutableData
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)length;
- (const void *)bytes;
- (void *)mutableBytes;
- (void)setLength:(unsigned long long)arg1;

@end

@interface NSSubrangeData : NSData
{
    unsigned int _reserved:3;
    unsigned int _retainCount:29;
    struct _NSRange _range;
    NSData *_data;
}

- (unsigned long long)length;
- (const void *)bytes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_bytesAreVM;
- (void)getBytes:(void *)arg1;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (id)init;
- (id)initWithData:(id)arg1 range:(struct _NSRange)arg2;
- (void)dealloc;

@end

@interface NSPurgeableData : NSMutableData <NSDiscardableContent>
{
    unsigned long long _length;
    int _accessCount;
    unsigned char _private[32];
    void *_reserved;
}

- (unsigned long long)length;
- (const void *)bytes;
- (void *)mutableBytes;
- (void)setLength:(unsigned long long)arg1;
- (id)description;
- (BOOL)beginContentAccess;
- (void)endContentAccess;
- (void)_destroyMemory;
- (void)discardContentIfPossible;
- (BOOL)isContentDiscarded;
- (id)init;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (void)dealloc;
- (void)finalize;

@end

@interface NSConcreteMutableData : NSMutableData
{
    unsigned int _reserved:1;
    unsigned int _needToZero:1;
    unsigned int _hasVM:1;
    unsigned int _retainCount:29;
    unsigned long long _length;
    unsigned long long _capacity;
    void *_bytes;
}

- (unsigned long long)length;
- (const void *)bytes;
- (void *)mutableBytes;
- (void)_freeBytes;
- (void)setLength:(unsigned long long)arg1;
- (BOOL)_bytesAreVM;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)appendData:(id)arg1;
- (void)increaseLengthBy:(unsigned long long)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2;
- (void)resetBytesInRange:(struct _NSRange)arg1;
- (id)init;
- (id)initWithLength:(unsigned long long)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (void)dealloc;
- (void)finalize;

@end

@interface NSConcreteData : NSData
{
    unsigned int _isInline:1;
    unsigned int _shouldFree:1;
    unsigned int _hasVM:1;
    unsigned int _retainCount:29;
    unsigned long long _length;
    unsigned long long _capacity;
    void *_bytes;
    unsigned char _space[12];
}

- (unsigned long long)length;
- (const void *)bytes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_bytesAreVM;
- (void)getBytes:(void *)arg1;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (id)init;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (void)dealloc;
- (void)finalize;

@end

@interface NSDateFormatter : NSFormatter
{
    NSMutableDictionary *_attributes;
    struct __CFDateFormatter *_formatter;
    unsigned long long _counter;
}

+ (unsigned long long)defaultFormatterBehavior;
+ (void)setDefaultFormatterBehavior:(unsigned long long)arg1;
+ (void)initialize;
+ (id)localizedStringFromDate:(id)arg1 dateStyle:(unsigned long long)arg2 timeStyle:(unsigned long long)arg3;
+ (id)dateFormatFromTemplate:(id)arg1 options:(unsigned long long)arg2 locale:(id)arg3;
- (void)_regenerateFormatter;
- (id)init;
- (void)_reset;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (id)stringFromDate:(id)arg1;
- (id)dateFromString:(id)arg1;
- (unsigned long long)dateStyle;
- (void)setDateStyle:(unsigned long long)arg1;
- (unsigned long long)timeStyle;
- (void)setTimeStyle:(unsigned long long)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (BOOL)generatesCalendarDates;
- (void)setGeneratesCalendarDates:(BOOL)arg1;
- (unsigned long long)formatterBehavior;
- (void)setFormatterBehavior:(unsigned long long)arg1;
- (id)dateFormat;
- (void)setDateFormat:(id)arg1;
- (id)_dateFormat;
- (void)_setDateFormat:(id)arg1;
- (void)_setIsLenient:(BOOL)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;
- (id)calendar;
- (void)setCalendar:(id)arg1;
- (BOOL)isLenient;
- (void)setLenient:(BOOL)arg1;
- (id)twoDigitStartDate;
- (void)setTwoDigitStartDate:(id)arg1;
- (id)defaultDate;
- (void)setDefaultDate:(id)arg1;
- (id)eraSymbols;
- (void)setEraSymbols:(id)arg1;
- (id)monthSymbols;
- (void)setMonthSymbols:(id)arg1;
- (id)shortMonthSymbols;
- (void)setShortMonthSymbols:(id)arg1;
- (id)weekdaySymbols;
- (void)setWeekdaySymbols:(id)arg1;
- (id)shortWeekdaySymbols;
- (void)setShortWeekdaySymbols:(id)arg1;
- (id)AMSymbol;
- (void)setAMSymbol:(id)arg1;
- (id)PMSymbol;
- (void)setPMSymbol:(id)arg1;
- (id)longEraSymbols;
- (void)setLongEraSymbols:(id)arg1;
- (id)veryShortMonthSymbols;
- (void)setVeryShortMonthSymbols:(id)arg1;
- (id)standaloneMonthSymbols;
- (void)setStandaloneMonthSymbols:(id)arg1;
- (id)shortStandaloneMonthSymbols;
- (void)setShortStandaloneMonthSymbols:(id)arg1;
- (id)veryShortStandaloneMonthSymbols;
- (void)setVeryShortStandaloneMonthSymbols:(id)arg1;
- (id)veryShortWeekdaySymbols;
- (void)setVeryShortWeekdaySymbols:(id)arg1;
- (id)standaloneWeekdaySymbols;
- (void)setStandaloneWeekdaySymbols:(id)arg1;
- (id)shortStandaloneWeekdaySymbols;
- (void)setShortStandaloneWeekdaySymbols:(id)arg1;
- (id)veryShortStandaloneWeekdaySymbols;
- (void)setVeryShortStandaloneWeekdaySymbols:(id)arg1;
- (id)quarterSymbols;
- (void)setQuarterSymbols:(id)arg1;
- (id)shortQuarterSymbols;
- (void)setShortQuarterSymbols:(id)arg1;
- (id)standaloneQuarterSymbols;
- (void)setStandaloneQuarterSymbols:(id)arg1;
- (id)shortStandaloneQuarterSymbols;
- (void)setShortStandaloneQuarterSymbols:(id)arg1;
- (id)gregorianStartDate;
- (void)setGregorianStartDate:(id)arg1;
- (BOOL)doesRelativeDateFormatting;
- (void)setDoesRelativeDateFormatting:(BOOL)arg1;

@end

@interface NSDecimalNumberHandler : NSObject <NSDecimalNumberBehaviors, NSCoding>
{
    unsigned int _scale:16;
    unsigned int _roundingMode:3;
    unsigned int _raiseOnExactness:1;
    unsigned int _raiseOnOverflow:1;
    unsigned int _raiseOnUnderflow:1;
    unsigned int _raiseOnDivideByZero:1;
    unsigned int _unused:9;
    void *_reserved2;
    void *_reserved;
}

+ (id)defaultDecimalNumberHandler;
+ (id)decimalNumberHandlerWithRoundingMode:(unsigned long long)arg1 scale:(short)arg2 raiseOnExactness:(BOOL)arg3 raiseOnOverflow:(BOOL)arg4 raiseOnUnderflow:(BOOL)arg5 raiseOnDivideByZero:(BOOL)arg6;
- (id)initWithRoundingMode:(unsigned long long)arg1 scale:(short)arg2 raiseOnExactness:(BOOL)arg3 raiseOnOverflow:(BOOL)arg4 raiseOnUnderflow:(BOOL)arg5 raiseOnDivideByZero:(BOOL)arg6;
- (unsigned long long)roundingMode;
- (short)scale;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)exceptionDuringOperation:(SEL)arg1 error:(unsigned long long)arg2 leftOperand:(id)arg3 rightOperand:(id)arg4;

@end

@interface NSDecimalNumber : NSNumber
{
    unsigned int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:1;
    unsigned int _hasExternalRefCount:1;
    unsigned int _refs:16;
    unsigned short _mantissa[0];
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)decimalNumberWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(BOOL)arg3;
+ (id)decimalNumberWithDecimal:(CDStruct_5fe7aead)arg1;
+ (id)decimalNumberWithString:(id)arg1;
+ (id)decimalNumberWithString:(id)arg1 locale:(id)arg2;
+ (id)minimumDecimalNumber;
+ (id)maximumDecimalNumber;
+ (id)zero;
+ (id)one;
+ (id)notANumber;
+ (void)setDefaultBehavior:(id)arg1;
+ (id)defaultBehavior;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(BOOL)arg3;
- (id)initWithDecimal:(CDStruct_5fe7aead)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 locale:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (CDStruct_5fe7aead)decimalValue;
- (long long)compare:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (const char *)objCType;
- (double)doubleValue;
- (void)getValue:(void *)arg1;
- (id)decimalNumberByAdding:(id)arg1;
- (id)decimalNumberByAdding:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberBySubstracting:(id)arg1;
- (id)decimalNumberBySubstracting:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberBySubtracting:(id)arg1;
- (id)decimalNumberBySubtracting:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByMultiplyingBy:(id)arg1;
- (id)decimalNumberByMultiplyingBy:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByDividingBy:(id)arg1;
- (id)decimalNumberByDividingBy:(id)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByRaisingToPower:(unsigned long long)arg1;
- (id)decimalNumberByRaisingToPower:(unsigned long long)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByMultiplyingByPowerOf10:(short)arg1;
- (id)decimalNumberByMultiplyingByPowerOf10:(short)arg1 withBehavior:(id)arg2;
- (id)decimalNumberByRoundingAccordingToBehavior:(id)arg1;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)charValue;
- (unsigned char)unsignedCharValue;
- (short)shortValue;
- (unsigned short)unsignedShortValue;
- (int)intValue;
- (unsigned int)unsignedIntValue;
- (long long)longValue;
- (unsigned long long)unsignedLongValue;
- (long long)longLongValue;
- (unsigned long long)unsignedLongLongValue;
- (float)floatValue;
- (BOOL)boolValue;

@end

@interface NSDecimalNumberPlaceholder : NSObject
{
    struct _NSZone *_zone;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)init;
- (id)initWithDecimal:(CDStruct_5fe7aead)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 locale:(id)arg2;
- (id)initWithMantissa:(unsigned long long)arg1 exponent:(short)arg2 isNegative:(BOOL)arg3;
- (id)initWithCoder:(id)arg1;

@end

@interface NSDeleteCommand : NSScriptCommand
{
    NSScriptObjectSpecifier *_keySpecifier;
}

- (void)setReceiversSpecifier:(id)arg1;
- (void)dealloc;
- (id)keySpecifier;
- (id)performDefaultImplementation;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface _NSKeyForwardingSetBinding : NSKeySetBinding
{
    BOOL _isStored;
    char _padding[3];
}

- (id)initWithKey:(id)arg1 isStored:(BOOL)arg2;
- (void)setValue:(id)arg1 inObject:(id)arg2;

@end

@interface _NSKeyForwardingGetBinding : NSKeyGetBinding
{
    BOOL _isStored;
    char _padding[3];
}

- (id)initWithKey:(id)arg1 isStored:(BOOL)arg2;
- (id)getValueFromObject:(id)arg1;

@end

@interface NSKeyBinding : NSObject
{
    Class _class;
    NSString *_key;
    void *_funcP;
}

+ (void)suppressCapitalizedKeyWarning;
- (Class)targetClass;
- (id)key;
- (void)setKey:(id)arg1;
- (void)dealloc;

@end

@interface _NSSelectorSetBinding : NSKeySetBinding
{
    SEL setSel;
    void *setMethod;
    void *set;
}

- (id)initWithSetFunc:(void *)arg1 forImp:(void *)arg2 selector:(SEL)arg3;
- (void)setValue:(id)arg1 inObject:(id)arg2;
- (BOOL)isScalarProperty;

@end

@interface _NSSelectorGetBinding : NSKeyGetBinding
{
    SEL getSel;
    void *getMethod;
    void *get;
}

- (id)initWithFunc:(void *)arg1 forImp:(void *)arg2 selector:(SEL)arg3;
- (id)getValueFromObject:(id)arg1;

@end

@interface _NSKVCPIvarSetBinding : NSKeySetBinding
{
    long long offset;
    void *set;
}

- (id)initWithSetFunc:(void *)arg1 ivarOffset:(long long)arg2;
- (void)setValue:(id)arg1 inObject:(id)arg2;
- (BOOL)isScalarProperty;

@end

@interface _NSKVCPIvarGetBinding : NSKeyGetBinding
{
    long long offset;
    void *get;
}

- (id)initWithFunc:(void *)arg1 ivarOffset:(long long)arg2;
- (id)getValueFromObject:(id)arg1;

@end

@interface NSKeySetBinding : NSKeyBinding
{
}

- (id)init;
- (void)setValue:(id)arg1 inObject:(id)arg2;
- (BOOL)isScalarProperty;

@end

@interface NSKeyGetBinding : NSKeyBinding
{
}

- (id)init;
- (id)getValueFromObject:(id)arg1;

@end

@interface NSCFDictionary : NSMutableDictionary
{
}

- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyEnumerator;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (void)removeAllObjects;

@end

@interface NSMutableStringProxy : NSDistantObject
{
}

- (void)getCharacters:(unsigned short *)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)getCString:(char *)arg1;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;

@end

@interface NSDistantObject : NSProxy <NSCoding>
{
    id _knownSelectors;
    unsigned long long _wireCount;
    unsigned long long _refCount;
    id _proto;
    unsigned short ___2;
    unsigned char ___1;
    unsigned char _wireType;
    id _remoteClass;
}

+ (void)_enableLogging:(BOOL)arg1;
+ (void)initialize;
+ (id)proxyWithTarget:(id)arg1 connection:(id)arg2;
+ (id)proxyWithLocal:(id)arg1 connection:(id)arg2;
+ (id)newDistantObjectWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 connection:(id)arg2;
- (id)initWithLocal:(id)arg1 connection:(id)arg2;
- (id)connectionForProxy;
- (void)setProtocolForProxy:(id)arg1;
- (id)protocolForProxy;
- (BOOL)conformsToProtocol:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)_releaseWireCount:(unsigned long long)arg1;
- (id)retain;
- (unsigned long long)retainCount;
- (void)dealloc;
- (oneway void)release;
- (void)retainWireCount;
- (void)finalize;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)class;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)stringByAppendingFormat:(id)arg1;
- (void)appendFormat:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopy;
- (struct _NSZone *)zone;

@end

@interface NSDistantObjectTableEntry : NSObject
{
    NSConnection *_conn;
    NSDistantObject *_proxy;
    id _localObject;
    unsigned int _wireID;
}

- (void)dealloc;
- (id)description;

@end

@interface NSDistributedLock : NSObject
{
    void *_priv;
}

+ (id)lockWithPath:(id)arg1;
- (id)init;
- (id)initWithPath:(id)arg1;
- (void)invalidate;
- (void)dealloc;
- (void)finalize;
- (BOOL)tryLock;
- (void)unlock;
- (void)breakLock;
- (id)lockDate;
- (id)description;

@end

@interface NSEqualityPredicateOperator : NSPredicateOperator
{
    BOOL _negate;
    unsigned long long _options;
}

- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 negate:(BOOL)arg3;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 negate:(BOOL)arg3 options:(unsigned long long)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (BOOL)isNegation;
- (void)setNegation:(BOOL)arg1;
- (unsigned long long)options;
- (void)_setOptions:(unsigned long long)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;

@end

@interface NSCFError : NSError
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (long long)code;
- (id)domain;
- (id)userInfo;
- (Class)classForCoder;

@end

@interface NSError : NSObject <NSCopying, NSCoding>
{
    void *_reserved;
    long long _code;
    NSString *_domain;
    NSDictionary *_userInfo;
}

+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3;
- (id)initWithDomain:(id)arg1 code:(long long)arg2 userInfo:(id)arg3;
- (void)dealloc;
- (void)finalize;
- (long long)code;
- (id)domain;
- (id)userInfo;
- (id)_cocoaErrorStringWithKind:(id)arg1 variant:(id)arg2;
- (id)_cocoaErrorStringWithKind:(id)arg1;
- (struct __CFString *)_retainedUserInfoCallBackForKey:(id)arg1;
- (id)localizedDescription;
- (id)localizedFailureReason;
- (id)localizedRecoverySuggestion;
- (id)localizedRecoveryOptions;
- (id)recoveryAttempter;
- (id)helpAnchor;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSAssertionHandler : NSObject
{
    void *_reserved;
}

+ (id)currentHandler;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 file:(id)arg3 lineNumber:(long long)arg4 description:(id)arg5;
- (void)handleFailureInFunction:(id)arg1 file:(id)arg2 lineNumber:(long long)arg3 description:(id)arg4;

@end

@interface NSExpression : NSObject <NSCoding, NSCopying>
{
    void *_reserved;
    unsigned long long _expressionType;
}

+ (id)expressionWithFormat:(id)arg1 argumentArray:(id)arg2;
+ (id)expressionWithFormat:(id)arg1;
+ (id)expressionWithFormat:(id)arg1 arguments:(CDStruct_19b88e92 [1])arg2;
+ (id)expressionForConstantValue:(id)arg1;
+ (id)expressionForEvaluatedObject;
+ (id)expressionForVariable:(id)arg1;
+ (id)expressionForSymbolicString:(id)arg1;
+ (id)expressionForAggregate:(id)arg1;
+ (id)expressionForSubquery:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
+ (id)expressionForFunction:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
+ (id)expressionForVariableNameAssignment:(id)arg1 expression:(id)arg2;
+ (id)expressionForTernaryWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;
+ (id)_keyPathExpressionForString:(id)arg1;
+ (id)expressionForKeyPath:(id)arg1;
+ (id)expressionForFunction:(id)arg1 arguments:(id)arg2;
+ (id)expressionForUnionSet:(id)arg1 with:(id)arg2;
+ (id)expressionForIntersectSet:(id)arg1 with:(id)arg2;
+ (id)expressionForMinusSet:(id)arg1 with:(id)arg2;
+ (id)expressionForBlock:(id)arg1 arguments:(void)arg2;
- (id)initWithExpressionType:(unsigned long long)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)description;
- (id)predicateFormat;
- (unsigned long long)expressionType;
- (id)keyPath;
- (id)constantValue;
- (id)variable;
- (id)function;
- (id)operand;
- (SEL)selector;
- (id)arguments;
- (id)leftExpression;
- (id)rightExpression;
- (id)predicate;
- (id)collection;
- (id)subexpression;
- (id)trueExpression;
- (id)falseExpression;
- (id)expressionBlock;
- (BOOL)_shouldUseParensWithDescription;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;

@end

@interface NSFTPURLHandle : NSURLHandle
{
    NSURL *originalURL;
    struct __CFReadStream *ftpReadStream;
}

+ (void)initialize;
+ (BOOL)canInitWithURL:(id)arg1;
+ (id)cachedHandleForURL:(id)arg1;
- (id)initWithURL:(id)arg1 cached:(BOOL)arg2;
- (void)dealloc;
- (void)finalize;
- (BOOL)writeData:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (id)propertyForKeyIfAvailable:(id)arg1;
- (BOOL)writeProperty:(id)arg1 forKey:(id)arg2;
- (long long)expectedResourceDataSize;
- (void)flushCachedData;
- (id)loadInForeground;
- (void)beginLoadInBackground;
- (void)endLoadInBackground;
- (void)reportStreamError;
- (void)performStreamRead;
- (struct __CFReadStream *)createFTPReadStream;
- (id)errorStringForFTPStatusCode:(long long)arg1 fromURL:(id)arg2;

@end

@interface NSFalsePredicate : NSPredicate
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)defaultInstance;
- (id)retain;
- (unsigned long long)retainCount;
- (void)release;
- (id)autorelease;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)predicateFormat;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;

@end

@interface NSConcretePipe : NSPipe
{
    NSFileHandle *_readHandle;
    NSFileHandle *_writeHandle;
}

- (id)fileHandleForReading;
- (id)fileHandleForWriting;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSPipe : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)pipe;
- (id)init;
- (id)fileHandleForReading;
- (id)fileHandleForWriting;

@end

@interface NSConcreteFileHandle : NSFileHandle
{
    int _fd;
    void *_nativeHandle;
    void *_avars;
    unsigned short _flags;
    struct dispatch_source_s *_dsrc;
    char _padding[2];
    struct __CFRunLoopSource *_source;
    struct __CFRunLoop *_rl;
    unsigned short _activity;
    char _padding2[2];
    int _error;
    void *_resultBytes;
    unsigned long long _resultLength;
    int _resultSocket;
}

- (int)fileDescriptor;
- (id)initWithFileDescriptor:(int)arg1 closeOnDealloc:(BOOL)arg2;
- (id)initWithFileDescriptor:(int)arg1;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3 error:(id *)arg4;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3;
- (id)availableData;
- (unsigned long long)readDataOfLength:(unsigned long long)arg1 buffer:(char *)arg2;
- (id)readDataOfLength:(unsigned long long)arg1;
- (id)readDataToEndOfFile;
- (void)writeData:(id)arg1;
- (unsigned long long)offsetInFile;
- (unsigned long long)seekToEndOfFile;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)synchronizeFile;
- (void)closeFile;
- (id)port;
- (void)setPort:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)performActivity:(long long)arg1 modes:(id)arg2;
- (void)readInBackgroundAndNotifyForModes:(id)arg1;
- (void)readInBackgroundAndNotify;
- (void)readToEndOfFileInBackgroundAndNotifyForModes:(id)arg1;
- (void)readToEndOfFileInBackgroundAndNotify;
- (void)acceptConnectionInBackgroundAndNotifyForModes:(id)arg1;
- (void)acceptConnectionInBackgroundAndNotify;
- (void)waitForDataInBackgroundAndNotifyForModes:(id)arg1;
- (void)waitForDataInBackgroundAndNotify;

@end

@interface NSNullFileHandle : NSFileHandle
{
}

- (id)availableData;
- (id)readDataToEndOfFile;
- (id)readDataOfLength:(unsigned long long)arg1;
- (void)writeData:(id)arg1;
- (unsigned long long)offsetInFile;
- (unsigned long long)seekToEndOfFile;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)synchronizeFile;
- (void)closeFile;
- (int)fileDescriptor;

@end

@interface NSFileHandle : NSObject
{
}

+ (void)initialize;
+ (id)fileHandleWithStandardInput;
+ (id)fileHandleWithStandardOutput;
+ (id)fileHandleWithStandardError;
+ (id)fileHandleWithNullDevice;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)fileHandleForReadingAtPath:(id)arg1;
+ (id)fileHandleForWritingAtPath:(id)arg1;
+ (id)fileHandleForUpdatingAtPath:(id)arg1;
+ (id)fileHandleForReadingFromURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForWritingToURL:(id)arg1 error:(id *)arg2;
+ (id)fileHandleForUpdatingURL:(id)arg1 error:(id *)arg2;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3;
- (id)initWithPath:(id)arg1 flags:(long long)arg2 createMode:(long long)arg3 error:(id *)arg4;
- (id)availableData;
- (id)readDataToEndOfFile;
- (id)readDataOfLength:(unsigned long long)arg1;
- (void)writeData:(id)arg1;
- (unsigned long long)offsetInFile;
- (unsigned long long)seekToEndOfFile;
- (void)seekToFileOffset:(unsigned long long)arg1;
- (void)truncateFileAtOffset:(unsigned long long)arg1;
- (void)synchronizeFile;
- (void)closeFile;
- (int)fileDescriptor;

@end

@interface NSFileManager : NSObject
{
}

+ (id)defaultManager;
- (id)mountedVolumeURLsIncludingResourceValuesForKeys:(id)arg1 options:(unsigned long long)arg2;
- (id)enumeratorAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 errorHandler:(id)arg4;
- (id)contentsOfDirectoryAtURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)URLsForDirectory:(unsigned long long)arg1 inDomains:(unsigned long long)arg2;
- (id)_URLForReplacingItemAtURL:(id)arg1 error:(id *)arg2;
- (id)URLForDirectory:(unsigned long long)arg1 inDomain:(unsigned long long)arg2 appropriateForURL:(id)arg3 create:(BOOL)arg4 error:(id *)arg5;
- (BOOL)_itemAtURLIsInAnyTrash:(id)arg1;
- (id)_posixPathComponentsWithPath:(id)arg1;
- (id)_windowsPathComponentsWithPath:(id)arg1;
- (BOOL)_newReplicatePath:(id)arg1 ref:(void *)arg2 atPath:(id)arg3 ref:(void *)arg4 operation:(int)arg5 fileMap:(id)arg6 handler:(id)arg7;
- (BOOL)_replicatePath:(id)arg1 atPath:(id)arg2 operation:(int)arg3 fileMap:(id)arg4 handler:(id)arg5;
- (BOOL)_removeFileAtPath:(id)arg1 handler:(id)arg2 shouldDeleteFork:(BOOL)arg3;
- (BOOL)_removeFileAtPath:(id)arg1 handler:(id)arg2 shouldDeleteFork:(BOOL)arg3 enteredDirectory:(BOOL)arg4;
- (id)_displayPathForPath:(id)arg1;
- (BOOL)directoryCanBeCreatedAtPath:(id)arg1;
- (id)currentDirectoryPath;
- (BOOL)changeCurrentDirectoryPath:(id)arg1;
- (id)fileAttributesAtPath:(id)arg1 traverseLink:(BOOL)arg2;
- (BOOL)changeFileAttributes:(id)arg1 atPath:(id)arg2;
- (BOOL)fileExistsAtPath:(id)arg1;
- (BOOL)fileExistsAtPath:(id)arg1 isDirectory:(char *)arg2;
- (BOOL)isReadableFileAtPath:(id)arg1;
- (BOOL)isWritableFileAtPath:(id)arg1;
- (BOOL)isExecutableFileAtPath:(id)arg1;
- (BOOL)isDeletableFileAtPath:(id)arg1;
- (id)displayNameAtPath:(id)arg1;
- (BOOL)linkPath:(id)arg1 toPath:(id)arg2 handler:(id)arg3;
- (BOOL)copyPath:(id)arg1 toPath:(id)arg2 handler:(id)arg3;
- (BOOL)movePath:(id)arg1 toPath:(id)arg2 handler:(id)arg3;
- (BOOL)removeFileAtPath:(id)arg1 handler:(id)arg2;
- (id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(long long)arg3 keepExtension:(BOOL)arg4 error:(id *)arg5;
- (id)directoryContentsAtPath:(id)arg1 matchingExtension:(id)arg2 options:(long long)arg3 keepExtension:(BOOL)arg4;
- (id)directoryContentsAtPath:(id)arg1;
- (id)enumeratorAtPath:(id)arg1;
- (id)subpathsAtPath:(id)arg1;
- (BOOL)createDirectoryAtPath:(id)arg1 attributes:(id)arg2;
- (id)pathContentOfSymbolicLinkAtPath:(id)arg1;
- (BOOL)createSymbolicLinkAtPath:(id)arg1 pathContent:(id)arg2;
- (BOOL)createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (id)contentsAtPath:(id)arg1;
- (BOOL)contentsEqualAtPath:(id)arg1 andPath:(id)arg2;
- (id)fileSystemAttributesAtPath:(id)arg1;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2 withPath:(id)arg3;
- (const char *)fileSystemRepresentationWithPath:(id)arg1;
- (id)stringWithFileSystemRepresentation:(const char *)arg1 length:(unsigned long long)arg2;
- (id)componentsToDisplayForPath:(id)arg1;
- (id)extendedAttributesAtPath:(id)arg1 error:(id *)arg2;
- (id)extendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (BOOL)removeExtendedAttributeForKey:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (BOOL)setExtendedAttribute:(id)arg1 forKey:(id)arg2 atPath:(id)arg3 error:(id *)arg4;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)filesystemItemCopyOperation:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)copyItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)copyItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)filesystemItemMoveOperation:(id)arg1 shouldMoveItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)filesystemItemMoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 movingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)moveItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)moveItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)filesystemItemLinkOperation:(id)arg1 shouldLinkItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)filesystemItemLinkOperation:(id)arg1 shouldProceedAfterError:(id)arg2 linkingItemAtPath:(id)arg3 toPath:(id)arg4;
- (BOOL)linkItemAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (BOOL)linkItemAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (BOOL)filesystemItemRemoveOperation:(id)arg1 shouldRemoveItemAtPath:(id)arg2;
- (BOOL)filesystemItemRemoveOperation:(id)arg1 shouldProceedAfterError:(id)arg2 removingItemAtPath:(id)arg3;
- (BOOL)removeItemAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)removeItemAtURL:(id)arg1 error:(id *)arg2;
- (BOOL)setAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id *)arg3;
- (BOOL)createDirectoryAtPath:(id)arg1 withIntermediateDirectories:(BOOL)arg2 attributes:(id)arg3 error:(id *)arg4;
- (id)contentsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (id)subpathsOfDirectoryAtPath:(id)arg1 error:(id *)arg2;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;
- (id)_attributesOfItemAtPath:(id)arg1 filterResourceFork:(BOOL)arg2 error:(id *)arg3;
- (id)_attributesOfItemAtURL:(id)arg1 filterResourceFork:(BOOL)arg2 error:(id *)arg3;
- (id)attributesOfFileSystemForPath:(id)arg1 error:(id *)arg2;
- (BOOL)createSymbolicLinkAtPath:(id)arg1 withDestinationPath:(id)arg2 error:(id *)arg3;
- (id)destinationOfSymbolicLinkAtPath:(id)arg1 error:(id *)arg2;
- (BOOL)replaceItemAtURL:(id)arg1 withItemAtURL:(id)arg2 backupItemName:(id)arg3 options:(unsigned long long)arg4 resultingItemURL:(id *)arg5 error:(id *)arg6;

@end

@interface NSURLDirectoryEnumerator : NSDirectoryEnumerator
{
    struct __CFURLEnumerator *_enumerator;
    id _errorHandler;
    BOOL shouldContinue;
}

- (id)initWithURL:(id)arg1 includingPropertiesForKeys:(id)arg2 options:(unsigned long long)arg3 errorHandler:(id)arg4;
- (id)nextObject;
- (void)skipDescendents;
- (void)skipDescendants;
- (unsigned long long)level;
- (id)fileAttributes;
- (id)directoryAttributes;
- (void)dealloc;
- (void)finalize;
@property(copy) id errorHandler; // @synthesize errorHandler=_errorHandler;

@end

@interface NSAllDescendantPathsEnumerator : NSDirectoryEnumerator
{
    NSString *path;
    NSArray *contents;
    unsigned long long idx;
    NSString *prepend;
    NSAllDescendantPathsEnumerator *under;
    NSFileAttributes *directoryAttributes;
    NSString *pathToLastReportedItem;
    unsigned long long depth;
    BOOL cross;
    char _padding[3];
}

+ (id)newWithPath:(id)arg1 prepend:(id)arg2 attributes:(id)arg3 cross:(BOOL)arg4 depth:(unsigned long long)arg5;
- (id)nextObject;
- (id)fileAttributes;
- (id)directoryAttributes;
- (id)currentSubdirectoryAttributes;
- (unsigned long long)level;
- (id)_under;
- (void)skipDescendents;
- (void)skipDescendants;
- (void)dealloc;

@end

@interface NSDirectoryEnumerator : NSEnumerator
{
}

- (id)nextObject;
- (id)fileAttributes;
- (id)directoryAttributes;
- (unsigned long long)level;
- (void)skipDescendents;
- (void)skipDescendants;

@end

@interface NSFileAttributes : NSDictionary
{
    NSMutableDictionary *dict;
    struct stat statInfo;
    struct {
        unsigned int creatorCode;
        unsigned int fileTypeCode;
        struct UTCDateTime creationDate;
        struct _fields {
            unsigned int creatorCode:1;
            unsigned int fileTypeCode:1;
            unsigned int extensionHidden:1;
            unsigned int creationDate:1;
            unsigned int fileBusy:1;
            unsigned int reserved:27;
        } validFields;
        char extensionHidden;
        char _padding[3];
    } catInfo;
    NSDictionary *extendedAttrs;
}

+ (id)attributesAtPath:(id)arg1 traverseLink:(BOOL)arg2;
+ (id)_attributesAtPath:(id)arg1 partialReturn:(BOOL)arg2 filterResourceFork:(BOOL)arg3 error:(id *)arg4;
+ (id)_attributesAtURL:(id)arg1 partialReturn:(BOOL)arg2 filterResourceFork:(BOOL)arg3 error:(id *)arg4;
+ (id)attributesWithStat:(struct stat *)arg1;
- (void)dealloc;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)keyEnumerator;
- (unsigned long long)fileSize;
- (id)fileModificationDate;
- (id)fileType;
- (unsigned long long)filePosixPermissions;
- (id)fileOwnerAccountName;
- (unsigned long long)fileOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned long long)fileGroupOwnerAccountNumber;
- (long long)fileSystemNumber;
- (unsigned long long)fileSystemFileNumber;
- (BOOL)isDirectory;

@end

@interface _NSFileManagerInfo : NSObject
{
    NSFileManager *_fm;
    id _delegate;
    id _handler;
}

- (id)initWithFileManager:(id)arg1;

@end

@interface NSFilesystemItemMoveOperation : NSOperation
{
    id _delegate;
    NSString *_sourcePath;
    NSString *_destinationPath;
    NSError *_error;
}

+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
+ (id)filesystemItemMoveOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
- (void)initWithSourcePath:(id)arg1 destinationPath:(id)arg2;
- (void)dealloc;
- (BOOL)filesystemItemCopyOperation:(id)arg1 shouldProceedAfterError:(id)arg2 copyingItemAtPath:(id)arg3 toPath:(id)arg4;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)error;
- (void)_setError:(id)arg1;
- (void)main;

@end

@interface NSFilesystemItemRemoveOperation : NSOperation
{
    id _delegate;
    NSString *_removePath;
    NSError *_error;
    void *_state;
    BOOL _filterUnderbars;
}

+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
+ (id)filesystemItemRemoveOperationWithPath:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)error;
- (void)_setError:(id)arg1;
- (void)_setFilterUnderbars:(BOOL)arg1;
- (BOOL)_filtersUnderbars;
- (id)initWithPath:(id)arg1;
- (void)main;
- (void)dealloc;

@end

@interface NSFilesystemItemLinkOperation : NSFilesystemItemCopyOperation
{
}

+ (id)filesystemItemLinkOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
- (BOOL)_shouldProceedAfterErrno:(int)arg1 linkingItemAtPath:(const char *)arg2 toPath:(const char *)arg3;
- (BOOL)shouldLinkItemAtPath:(id)arg1 toPath:(id)arg2;
- (BOOL)_shouldLinkItemAtPath:(const char *)arg1 toPath:(const char *)arg2;
- (BOOL)_validatePaths:(id *)arg1;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;

@end

@interface NSFilesystemItemCopyOperation : NSDirectoryTraversalOperation
{
    NSString *_destinationPath;
    NSMutableSet *_skippedPaths;
}

+ (id)_errorWithErrno:(int)arg1 sourcePath:(id)arg2 destinationPath:(id)arg3;
+ (id)filesystemItemCopyOperationWithSourcePath:(id)arg1 destinationPath:(id)arg2;
- (void)initWithSourcePath:(id)arg1 destinationPath:(id)arg2;
- (BOOL)shouldCopyItemAtPath:(id)arg1 toPath:(id)arg2;
- (BOOL)_shouldCopyItemAtPath:(const char *)arg1 toPath:(const char *)arg2;
- (BOOL)shouldProceedAfterError:(id)arg1 copyingItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)_shouldProceedAfterErrno:(int)arg1 copyingItemAtPath:(const char *)arg2 toPath:(const char *)arg3;
- (BOOL)_validatePaths:(id *)arg1;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (void)dealloc;

@end

@interface NSDirectorySubpathsOperation : NSDirectoryTraversalOperation
{
    NSMutableArray *_subpaths;
}

+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
+ (id)directorySubpathsOperationAtPath:(id)arg1;
- (void)handlePathname:(id)arg1;
- (id)subpaths;
- (void)dealloc;

@end

@interface NSDirectoryTraversalOperation : NSOperation
{
    id _delegate;
    NSString *_sourcePath;
    NSError *_error;
    void *_stream;
    int _optionsFlags;
    int _lastDeviceInode;
    BOOL _shouldFilterUnderbars;
    BOOL _stopped;
}

+ (id)_errorWithErrno:(int)arg1 atPath:(id)arg2;
+ (id)directoryTraversalOperationAtPath:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)handlePathname:(id)arg1;
- (BOOL)_shouldFilterEntry:(struct _ftsent *)arg1;
- (id)error;
- (void)_setError:(id)arg1;
- (BOOL)shouldProceedAfterError:(id)arg1;
- (void)_handleFTSEntry:(struct _ftsent *)arg1;
- (BOOL)_validatePaths:(id *)arg1;
- (void)main;
- (void)dealloc;

@end

@interface NSFileURLHandle : NSURLHandle
{
    NSString *_path;
    NSFileHandle *_fh;
    NSDictionary *_properties;
}

+ (void)initialize;
+ (BOOL)canInitWithURL:(id)arg1;
+ (id)cachedHandleForURL:(id)arg1;
- (id)initWithURL:(id)arg1 cached:(BOOL)arg2;
- (void)dealloc;
- (void)finalize;
- (id)loadInForeground;
- (BOOL)writeData:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (id)propertyForKeyIfAvailable:(id)arg1;
- (BOOL)writeProperty:(id)arg1 forKey:(id)arg2;
- (void)beginLoadInBackground;
- (void)endLoadInBackground;
- (void)flushCachedData;
- (void)_backgroundFileLoadCompleted:(id)arg1;

@end

@interface NSFormatter : NSObject <NSCopying, NSCoding>
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (id)editingStringForObjectValue:(id)arg1;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (BOOL)isPartialStringValid:(id)arg1 newEditingString:(id *)arg2 errorDescription:(id *)arg3;
- (BOOL)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSFunctionExpression : NSExpression
{
    NSExpression *_operand;
    SEL _selector;
    NSArray *_arguments;
}

- (void)dealloc;
- (id)initWithSelector:(SEL)arg1 argumentArray:(id)arg2;
- (id)initWithExpressionType:(unsigned long long)arg1 operand:(id)arg2 selector:(SEL)arg3 argumentArray:(id)arg4;
- (id)initWithTarget:(id)arg1 selectorName:(id)arg2 arguments:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)function;
- (id)operand;
- (SEL)selector;
- (id)arguments;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)binaryOperatorForSelector;
- (id)predicateFormat;
- (BOOL)_shouldUseParensWithDescription;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;

@end

@interface NSGarbageCollector : NSObject
{
}

+ (id)defaultCollector;
- (void)disable;
- (void)enable;
- (BOOL)isEnabled;
- (BOOL)isCollecting;
- (void)collectIfNeeded;
- (void)collectExhaustively;
- (void)disableCollectorForPointer:(void *)arg1;
- (void)enableCollectorForPointer:(void *)arg1;
- (struct _NSZone *)zone;

@end

@interface NSGetCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface NSHTTPCookie : NSObject
{
    NSHTTPCookieInternal *_cookiePrivate;
}

+ (id)cookieWithProperties:(id)arg1;
+ (id)cookieWithCFHTTPCookie:(struct OpaqueCFHTTPCookie *)arg1;
+ (id)_cf2nsCookies:(struct __CFArray *)arg1;
+ (struct __CFArray *)_ns2cfCookies:(id)arg1;
+ (id)requestHeaderFieldsWithCookies:(id)arg1;
+ (id)cookiesWithResponseHeaderFields:(id)arg1 forURL:(id)arg2;
- (id)initWithProperties:(id)arg1;
- (id)initWithCFHTTPCookie:(struct OpaqueCFHTTPCookie *)arg1;
- (id)init;
- (void)dealloc;
- (id)properties;
- (unsigned long long)version;
- (id)name;
- (id)value;
- (id)expiresDate;
- (BOOL)isSessionOnly;
- (BOOL)isSecure;
- (BOOL)isHTTPOnly;
- (id)domain;
- (id)path;
- (id)comment;
- (id)commentURL;
- (id)portList;
- (struct OpaqueCFHTTPCookie *)_GetInternalCFHTTPCookie;
- (long long)_compareForHeaderOrder:(id)arg1;
- (id)_key;
- (BOOL)_isExpired;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSHTTPCookieStorage : NSObject
{
    NSHTTPCookieStorageInternal *_internal;
}

+ (id)sharedHTTPCookieStorage;
- (void)dealloc;
- (id)init;
- (id)cookies;
- (void)setCookie:(id)arg1;
- (void)deleteCookie:(id)arg1;
- (id)cookieRequestHeaderFieldsForURL:(id)arg1;
- (void)setCookiesFromResponseHeader:(id)arg1 forURL:(id)arg2 policyBaseURL:(id)arg3;
- (id)cookiesForURL:(id)arg1;
- (void)setCookies:(id)arg1 forURL:(id)arg2 mainDocumentURL:(id)arg3;
- (unsigned long long)cookieAcceptPolicy;
- (void)setCookieAcceptPolicy:(unsigned long long)arg1;
- (id)description;

@end

@interface NSHTTPCookieStorageInternal : NSObject
{
    struct OpaqueCFHTTPCookieStorage *storage;
    struct OpaqueCFHTTPCookieStorage *privateStorage;
    NSRecursiveLock *dataLock;
    BOOL privateBrowsing;
}

- (id)init;
- (id)initWithStorageLocation:(id)arg1;
- (void)dealloc;

@end

@interface NSHTTPURLHandle : NSURLHandle
{
    struct __CFHTTPMessage *request;
    struct __CFReadStream *httpStream;
    NSMutableData *errorPage;
    unsigned char examinedHeaders;
    char _padding[3];
    NSDictionary *proxyConfig;
}

+ (void)initialize;
+ (id)canonicalHTTPURLForURL:(id)arg1;
+ (BOOL)canInitWithURL:(id)arg1;
+ (id)cachedHandleForURL:(id)arg1;
- (struct __CFHTTPMessage *)_constructRequestForURL:(id)arg1 isHead:(BOOL)arg2;
- (id)initWithURL:(id)arg1 cached:(BOOL)arg2;
- (void)dealloc;
- (void)finalize;
- (id)_URL;
- (BOOL)writeData:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (id)propertyForKeyIfAvailable:(id)arg1;
- (BOOL)writeProperty:(id)arg1 forKey:(id)arg2;
- (void)flushCachedData;
- (void)populateCacheFromStream:(struct __CFReadStream *)arg1 data:(id)arg2;
- (void)_configureStreamDetails:(struct __CFReadStream *)arg1;
- (id)loadInForeground;
- (void)beginLoadInBackground;
- (void)endLoadInBackground;
- (void)reportStreamError;
- (long long)expectedResourceDataSize;
- (void)_processHeaders:(struct __CFHTTPMessage *)arg1;
- (void)performStreamRead;

@end

@interface NSClassicHashTable : NSHashTable
{
    struct {
        void *hash;
        void *isEqual;
        void *retain;
        void *release;
        void *describe;
    } _callBacks;
    struct __CFBasicHash *_ht;
}

- (id)init;
- (void)dealloc;
- (void)removeAllItems;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copy;
- (void *)getItem:(const void *)arg1;
- (void)insertItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)removeItem:(const void *)arg1;
- (unsigned long long)count;
- (id)description;
- (id)allObjects;
- (void)getKeys:(const void **)arg1 count:(unsigned long long *)arg2;

@end

@interface NSConcreteHashTable : NSHashTable
{
    struct NSSlice slice;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long options;
    unsigned long long mutations;
}

- (void)_initBlock;
- (id)init;
- (id)copy;
- (id)initWithOptions:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)initWithPointerFunctions:(id)arg1 capacity:(unsigned long long)arg2;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)pointerFunctions;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)count;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)raiseCountUnderflowException;
- (unsigned long long)rehashAround:(unsigned long long)arg1;
- (void)hashGrow;
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2;
- (void)rehash;
- (void *)getItem:(const void *)arg1;
- (void)insertItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)removeItem:(const void *)arg1;
- (void)removeAllItems;
- (id)allObjects;
- (void)getKeys:(void **)arg1 count:(unsigned long long *)arg2;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (id)objectEnumerator;

@end

@interface NSHashTable : NSObject <NSCopying, NSCoding, NSFastEnumeration>
{
}

+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)hashTableWithWeakObjects;
+ (id)hashTableWithOptions:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithOptions:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)init;
- (id)description;
- (id)objectEnumerator;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)count;
- (id)allObjects;
- (unsigned long long)weakCount;
- (void *)getItem:(const void *)arg1;
- (void)addObject:(id)arg1;
- (void)insertKnownAbsentItem:(const void *)arg1;
- (void)removeItem:(const void *)arg1;
- (id)copy;
- (void)removeAllItems;
- (void)getKeys:(void **)arg1 count:(unsigned long long *)arg2;
- (id)initWithPointerFunctions:(id)arg1 capacity:(unsigned long long)arg2;
- (id)pointerFunctions;
- (id)member:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (id)anyObject;
- (BOOL)containsObject:(id)arg1;
- (BOOL)intersectsHashTable:(id)arg1;
- (BOOL)isEqualToHashTable:(id)arg1;
- (BOOL)isSubsetOfHashTable:(id)arg1;
- (void)intersectHashTable:(id)arg1;
- (void)unionHashTable:(id)arg1;
- (void)minusHashTable:(id)arg1;
- (id)mutableSet;
- (id)setRepresentation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

@end

@interface NSHost : NSObject
{
    NSArray *names;
    NSArray *addresses;
    void *reserved;
}

+ (id)currentHost;
+ (void)_fixNSHostLeak;
+ (id)hostWithName:(id)arg1;
+ (id)hostWithAddress:(id)arg1;
+ (BOOL)isHostCacheEnabled;
+ (void)setHostCacheEnabled:(BOOL)arg1;
+ (void)flushHostCache;
- (BOOL)isEqualToHost:(id)arg1;
- (id)name;
- (id)names;
- (id)localizedName;
- (id)address;
- (id)addresses;
- (id)description;
- (void)dealloc;

@end

@interface NSInPredicateOperator : NSPredicateOperator
{
    unsigned long long _flags;
    NSSubstringPredicateOperator *_stringVersion;
}

- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (id)stringVersion;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)symbol;
- (unsigned long long)flags;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (void)_setOptions:(unsigned long long)arg1;
- (unsigned long long)options;

@end

@interface NSIndexPath : NSObject <NSCopying, NSCoding>
{
    unsigned long long *_indexes;
    unsigned long long _hash;
    unsigned long long _length;
    void *_reserved;
}

+ (id)_fastUniquer;
+ (id)_uniquer;
+ (id)indexPathWithIndex:(unsigned long long)arg1;
+ (id)indexPathWithIndexes:(unsigned long long *)arg1 length:(unsigned long long)arg2;
- (id)init;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)initWithIndexes:(unsigned long long *)arg1 length:(unsigned long long)arg2;
- (void)finalize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)indexPathByRemovingLastIndex;
- (id)indexPathByAddingIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (unsigned long long)indexAtPosition:(unsigned long long)arg1;
- (void)getIndexes:(unsigned long long *)arg1;
- (id)description;
- (long long)compare:(id)arg1;

@end

@interface _NSIndexPathUniqueTree : NSObject
{
    _NSIndexPathUniqueTreeNode *_root;
    NSLock *_lock;
}

- (void)awake;
- (void)dealloc;
- (void)lock;
- (void)unlock;
- (id)uniqueIndexPath:(id)arg1 withIndexes:(unsigned long long *)arg2 count:(unsigned long long)arg3;
- (void)_willDeallocIndexPath:(void *)arg1 withIndexes:(unsigned long long *)arg2 length:(unsigned long long)arg3;

@end

@interface _NSIndexPathUniqueTreeNode : NSObject
{
    unsigned long long _index;
    id _indexPath;
    id _childNodes;
    id _nextSibling;
}

- (void)_clear;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (id)nextSiblingWithIndex:(unsigned long long)arg1;

@end

@interface _NSIndexSetEnumerator : NSEnumerator
{
    NSIndexSet *_indexSet;
    unsigned long long _index;
}

- (id)initWithIndexSet:(id)arg1;
- (void)dealloc;
- (id)nextObject;

@end

@interface NSMutableIndexSet : NSIndexSet
{
    void *_reserved;
}

- (Class)classForCoder;
- (void)_ensureRangeCapacity:(unsigned long long)arg1;
- (void)_addRangeToArray:(struct _NSRange)arg1;
- (void)_insertRange:(struct _NSRange)arg1 inArrayAtIndex:(unsigned long long)arg2;
- (void)_removeRangeInArrayAtIndex:(unsigned long long)arg1;
- (void)_replaceRangeInArrayAtIndex:(unsigned long long)arg1 withRange:(struct _NSRange)arg2;
- (void)addIndexes:(id)arg1;
- (void)addIndexesFromIndexSet:(id)arg1;
- (void)addIndexes:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)removeIndexes:(id)arg1;
- (void)removeIndexesFromIndexSet:(id)arg1;
- (void)addIndexesInRange:(struct _NSRange)arg1;
- (void)addIndex:(unsigned long long)arg1;
- (void)removeIndexesInRange:(struct _NSRange)arg1;
- (void)removeIndex:(unsigned long long)arg1;
- (void)removeAllIndexes;
- (void)_incrementBy:(unsigned long long)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)_removeAndDecrementBy:(unsigned long long)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)shiftIndexesStartingAtIndex:(unsigned long long)arg1 by:(long long)arg2;

@end

@interface NSIndexSet : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    struct {
        unsigned int _isEmpty:1;
        unsigned int _hasSingleRange:1;
        unsigned int _cacheValid:1;
        unsigned int _reservedArrayBinderController:29;
    } _indexSetFlags;
    union {
        struct {
            struct _NSRange _range;
        } _singleRange;
        struct {
            void *_data;
            void *_reserved;
        } _multipleRanges;
    } _internal;
}

+ (id)indexSet;
+ (id)indexSetWithIndex:(unsigned long long)arg1;
+ (id)indexSetWithIndexesInRange:(struct _NSRange)arg1;
+ (id)indexSetWithIndexes:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)_init;
- (id)init;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)initWithIndexesInRange:(struct _NSRange)arg1;
- (void)_setContentToContentFromIndexSet:(id)arg1;
- (id)initWithIndexSet:(id)arg1;
- (id)initWithIndexes:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (unsigned long long)_indexOfRangeContainingIndex:(unsigned long long)arg1;
- (unsigned long long)_indexOfRangeBeforeOrContainingIndex:(unsigned long long)arg1;
- (unsigned long long)_indexOfRangeAfterOrContainingIndex:(unsigned long long)arg1;
- (unsigned long long)hash;
- (BOOL)isEqualToIndexSet:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (unsigned long long)firstIndex;
- (unsigned long long)lastIndex;
- (unsigned long long)_indexClosestToIndex:(unsigned long long)arg1 equalAllowed:(BOOL)arg2 following:(BOOL)arg3;
- (unsigned long long)indexGreaterThanIndex:(unsigned long long)arg1;
- (unsigned long long)indexLessThanIndex:(unsigned long long)arg1;
- (unsigned long long)indexGreaterThanOrEqualToIndex:(unsigned long long)arg1;
- (unsigned long long)indexLessThanOrEqualToIndex:(unsigned long long)arg1;
- (unsigned long long)getIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 inIndexRange:(struct _NSRange *)arg3;
- (unsigned long long)__getContainmentVector:(out char *)arg1 inRange:(struct _NSRange)arg2;
- (unsigned long long)countOfIndexesInRange:(struct _NSRange)arg1;
- (unsigned long long)rangeCount;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (BOOL)containsIndex:(unsigned long long)arg1;
- (BOOL)containsIndexesInRange:(struct _NSRange)arg1;
- (BOOL)containsIndexes:(id)arg1;
- (BOOL)intersectsIndexesInRange:(struct _NSRange)arg1;
- (id)_numberEnumerator;
- (id)description;
- (void)enumerateIndexesUsingBlock:(id)arg1;
- (void)enumerateIndexesWithOptions:(unsigned long long)arg1 usingBlock:(id)arg2;
- (void)enumerateIndexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(id)arg3;
- (unsigned long long)indexPassingTest:(id)arg1;
- (unsigned long long)indexWithOptions:(unsigned long long)arg1 passingTest:(id)arg2;
- (unsigned long long)indexInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(id)arg3;
- (id)indexesPassingTest:(id)arg1;
- (id)indexesWithOptions:(unsigned long long)arg1 passingTest:(id)arg2;
- (id)indexesInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 passingTest:(id)arg3;

@end

@interface NSIndexSpecifier : NSScriptObjectSpecifier
{
    long long _index;
}

+ (BOOL)_fromContainerInfo:(const CDStruct_4cb9d06e *)arg1 andKeyCode:(unsigned int)arg2 getAdjustedContainerInfo:(CDStruct_4cb9d06e *)arg3 andKey:(id *)arg4;
+ (id)_containerAtIndex:(unsigned long long *)arg1 traversingBackward:(BOOL)arg2 inContainerTree:(id)arg3 ofDepth:(unsigned long long)arg4;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3 index:(long long)arg4;
- (id)_initFromRecord:(id)arg1;
- (void)setIndex:(long long)arg1;
- (long long)index;
- (id)keyClassDescription;
- (id)objectsByEvaluatingWithContainers:(id)arg1;
- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (BOOL)_specifiesSingleIndexedObjectPerContainer;
- (BOOL)_specifiesMultipleIndexedObjectsPerContainer;
- (BOOL)_specifiesCollection;
- (id)_moreCompleteVariantOfTypeDescription:(id)arg1;
- (id)_typeDescription;
- (unsigned long long)_specifiedObjectTreeDepth;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSKeyPathExpression : NSFunctionExpression
{
}

- (void)dealloc;
- (id)initWithKeyPath:(id)arg1;
- (id)initWithOperand:(id)arg1 andKeyPath:(id)arg2;
- (id)pathExpression;
- (id)predicateFormat;
- (id)keyPath;

@end

@interface NSKeyPathSpecifierExpression : NSExpression
{
    NSString *_value;
}

- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (id)constantValue;
- (id)keyPath;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface NSKeyValueSlowSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueSlowGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueNotifyingMutableCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueProxyGetter *_mutableCollectionGetter;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 mutableCollectionGetter:(id)arg3 proxyClass:(Class)arg4;
- (void)dealloc;
- (id)mutableCollectionGetter;

@end

@interface NSKeyValueIvarMutableCollectionGetter : NSKeyValueProxyGetter
{
    struct objc_ivar *_ivar;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3 ivar:(struct objc_ivar *)arg4 proxyClass:(Class)arg5;
- (struct objc_ivar *)ivar;

@end

@interface NSKeyValueSlowMutableCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueGetter *_baseGetter;
    NSKeyValueSetter *_baseSetter;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 baseGetter:(id)arg3 baseSetter:(id)arg4 containerIsa:(Class)arg5 proxyClass:(Class)arg6;
- (void)dealloc;
- (id)baseGetter;
- (id)baseSetter;
- (BOOL)treatNilValuesLikeEmptyCollections;

@end

@interface NSKeyValueFastMutableCollection2Getter : NSKeyValueProxyGetter
{
    NSKeyValueGetter *_baseGetter;
    NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 baseGetter:(id)arg3 mutatingMethods:(id)arg4 proxyClass:(Class)arg5;
- (void)dealloc;
- (id)baseGetter;
- (id)mutatingMethods;

@end

@interface NSKeyValueFastMutableCollection1Getter : NSKeyValueProxyGetter
{
    NSKeyValueNonmutatingCollectionMethodSet *_nonmutatingMethods;
    NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 nonmutatingMethods:(id)arg3 mutatingMethods:(id)arg4 proxyClass:(Class)arg5;
- (void)dealloc;
- (id)nonmutatingMethods;
- (id)mutatingMethods;

@end

@interface NSKeyValueUndefinedSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueIvarSetter : NSKeyValueSetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3 ivar:(struct objc_ivar *)arg4;
- (struct objc_ivar *)ivar;

@end

@interface NSKeyValueMethodSetter : NSKeyValueSetter
{
    struct objc_method *_method;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 method:(struct objc_method *)arg3;
- (struct objc_method *)method;

@end

@interface NSKeyValueUndefinedGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 containerIsa:(Class)arg3;

@end

@interface NSKeyValueIvarGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 ivar:(struct objc_ivar *)arg3;

@end

@interface NSKeyValueCollectionGetter : NSKeyValueProxyGetter
{
    NSKeyValueNonmutatingCollectionMethodSet *_methods;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 methods:(id)arg3 proxyClass:(Class)arg4;
- (void)dealloc;
- (id)methods;

@end

@interface NSKeyValueMethodGetter : NSKeyValueGetter
{
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 method:(struct objc_method *)arg3;

@end

@interface NSKeyValueSetter : NSKeyValueAccessor
{
}

@end

@interface NSKeyValueProxyGetter : NSKeyValueGetter
{
    Class _proxyClass;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 proxyClass:(Class)arg3;
- (Class)proxyClass;

@end

@interface NSKeyValueGetter : NSKeyValueAccessor
{
}

@end

@interface NSKeyValueAccessor : NSObject
{
    id _containerClassID;
    NSString *_key;
    void *_implementation;
    SEL _selector;
    unsigned long long _extraArgumentCount;
    void *_extraArgument1;
    void *_extraArgument2;
    void *_extraArgument3;
}

- (id)initWithContainerClassID:(id)arg1 key:(id)arg2 implementation:(void *)arg3 selector:(SEL)arg4 extraArguments:(void *[3])arg5 count:(unsigned long long)arg6;
- (void)dealloc;
- (id)containerClassID;
- (SEL)selector;
- (id)key;
- (unsigned long long)extraArgumentCount;
- (void *)extraArgument1;
- (void *)extraArgument2;

@end

@interface NSKeyValueMutatingSetMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *addObject;
    struct objc_method *removeObject;
    struct objc_method *intersectSet;
    struct objc_method *minusSet;
    struct objc_method *unionSet;
    struct objc_method *setSet;
}

@end

@interface NSKeyValueNonmutatingSetMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *enumerator;
    struct objc_method *member;
}

@end

@interface NSKeyValueMutatingArrayMethodSet : NSKeyValueMutatingCollectionMethodSet
{
    struct objc_method *insertObjectAtIndex;
    struct objc_method *removeObjectAtIndex;
    struct objc_method *replaceObjectAtIndex;
    struct objc_method *insertObjectsAtIndexes;
    struct objc_method *removeObjectsAtIndexes;
    struct objc_method *replaceObjectsAtIndexes;
}

@end

@interface NSKeyValueNonmutatingArrayMethodSet : NSKeyValueNonmutatingCollectionMethodSet
{
    struct objc_method *count;
    struct objc_method *objectAtIndex;
    struct objc_method *getObjectsRange;
    struct objc_method *objectsAtIndexes;
}

@end

@interface NSKeyValueMutatingCollectionMethodSet : NSObject
{
}

@end

@interface NSKeyValueNonmutatingCollectionMethodSet : NSObject
{
}

@end

@interface NSKeyValueArray : NSArray <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingArrayMethodSet *_methods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;
- (void)_proxyNonGCFinalize;
- (void)dealloc;
- (unsigned long long)count;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;

@end

@interface NSKeyValueContainerClass : NSObject
{
    Class _originalClass;
    void *_cachedObservationInfoImplementation;
    void *_cachedSetObservationInfoImplementation;
    BOOL _cachedSetObservationInfoTakesAnObject;
    struct {
        Class _field1;
        Class _field2;
        struct __CFSet *_field3;
        struct __CFDictionary *_field4;
    } *_notifyingInfo;
}

- (id)initWithOriginalClass:(Class)arg1;
- (id)description;

@end

@interface NSKeyValueNotifyingMutableArray : NSKeyValueMutableArray
{
    NSMutableArray *_mutableArray;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (unsigned long long)count;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;

@end

@interface NSKeyValueIvarMutableArray : NSKeyValueMutableArray
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (unsigned long long)count;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (id)_nonNilMutableArrayValueWithSelector:(SEL)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;

@end

@interface NSKeyValueSlowMutableArray : NSKeyValueMutableArray
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    BOOL _treatNilValuesLikeEmptyArrays;
    char _padding[3];
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (id)_nonNilArrayValueWithSelector:(SEL)arg1;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (id)_createNonNilMutableArrayValueWithSelector:(SEL)arg1;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;

@end

@interface NSKeyValueFastMutableArray2 : NSKeyValueFastMutableArray
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (id)_nonNilArrayValueWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;

@end

@interface NSKeyValueFastMutableArray1 : NSKeyValueFastMutableArray
{
    NSKeyValueNonmutatingArrayMethodSet *_nonmutatingMethods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (unsigned long long)count;
- (void)getObjects:(id *)arg1 range:(struct _NSRange)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)objectsAtIndexes:(id)arg1;

@end

@interface NSKeyValueFastMutableArray : NSKeyValueMutableArray
{
    NSKeyValueMutatingArrayMethodSet *_mutatingMethods;
}

- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;

@end

@interface NSKeyValueMutableArray : NSMutableArray <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (void)dealloc;
- (void)setArray:(id)arg1;

@end

@interface NSKeyValueNotifyingMutableSet : NSKeyValueMutableSet
{
    NSMutableSet *_mutableSet;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;
- (void)addObject:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;

@end

@interface NSKeyValueIvarMutableSet : NSKeyValueMutableSet
{
    struct objc_ivar *_ivar;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;
- (void)addObject:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;

@end

@interface NSKeyValueSlowMutableSet : NSKeyValueMutableSet
{
    NSKeyValueGetter *_valueGetter;
    NSKeyValueSetter *_valueSetter;
    BOOL _treatNilValuesLikeEmptySets;
    char _padding[3];
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (void)_raiseNilValueExceptionWithSelector:(SEL)arg1;
- (id)_setValueWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;
- (id)_createMutableSetValueWithSelector:(SEL)arg1;
- (void)addObject:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;

@end

@interface NSKeyValueFastMutableSet2 : NSKeyValueFastMutableSet
{
    NSKeyValueGetter *_valueGetter;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (id)_nonNilSetValueWithSelector:(SEL)arg1;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;

@end

@interface NSKeyValueFastMutableSet1 : NSKeyValueFastMutableSet
{
    NSKeyValueNonmutatingSetMethodSet *_nonmutatingMethods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;

@end

@interface NSKeyValueFastMutableSet : NSKeyValueMutableSet
{
    NSKeyValueMutatingSetMethodSet *_mutatingMethods;
}

- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (void)addObject:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;

@end

@interface NSKeyValueMutableSet : NSMutableSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;
- (void)dealloc;

@end

@interface NSKeyValueNilSetEnumerator : NSEnumerator
{
}

- (id)nextObject;

@end

@interface NSKeyValueObservationInfo : NSObject
{
    long long _retainCountMinusOne;
    NSArray *_observances;
    unsigned long long _cachedHash;
    BOOL _cachedIsShareable;
    NSHashTable *_observables;
}

- (id)_initWithObservances:(id *)arg1 count:(unsigned long long)arg2;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface NSKeyValueObservance : NSObject
{
    long long _retainCountMinusOne;
    NSObject *_observer;
    NSKeyValueProperty *_property;
    unsigned long long _options;
    void *_context;
    NSObject *_originalObservable;
    unsigned long long _cachedUnrotatedHashComponent;
    BOOL _cachedIsShareable;
    NSPointerArray *_observationInfos;
    struct auto_weak_callback_block _observerWentAwayCallback;
}

- (id)_initWithObserver:(id)arg1 property:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4 originalObservable:(id)arg5;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@end

@interface NSKeyValueShareableObservanceKey : NSKeyValueObservance
{
}

@end

@interface NSKeyValueShareableObservationInfoKey : NSObject
{
    BOOL _addingNotRemoving;
    NSKeyValueObservationInfo *_baseObservationInfo;
    NSObject *_additionObserver;
    NSKeyValueProperty *_additionProperty;
    unsigned long long _additionOptions;
    void *_additionContext;
    NSObject *_additionOriginalObservable;
    NSKeyValueObservance *_removalObservance;
    unsigned long long _removalObservanceIndex;
}

@end

@interface NSKeyValueComputedProperty : NSKeyValueProperty
{
    NSString *_operationName;
    NSString *_operationArgumentKeyPath;
    NSKeyValueUnnestedProperty *_operationArgumentProperty;
}

- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;
- (void)dealloc;
- (id)description;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (void)_addDependentValueKey:(id)arg1;
- (Class)_isaForAutonotifying;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;

@end

@interface NSKeyValueNestedProperty : NSKeyValueProperty
{
    NSString *_relationshipKey;
    NSString *_keyPathFromRelatedObject;
    NSKeyValueUnnestedProperty *_relationshipProperty;
    NSString *_keyPathWithoutOperatorComponents;
    BOOL _isAllowedToResultInForwarding;
    id _dependentValueKeyOrKeys;
    BOOL _dependentValueKeyOrKeysIsASet;
}

- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 firstDotIndex:(unsigned long long)arg3 propertiesBeingInitialized:(struct __CFSet *)arg4;
- (void)dealloc;
- (id)description;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (void)_addDependentValueKey:(id)arg1;
- (Class)_isaForAutonotifying;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (id)dependentValueKeyOrKeysIsASet:(char *)arg1;
- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;

@end

@interface NSKeyValueUnnestedProperty : NSKeyValueProperty
{
    NSArray *_affectingProperties;
    BOOL _cachedIsaForAutonotifyingIsValid;
    Class _cachedIsaForAutonotifying;
}

- (id)_initWithContainerClass:(id)arg1 key:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;
- (void)dealloc;
- (id)description;
- (void)_givenPropertiesBeingInitialized:(struct __CFSet *)arg1 getAffectingProperties:(id)arg2;
- (void)_addDependentValueKey:(id)arg1;
- (Class)_isaForAutonotifying;
- (Class)isaForAutonotifying;
- (id)_keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (id)keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (id)_keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (id)keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;

@end

@interface NSKeyValueProperty : NSObject
{
    NSKeyValueContainerClass *_containerClass;
    NSString *_keyPath;
}

- (id)_initWithContainerClass:(id)arg1 keyPath:(id)arg2 propertiesBeingInitialized:(struct __CFSet *)arg3;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)keyPath;
- (Class)isaForAutonotifying;
- (id)keyPathIfAffectedByValueForKey:(id)arg1 exactMatch:(char *)arg2;
- (id)keyPathIfAffectedByValueForMemberOfKeys:(id)arg1;
- (void)object:(id)arg1 didAddObservance:(id)arg2 recurse:(BOOL)arg3;
- (void)object:(id)arg1 didRemoveObservance:(id)arg2 recurse:(BOOL)arg3;
- (BOOL)object:(id)arg1 withObservance:(id)arg2 willChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672 *)arg5;
- (void)object:(id)arg1 withObservance:(id)arg2 didChangeValueForKeyOrKeys:(id)arg3 recurse:(BOOL)arg4 forwardingValues:(CDStruct_a70f6672)arg5;
- (id)dependentValueKeyOrKeysIsASet:(char *)arg1;
- (id)restOfKeyPathIfContainedByValueForKeyPath:(id)arg1;
- (BOOL)matchesWithoutOperatorComponentsKeyPath:(id)arg1;

@end

@interface NSKeyValueProxyShareKey : NSObject <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (CDStruct_a70f6672)_proxyLocator;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (void)_proxyNonGCFinalize;

@end

@interface NSKeyValueSet : NSSet <NSKeyValueProxyCaching>
{
    NSObject *_container;
    NSString *_key;
    NSKeyValueNonmutatingSetMethodSet *_methods;
}

+ (CDStruct_7c9a8e9f *)_proxyNonGCPoolPointer;
+ (id)_proxyShare;
- (id)_proxyInitWithContainer:(id)arg1 getter:(id)arg2;
- (CDStruct_a70f6672)_proxyLocator;
- (void)_proxyNonGCFinalize;
- (void)dealloc;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;

@end

@interface _NSKeyedCoderOldStyleArray : NSObject
{
    void *_addr;
    unsigned long long _count;
    unsigned long long _size;
    BOOL _type;
    BOOL _decoded;
    char _padding[2];
}

- (id)initWithObjCType:(BOOL)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)dealloc;
- (void)finalize;
- (void)fillObjCType:(BOOL)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSKeyedUnarchiver : NSCoder
{
    id _delegate;
    unsigned int _flags;
    id _objRefMap;
    id _replacementMap;
    id _nameClassMap;
    id _tmpRefObjMap;
    id _refObjMap;
    int _genericKey;
    id _data;
    void *_offsetData;
    id _containers;
    id _objects;
    char *_bytes;
    unsigned long long _len;
    id _white;
    void *_reserved0;
}

+ (void)initialize;
+ (id)unarchiveObjectWithFile:(id)arg1;
+ (id)unarchiveObjectWithData:(id)arg1;
+ (void)setClass:(Class)arg1 forClassName:(id)arg2;
+ (Class)classForClassName:(id)arg1;
- (id)_blobForCurrentObject;
- (id)init;
- (id)_initWithStream:(struct __CFReadStream *)arg1 data:(id)arg2 topDict:(struct __CFDictionary *)arg3;
- (id)initForReadingWithData:(id)arg1;
- (id)initWithStream:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (BOOL)allowsKeyedCoding;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setClass:(Class)arg1 forClassName:(id)arg2;
- (Class)classForClassName:(id)arg1;
- (id)allowedClasses;
- (void)setAllowedClasses:(id)arg1;
- (void)finishDecoding;
- (void)_temporaryMapReplaceObject:(id)arg1 withObject:(id)arg2;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)_replaceObject:(id)arg1 withObject:(id)arg2;
- (BOOL)containsValueForKey:(id)arg1;
- (id)decodeObjectForKey:(id)arg1;
- (id)_decodeArrayOfObjectsForKey:(id)arg1;
- (BOOL)decodeBoolForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (int)decodeInt32ForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (id)_decodePropertyListForKey:(id)arg1;
- (id)decodeObject;
- (id)decodePropertyList;
- (id)decodeDataObject;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (long long)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;

@end

@interface NSKeyedArchiver : NSCoder
{
    void *_stream;
    unsigned long long _flags;
    id _delegate;
    id _containers;
    id _objects;
    id _objRefMap;
    id _replacementMap;
    id _classNameMap;
    id _conditionals;
    id _classes;
    unsigned long long _genericKey;
    void *_cache;
    unsigned long long _cacheSize;
    unsigned long long _estimatedCount;
    void *_reserved2;
    id _visited;
    void *_reserved0;
}

+ (void)initialize;
+ (id)archivedDataWithRootObject:(id)arg1;
+ (BOOL)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (void)setClassName:(id)arg1 forClass:(Class)arg2;
+ (id)classNameForClass:(Class)arg1;
- (void)_setBlobForCurrentObject:(id)arg1;
- (id)_blobForCurrentObject;
- (id)init;
- (id)_initWithOutput:(id)arg1;
- (id)initForWritingWithMutableData:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (BOOL)allowsKeyedCoding;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setOutputFormat:(unsigned long long)arg1;
- (unsigned long long)outputFormat;
- (void)setClassName:(id)arg1 forClass:(Class)arg2;
- (id)classNameForClass:(Class)arg1;
- (void)finishEncoding;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)_encodeArrayOfObjects:(id)arg1 forKey:(id)arg2;
- (void)encodeBool:(BOOL)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)_encodePropertyList:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodePropertyList:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (long long)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;

@end

@interface NSLanguageContext : NSMutableDictionary
{
    NSMutableDictionary *_dict;
    void *_reserved;
}

+ (id)defaultLanguageContext;
+ (id)systemLanguageContext;
+ (id)languageContextWithName:(id)arg1;
+ (id)availableLanguageContextNames;
+ (id)allocWithZone:(struct _NSZone *)arg1;

@end

@interface NSLikePredicateOperator : NSMatchingPredicateOperator
{
}

- (id)symbol;
- (SEL)selector;
- (BOOL)_shouldEscapeForLike;

@end

@interface NSAutoLocale : NSLocale
{
    NSLocale *loc;
}

- (void)_update:(id)arg1;
- (id)init;
- (id)initWithLocaleIdentifier:(id)arg1;
- (void)dealloc;
- (id)objectForKey:(id)arg1;
- (id)displayNameForKey:(id)arg1 value:(id)arg2;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;

@end

@interface NSCFLocale : NSLocale
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)objectForKey:(id)arg1;
- (id)displayNameForKey:(id)arg1 value:(id)arg2;
- (id)initWithLocaleIdentifier:(id)arg1;

@end

@interface NSMultiReadUniWriteLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)lockForReading;
- (BOOL)tryLockForReading;
- (BOOL)lockForReadingBeforeDate:(id)arg1;
- (void)lockForWriting;
- (BOOL)tryLockForWriting;
- (BOOL)lockForWritingBeforeDate:(id)arg1;
- (void)lock;
- (void)unlock;
- (id)description;
- (void)setName:(id)arg1;
- (id)name;

@end

@interface NSRecursiveLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)lock;
- (BOOL)lockBeforeDate:(id)arg1;
- (BOOL)tryLock;
- (void)unlock;
- (id)description;
- (void)setName:(id)arg1;
- (id)name;
- (BOOL)isLocking;

@end

@interface NSConditionLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithCondition:(long long)arg1;
- (void)dealloc;
- (void)finalize;
- (long long)condition;
- (void)lock;
- (BOOL)lockBeforeDate:(id)arg1;
- (void)lockWhenCondition:(long long)arg1;
- (BOOL)lockWhenCondition:(long long)arg1 beforeDate:(id)arg2;
- (BOOL)tryLock;
- (BOOL)tryLockWhenCondition:(long long)arg1;
- (void)unlock;
- (void)unlockWithCondition:(long long)arg1;
- (id)description;
- (void)setName:(id)arg1;
- (id)name;

@end

@interface NSLock : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)lock;
- (BOOL)lockBeforeDate:(id)arg1;
- (BOOL)tryLock;
- (void)unlock;
- (id)description;
- (void)setName:(id)arg1;
- (id)name;

@end

@interface NSCondition : NSObject <NSLocking>
{
    void *_priv;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)lock;
- (void)unlock;
- (void)wait;
- (BOOL)waitUntilDate:(id)arg1;
- (void)signal;
- (void)broadcast;
- (id)description;
- (void)setName:(id)arg1;
- (id)name;

@end

@interface NSLogicalTest : NSScriptWhoseTest
{
    int _operator;
    id _subTests;
}

- (id)init;
- (id)initAndTestWithTests:(id)arg1;
- (id)initOrTestWithTests:(id)arg1;
- (id)initNotTestWithTest:(id)arg1;
- (void)dealloc;
- (BOOL)isTrue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSClassicMapTable : NSMapTable
{
    struct {
        void *hash;
        void *isEqual;
        void *retain;
        void *release;
        void *describe;
        void *notAKeyMarker;
    } _keyCallBacks;
    struct {
        void *retain;
        void *release;
        void *describe;
    } _valueCallBacks;
    struct __CFBasicHash *_ht;
}

- (id)init;
- (void)dealloc;
- (void)removeAllItems;
- (BOOL)isEqual:(id)arg1;
- (id)copy;
- (BOOL)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)removeObjectForKey:(id)arg1;
- (unsigned long long)count;
- (id)description;
- (id)allKeys;
- (id)allValues;
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;

@end

@interface NSConcreteMapTableValueEnumerator : NSEnumerator
{
    NSConcreteMapTable *mapTable;
    unsigned long long counter;
}

+ (id)enumeratorWithMapTable:(id)arg1;
- (id)nextObject;
- (void)dealloc;

@end

@interface NSConcreteMapTable : NSMapTable
{
    struct NSSlice keys;
    struct NSSlice values;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long keyOptions;
    unsigned long long valueOptions;
    unsigned long long mutations;
    int growLock;
    _Bool shouldRehash;
}

- (id)init;
- (void)raiseCountUnderflowException;
- (unsigned long long)realCount;
- (void)checkCount:(const char *)arg1;
- (void)zeroPairedEntries;
- (void)_initBlock;
- (void)_setBackingStore;
- (id)copy;
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)keyPointerFunctions;
- (id)valuePointerFunctions;
- (unsigned long long)count;
- (BOOL)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;
- (id)dump;
- (void)grow;
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(BOOL)arg4;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (BOOL)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;
- (unsigned long long)rehashAround:(unsigned long long)arg1;
- (void)rehash;
- (void)removeObjectForKey:(id)arg1;
- (void)removeAllItems;
- (void)dealloc;
- (void)finalize;
- (id)description;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyEnumerator;
- (id)objectEnumerator;
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)allKeys;
- (id)allValues;

@end

@interface NSMapTable : NSObject <NSCopying, NSCoding, NSFastEnumeration>
{
}

+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)mapTableWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2;
+ (id)mapTableWithStrongToStrongObjects;
+ (id)mapTableWithWeakToStrongObjects;
+ (id)mapTableWithStrongToWeakObjects;
+ (id)mapTableWithWeakToWeakObjects;
- (id)initWithCoder:(id)arg1;
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;
- (id)init;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)count;
- (id)keyEnumerator;
- (id)objectEnumerator;
- (id)copy;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyPointerFunctions;
- (id)valuePointerFunctions;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setItem:(const void *)arg1 forKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;
- (id)allKeys;
- (id)allValues;
- (void)removeAllItems;
- (id)enumerator;
- (BOOL)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;
- (void)removeAllObjects;
- (id)mutableDictionary;
- (id)dictionaryRepresentation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

@end

@interface NSMatchingPredicateOperator : NSStringPredicateOperator
{
    int _contextLock;
    CDStruct_ed1313e2 *_regexContext;
}

- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3;
- (void)_clearContext;
- (void)dealloc;
- (void)finalize;
- (id)symbol;
- (SEL)selector;
- (BOOL)_shouldEscapeForLike;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;

@end

@interface _NSMetadataQueryResultGroupArray : NSArray
{
    id _group;
}

- (id)_init:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;

@end

@interface NSMetadataQueryResultGroup : NSObject
{
    id _private[9];
    unsigned long long _private2[1];
    void *_reserved;
}

- (id)_init:(id)arg1:(id)arg2:(unsigned long long)arg3:(id)arg4;
- (void)dealloc;
- (void)_addResult:(unsigned long long)arg1;
- (id)attribute;
- (id)value;
- (id)subgroups;
- (unsigned long long)resultCount;
- (id)resultAtIndex:(unsigned long long)arg1;
- (void)_zapResultArray;
- (id)results;

@end

@interface NSMetadataQueryAttributeValueTuple : NSObject
{
    id _attr;
    id _value;
    unsigned long long _count;
    void *_reserved;
}

- (id)_init:(id)arg1:(id)arg2:(id)arg3:(unsigned long long)arg4;
- (void)dealloc;
- (id)attribute;
- (id)value;
- (unsigned long long)count;

@end

@interface NSMetadataItem : NSObject
{
    id _item;
    void *_reserved;
}

- (id)_init:(struct __MDItem *)arg1;
- (void)dealloc;
- (void)_setQuery:(id)arg1;
- (id)valueForKey:(id)arg1;
- (id)valueForAttribute:(id)arg1;
- (id)valuesForAttributes:(id)arg1;
- (id)attributes;

@end

@interface _NSMetadataItemPrivateIvars : NSObject
{
    NSMetadataQuery *query;
}

@end

@interface _NSMetadataQuerySortingPseudoItem : NSObject
{
    id _attr;
}

- (id)valueForKey:(id)arg1;

@end

@interface _NSMetadataQueryResultArray : NSArray
{
    id _query;
}

- (id)_init:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;

@end

@interface NSMetadataQuery : NSObject
{
    unsigned long long _flags;
    double _interval;
    id _private[11];
    void *_reserved;
}

+ (void)initialize;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)predicate;
- (void)setPredicate:(id)arg1;
- (id)sortDescriptors;
- (void)setSortDescriptors:(id)arg1;
- (id)valueListAttributes;
- (void)setValueListAttributes:(id)arg1;
- (id)groupingAttributes;
- (void)setGroupingAttributes:(id)arg1;
- (id)_sortingAttributes;
- (id)_allAttributes;
- (double)notificationBatchingInterval;
- (void)setNotificationBatchingInterval:(double)arg1;
- (id)searchScopes;
- (void)setSearchScopes:(id)arg1;
- (id)searchItemURLs;
- (void)setSearchItemURLs:(id)arg1;
- (void)_setBatchingParams;
- (void)_noteNote1:(id)arg1;
- (void)_noteNote2:(id)arg1;
- (void)_noteNote3:(id)arg1;
- (void)_noteNote4:(id)arg1;
- (id)_queryString;
- (void)_resetQueryState;
- (void)_recreateQuery;
- (BOOL)startQuery;
- (void)stopQuery;
- (BOOL)isStarted;
- (BOOL)isGathering;
- (BOOL)isStopped;
- (void)disableUpdates;
- (void)enableUpdates;
- (void)_update;
- (unsigned long long)resultCount;
- (id)resultAtIndex:(unsigned long long)arg1;
- (void)_zapResultArray;
- (id)results;
- (unsigned long long)indexOfResult:(id)arg1;
- (id)valueLists;
- (id)groupedResults;
- (id)valueOfAttribute:(id)arg1 forResultAtIndex:(unsigned long long)arg2;

@end

@interface _NSMetadataQueryPrivateIvars : NSObject
{
    _NSMetadataQueryResultArray *resultArray;
}

@end

@interface NSMiddleSpecifier : NSScriptObjectSpecifier
{
}

- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;

@end

@interface NSPlaceholderMutableString : NSMutableString
{
}

- (id)autorelease;
- (id)retain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (void)dealloc;
- (id)init;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(CDStruct_19b88e92 [1])arg3;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;

@end

@interface NSCheapMutableString : NSMutableString
{
    union {
        unsigned short *fat;
        char *thin;
    } contents;
    struct {
        unsigned int isFat:1;
        unsigned int freeWhenDone:1;
        unsigned int refs:30;
    } flags;
    unsigned long long numCharacters;
    void *_reserved;
}

- (void)setContentsNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3 isUnicode:(BOOL)arg4;
- (void)dealloc;
- (void)finalize;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)fastestEncoding;
- (const char *)cString;
- (const char *)lossyCString;
- (unsigned long long)cStringLength;

@end

@interface NSMutableString : NSString
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)stringWithCapacity:(unsigned long long)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)appendString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withCString:(const char *)arg2 length:(unsigned long long)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withCharacters:(const unsigned short *)arg2 length:(unsigned long long)arg3;
- (void)appendFormat:(id)arg1;
- (void)setString:(id)arg1;
- (unsigned long long)replaceOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;
- (Class)classForCoder;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

@interface NSNameSpecifier : NSScriptObjectSpecifier
{
    NSString *_name;
}

- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3 name:(id)arg4;
- (id)_initFromRecord:(id)arg1;
- (void)dealloc;
- (void)setName:(id)arg1;
- (id)name;
- (id)_specifiedValueInContainer:(id)arg1;
- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSNetServiceBrowser : NSObject
{
    id _netServiceBrowser;
    id _delegate;
    void *_reserved;
}

- (id)init;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)searchForBrowsableDomains;
- (void)searchForRegistrationDomains;
- (void)searchForServicesOfType:(id)arg1 inDomain:(id)arg2;
- (void)stop;
- (struct __CFNetServiceBrowser *)_internalNetServiceBrowser;
- (void)_dispatchCallBack:(void *)arg1 flags:(unsigned long long)arg2 error:(CDStruct_87dc826d)arg3;
- (void)dealloc;
- (void)finalize;

@end

@interface NSNetService : NSObject
{
    id _netService;
    id _delegate;
    id _reserved;
}

+ (id)dictionaryFromTXTRecordData:(id)arg1;
+ (id)dataFromTXTRecordDictionary:(id)arg1;
- (id)initWithCFNetService:(struct __CFNetService *)arg1;
- (id)initWithDomain:(id)arg1 type:(id)arg2 name:(id)arg3 port:(int)arg4;
- (id)initWithDomain:(id)arg1 type:(id)arg2 name:(id)arg3;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)_scheduleInDefaultRunLoopForMode:(id)arg1;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (id)domain;
- (id)type;
- (id)name;
- (id)hostName;
- (id)addresses;
- (long long)port;
- (void)publishWithOptions:(unsigned long long)arg1;
- (void)publish;
- (void)stop;
- (void)_dispatchCallBackWithError:(CDStruct_87dc826d)arg1;
- (void)dealloc;
- (void)finalize;
- (struct __CFNetService *)_internalNetService;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)getInputStream:(id *)arg1 outputStream:(id *)arg2;
- (void)resolveWithTimeout:(double)arg1;
- (void)resolve;
- (id)_monitors;
- (void)startMonitoring;
- (void)stopMonitoring;
- (BOOL)setTXTRecordData:(id)arg1;
- (id)TXTRecordData;

@end

@interface NSNetworkSettings : NSObject
{
    NSNetworkSettingsInternal *_internal;
}

+ (id)sharedNetworkSettings;
- (id)init;
- (void)dealloc;
- (id)proxyDictionary;
- (id)proxyPropertiesForURL:(id)arg1;
- (BOOL)isProxyNeededForURL:(id)arg1;
- (void)setProxyPropertiesForURL:(id)arg1 onStream:(struct __CFReadStream *)arg2;
- (BOOL)connectedToInternet:(BOOL)arg1;
- (void)setProxyDictionary:(id)arg1;

@end

@interface NSNetworkSettingsInternal : NSObject
{
    struct __SCDynamicStore *store;
    struct __CFRunLoopSource *storeSource;
    NSDictionary *proxyDictionary;
    BOOL ftpPassiveEnabled;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (void)dealloc;
- (void)finalize;

@end

@interface NSDistributedNotificationCenter : NSNotificationCenter
{
}

+ (id)defaultCenter;
+ (id)notificationCenterForType:(id)arg1;
- (id)init;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4 suspensionBehavior:(unsigned long long)arg5;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 options:(unsigned long long)arg4;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 deliverImmediately:(BOOL)arg4;
- (void)postNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)setSuspended:(BOOL)arg1;
- (BOOL)suspended;

@end

@interface NSNotificationCenter : NSObject
{
    void *_impl;
    void *_callback_block[4];
    void *_pad[8];
}

+ (id)defaultCenter;
- (id)init;
- (void)finalize;
- (void)dealloc;
- (id)description;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
- (void)removeObserver:(id)arg1;
- (void)removeObserver:(id)arg1 name:(id)arg2 object:(id)arg3;
- (void)postNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(id)arg4;
- (BOOL)isEmpty;

@end

@interface __NSObserver : NSObject
{
    NSNotificationCenter *nc;
    NSOperationQueue *queue;
    NSString *name;
    id object;
    id block;
}

+ (id)observerWithCenter:(id)arg1 queue:(id)arg2 name:(id)arg3 object:(id)arg4 block:(id)arg5;
+ (BOOL)isAnObserver:(id)arg1;
+ (void)forgetObserver:(id)arg1;
- (void)dealloc;
- (id)name;
- (id)object;
- (void)_doit:(id)arg1;

@end

@interface _NSLocalNotificationCenter : NSDistributedNotificationCenter
{
}

@end

@interface NSConcreteNotification : NSNotification
{
    NSString *name;
    id object;
    NSDictionary *userInfo;
    BOOL dyingObject;
}

+ (id)newTempNotificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)name;
- (id)object;
- (id)userInfo;
- (id)initWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)dealloc;
- (void)recycle;

@end

@interface NSNotification : NSObject <NSCopying, NSCoding>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)notificationWithName:(id)arg1 object:(id)arg2;
+ (id)notificationWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)name;
- (id)object;
- (id)userInfo;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)init;
- (id)initWithName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;

@end

@interface NSNotificationQueue : NSObject
{
    id _notificationCenter;
    id _asapQueue;
    id _asapObs;
    id _idleQueue;
    id _idleObs;
}

+ (id)defaultQueue;
- (id)init;
- (id)initWithNotificationCenter:(id)arg1;
- (void)dealloc;
- (void)_flushNotificationQueue;
- (void)enqueueNotification:(id)arg1 postingStyle:(unsigned long long)arg2;
- (void)enqueueNotification:(id)arg1 postingStyle:(unsigned long long)arg2 coalesceMask:(unsigned long long)arg3 forModes:(id)arg4;
- (void)dequeueNotificationsMatching:(id)arg1 coalesceMask:(unsigned long long)arg2;

@end

@interface NSNumberFormatter : NSFormatter
{
    NSMutableDictionary *_attributes;
    struct __CFNumberFormatter *_formatter;
    unsigned long long _counter;
    void *_reserved[12];
}

+ (unsigned long long)defaultFormatterBehavior;
+ (void)setDefaultFormatterBehavior:(unsigned long long)arg1;
+ (void)initialize;
+ (id)localizedStringFromNumber:(id)arg1 numberStyle:(unsigned long long)arg2;
- (void)_regenerateFormatter;
- (void *)__Keynote_NOOP;
- (id)init;
- (void)_reset;
- (void)dealloc;
- (void)finalize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (BOOL)getObjectValue:(out id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(out id *)arg4;
- (id)stringFromNumber:(id)arg1;
- (id)numberFromString:(id)arg1;
- (unsigned long long)numberStyle;
- (void)setNumberStyle:(unsigned long long)arg1;
- (id)locale;
- (void)setLocale:(id)arg1;
- (BOOL)generatesDecimalNumbers;
- (void)setGeneratesDecimalNumbers:(BOOL)arg1;
- (unsigned long long)formatterBehavior;
- (void)setFormatterBehavior:(unsigned long long)arg1;
- (id)negativeFormat;
- (void)setNegativeFormat:(id)arg1;
- (id)textAttributesForNegativeValues;
- (void)setTextAttributesForNegativeValues:(id)arg1;
- (id)positiveFormat;
- (void)setPositiveFormat:(id)arg1;
- (id)textAttributesForPositiveValues;
- (void)setTextAttributesForPositiveValues:(id)arg1;
- (BOOL)allowsFloats;
- (void)setAllowsFloats:(BOOL)arg1;
- (id)decimalSeparator;
- (void)setDecimalSeparator:(id)arg1;
- (BOOL)alwaysShowsDecimalSeparator;
- (void)setAlwaysShowsDecimalSeparator:(BOOL)arg1;
- (id)currencyDecimalSeparator;
- (void)setCurrencyDecimalSeparator:(id)arg1;
- (BOOL)usesGroupingSeparator;
- (void)setUsesGroupingSeparator:(BOOL)arg1;
- (id)groupingSeparator;
- (void)setGroupingSeparator:(id)arg1;
- (id)zeroSymbol;
- (void)setZeroSymbol:(id)arg1;
- (id)textAttributesForZero;
- (void)setTextAttributesForZero:(id)arg1;
- (id)nilSymbol;
- (void)setNilSymbol:(id)arg1;
- (id)textAttributesForNil;
- (void)setTextAttributesForNil:(id)arg1;
- (id)notANumberSymbol;
- (void)setNotANumberSymbol:(id)arg1;
- (id)textAttributesForNotANumber;
- (void)setTextAttributesForNotANumber:(id)arg1;
- (id)positiveInfinitySymbol;
- (void)setPositiveInfinitySymbol:(id)arg1;
- (id)textAttributesForPositiveInfinity;
- (void)setTextAttributesForPositiveInfinity:(id)arg1;
- (id)negativeInfinitySymbol;
- (void)setNegativeInfinitySymbol:(id)arg1;
- (id)textAttributesForNegativeInfinity;
- (void)setTextAttributesForNegativeInfinity:(id)arg1;
- (id)positivePrefix;
- (void)setPositivePrefix:(id)arg1;
- (id)positiveSuffix;
- (void)setPositiveSuffix:(id)arg1;
- (id)negativePrefix;
- (void)setNegativePrefix:(id)arg1;
- (id)negativeSuffix;
- (void)setNegativeSuffix:(id)arg1;
- (id)currencyCode;
- (void)setCurrencyCode:(id)arg1;
- (id)currencySymbol;
- (void)setCurrencySymbol:(id)arg1;
- (id)internationalCurrencySymbol;
- (void)setInternationalCurrencySymbol:(id)arg1;
- (id)percentSymbol;
- (void)setPercentSymbol:(id)arg1;
- (id)perMillSymbol;
- (void)setPerMillSymbol:(id)arg1;
- (id)minusSign;
- (void)setMinusSign:(id)arg1;
- (id)plusSign;
- (void)setPlusSign:(id)arg1;
- (id)exponentSymbol;
- (void)setExponentSymbol:(id)arg1;
- (unsigned long long)groupingSize;
- (void)setGroupingSize:(unsigned long long)arg1;
- (unsigned long long)secondaryGroupingSize;
- (void)setSecondaryGroupingSize:(unsigned long long)arg1;
- (unsigned long long)formatWidth;
- (void)setFormatWidth:(unsigned long long)arg1;
- (id)multiplier;
- (void)setMultiplier:(id)arg1;
- (id)paddingCharacter;
- (void)setPaddingCharacter:(id)arg1;
- (unsigned long long)paddingPosition;
- (void)setPaddingPosition:(unsigned long long)arg1;
- (unsigned long long)roundingMode;
- (void)setRoundingMode:(unsigned long long)arg1;
- (id)roundingIncrement;
- (void)setRoundingIncrement:(id)arg1;
- (unsigned long long)minimumIntegerDigits;
- (void)setMinimumIntegerDigits:(unsigned long long)arg1;
- (unsigned long long)maximumIntegerDigits;
- (void)setMaximumIntegerDigits:(unsigned long long)arg1;
- (unsigned long long)minimumFractionDigits;
- (void)setMinimumFractionDigits:(unsigned long long)arg1;
- (unsigned long long)maximumFractionDigits;
- (void)setMaximumFractionDigits:(unsigned long long)arg1;
- (id)minimum;
- (void)setMinimum:(id)arg1;
- (id)maximum;
- (void)setMaximum:(id)arg1;
- (id)currencyGroupingSeparator;
- (void)setCurrencyGroupingSeparator:(id)arg1;
- (BOOL)isLenient;
- (void)setLenient:(BOOL)arg1;
- (BOOL)usesSignificantDigits;
- (void)setUsesSignificantDigits:(BOOL)arg1;
- (unsigned long long)minimumSignificantDigits;
- (void)setMinimumSignificantDigits:(unsigned long long)arg1;
- (unsigned long long)maximumSignificantDigits;
- (void)setMaximumSignificantDigits:(unsigned long long)arg1;
- (BOOL)isPartialStringValidationEnabled;
- (void)setPartialStringValidationEnabled:(BOOL)arg1;

@end

@interface NSAutoContentAccessingProxy : NSProxy
{
    id _target;
}

+ (id)proxyWithTarget:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSWhoseTest : NSScriptWhoseTest
{
}

@end

@interface NSObjectSpecifier : NSScriptObjectSpecifier
{
}

@end

@interface NSCoercionHandler : NSScriptCoercionHandler
{
}

@end

@interface NSOperationQueue : NSObject
{
    id _private;
    void *_reserved;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)currentQueue;
+ (id)mainQueue;
- (id)init;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)addOperation:(id)arg1;
- (void)addOperations:(id)arg1 waitUntilFinished:(BOOL)arg2;
- (void)addOperationWithBlock:(id)arg1;
- (id)operations;
- (unsigned long long)operationCount;
- (long long)maxConcurrentOperationCount;
- (void)setMaxConcurrentOperationCount:(long long)arg1;
- (BOOL)isSuspended;
- (void)setSuspended:(BOOL)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (void)cancelAllOperations;
- (void)waitUntilAllOperationsAreFinished;

@end

@interface __NSOperationQueueInternal : NSObject
{
    struct dispatch_queue_s *__dispatchQ;
    struct dispatch_semaphore_s *__poker;
    NSOperation *__firstOperation;
    NSOperation *__lastOperation;
    NSOperation *__pendingFirstOperation;
    NSOperation *__pendingLastOperation;
    int __pendingAddLock;
    long long __maxNumOps;
    long long __actualMaxNumOps;
    long long __numExecOps;
    int __outerRC;
    unsigned char __mainQ;
    unsigned char __suspended;
    char __nameBuffer[165];
}

- (id)init;
- (void)dealloc;
- (void)finalize;

@end

@interface NSInvocationOperation : NSOperation
{
    id _inv;
    id _exception;
    void *_reserved2;
}

- (id)init;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (id)initWithInvocation:(id)arg1;
- (void)dealloc;
- (id)invocation;
- (void)main;
- (id)result;

@end

@interface NSBlockOperation : NSOperation
{
    id _private2;
    void *_reserved2;
}

+ (id)blockOperationWithBlock:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)addExecutionBlock:(id)arg1;
- (void)main;
- (id)executionBlocks;

@end

@interface NSOperation : NSObject
{
    id _private;
    void *_reserved;
}

+ (void)initialize;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (id)_implicitObservationInfo;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)arg1;
- (id)init;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)finalize;
- (BOOL)isCancelled;
- (void)cancel;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (BOOL)isConcurrent;
- (BOOL)isAsynchronous;
- (BOOL)isReady;
- (long long)queuePriority;
- (void)setQueuePriority:(long long)arg1;
- (double)threadPriority;
- (void)setThreadPriority:(double)arg1;
- (id)completionBlock;
- (void)setCompletionBlock:(id)arg1;
- (void)waitUntilFinished;
- (void)waitUntilFinishedOrTimeout:(double)arg1;
- (void)addDependency:(id)arg1;
- (void)removeDependency:(id)arg1;
- (id)dependencies;
- (void)main;
- (void)start;

@end

@interface __NSOperationInternal : NSObject
{
    NSOperation *__outerOp;
    NSOperation *__nextOp;
    NSOperationQueue *__queue;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __wait_mutex;
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } __wait_cond;
    long long __deps_count;
    long long __unfinished_deps;
    id __completion;
    double __thread_prio;
    void *__implicitObsInfo;
    void *__obsInfo;
    int __outerRC;
    int __RC;
    int __state;
    BOOL __prio;
    unsigned char __cached_isReady;
    unsigned char __isCancelled;
}

+ (void)_observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 changeKind:(unsigned long long)arg3 oldValue:(id)arg4 newValue:(id)arg5 indexes:(id)arg6 context:(void *)arg7;
- (id)init;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)finalize;
- (BOOL)isCancelled;
- (void)cancel;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (BOOL)isReady;
- (long long)queuePriority;
- (void)setQueuePriority:(long long)arg1;
- (double)threadPriority;
- (void)setThreadPriority:(double)arg1;
- (void)waitUntilFinished;
- (void)waitUntilFinishedOrTimeout:(double)arg1;
- (void)addDependency:(id)arg1;
- (void)removeDependency:(id)arg1;
- (id)dependencies;
- (void)start;
@property(copy) id completionBlock; // @synthesize completionBlock=__completion;

@end

@interface NSPathStore2 : NSString
{
    unsigned int _lengthAndRefCount;
    unsigned short _characters[0];
}

+ (id)pathStoreWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
+ (id)pathWithComponents:(id)arg1;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqualToString:(id)arg1;
- (id)pathComponents;
- (BOOL)isAbsolutePath;
- (id)lastPathComponent;
- (id)stringByDeletingLastPathComponent;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)pathExtension;
- (id)stringByDeletingPathExtension;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByExpandingTildeInPath;
- (id)_stringByStandardizingPathUsingCache:(BOOL)arg1;
- (id)stringByStandardizingPath;
- (id)_stringByResolvingSymlinksInPathUsingCache:(BOOL)arg1;
- (id)stringByResolvingSymlinksInPath;

@end

@interface NSConcretePointerArray : NSPointerArray
{
    struct NSSlice slice;
    unsigned long long count;
    unsigned long long capacity;
    unsigned long long options;
    unsigned long long mutations;
}

- (id)init;
- (void)_initBlock;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)initWithPointerFunctions:(id)arg1;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)pointerFunctions;
- (void)arrayGrow:(unsigned long long)arg1;
- (void *)pointerAtIndex:(unsigned long long)arg1;
- (void)addPointer:(void *)arg1;
- (void)removePointerAtIndex:(unsigned long long)arg1;
- (void)insertPointer:(void *)arg1 atIndex:(unsigned long long)arg2;
- (void)replacePointerAtIndex:(unsigned long long)arg1 withPointer:(void *)arg2;
- (void)compact;
- (unsigned long long)count;
- (void)setCount:(unsigned long long)arg1;
- (unsigned long long)indexOfPointer:(void *)arg1;
- (void)removePointer:(void *)arg1;

@end

@interface NSPointerArray : NSObject <NSFastEnumeration, NSCopying, NSCoding>
{
}

+ (id)pointerArrayWithOptions:(unsigned long long)arg1;
+ (id)pointerArrayWithPointerFunctions:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)initWithPointerFunctions:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)pointerFunctions;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void *)pointerAtIndex:(unsigned long long)arg1;
- (void)addPointer:(void *)arg1;
- (void)removePointerAtIndex:(unsigned long long)arg1;
- (void)insertPointer:(void *)arg1 atIndex:(unsigned long long)arg2;
- (void)replacePointerAtIndex:(unsigned long long)arg1 withPointer:(void *)arg2;
- (void)compact;
- (unsigned long long)count;
- (void)setCount:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface NSPointerFunctions : NSObject <NSCopying>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)pointerFunctionsWithOptions:(unsigned long long)arg1;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property void *sizeFunction;
@property void *hashFunction;
@property void *isEqualFunction;
@property void *descriptionFunction;
@property void *acquireFunction;
@property void *relinquishFunction;
@property BOOL usesStrongWriteBarrier;
@property BOOL usesWeakReadAndWriteBarriers;

@end

@interface NSConcretePointerFunctions : NSPointerFunctions
{
    struct NSSlice slice;
}

+ (void)initializeBackingStore:(struct NSSlice *)arg1 sentinel:(_Bool)arg2;
+ (_Bool)initializeSlice:(struct NSSlice *)arg1 withOptions:(unsigned long long)arg2;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setSizeFunction:(void *)arg1;
- (void)setHashFunction:(void *)arg1;
- (void)setIsEqualFunction:(void *)arg1;
- (void)setDescriptionFunction:(void *)arg1;
- (void)setAcquireFunction:(void *)arg1;
- (void)setRelinquishFunction:(void *)arg1;
- (void)setUsesStrongWriteBarrier:(BOOL)arg1;
- (void)setUsesWeakReadAndWriteBarriers:(BOOL)arg1;
- (void *)sizeFunction;
- (void *)hashFunction;
- (void *)isEqualFunction;
- (void *)descriptionFunction;
- (void *)acquireFunction;
- (void *)relinquishFunction;
- (BOOL)usesStrongWriteBarrier;
- (BOOL)usesWeakReadAndWriteBarriers;

@end

@interface NSMessagePort : NSPort
{
    void *_port;
    id _delegate;
}

+ (BOOL)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned long long)arg7;
+ (void)_fixNSMessagePortLeak;
- (BOOL)isValid;
- (void)invalidate;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)name;
- (BOOL)setName:(id)arg1;
- (BOOL)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (id)initWithName:(id)arg1;
- (id)initWithRemoteName:(id)arg1;
- (id)init;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (void)finalize;

@end

@interface NSMachPort : NSPort
{
    id _delegate;
    unsigned long long _flags;
    unsigned int _machPort;
    unsigned long long _reserved;
}

+ (void)resetAllPorts;
+ (id)port;
+ (id)portWithMachPort:(unsigned int)arg1;
+ (id)portWithMachPort:(unsigned int)arg1 options:(unsigned long long)arg2;
+ (void)_fixNSMachPortLeak;
+ (void)parseMachMessage:(void *)arg1 localPort:(id *)arg2 remotePort:(id *)arg3 msgid:(unsigned int *)arg4 components:(id *)arg5;
+ (BOOL)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned long long)arg7;
- (unsigned long long)_cfTypeID;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isValid;
- (void)invalidate;
- (unsigned int)machPort;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (BOOL)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)handlePortMessage:(id)arg1;
- (id)initWithMachPort:(unsigned int)arg1 options:(unsigned long long)arg2;
- (id)initWithMachPort:(unsigned int)arg1;
- (id)init;
- (void)dealloc;
- (void)finalize;

@end

@interface NSPort : NSObject <NSCopying, NSCoding>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)port;
+ (id)portWithMachPort:(unsigned int)arg1;
- (id)initWithMachPort:(unsigned int)arg1;
- (void)invalidate;
- (BOOL)isValid;
- (unsigned int)machPort;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (unsigned long long)reservedSpaceLength;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)replacementObjectForCoder:(id)arg1;
- (Class)classForPortCoder;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)removeConnection:(id)arg1 fromRunLoop:(id)arg2 forMode:(id)arg3;

@end

@interface NSConcretePortCoder : NSPortCoder
{
    id sndPort;
    id rcvPort;
    NSDOStreamData *doStreamData;
    NSMutableArray *components;
    NSMutableArray *importedObjects;
    unsigned long long componentIndex;
    BOOL isBycopy;
    BOOL isByref;
    BOOL isValid;
}

+ (void)_enableLogging:(BOOL)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)debugDescription;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (void)dispatch;
- (void)invalidate;
- (void)dealloc;
- (id)components;
- (void)sendBeforeTime:(double)arg1 sendReplyPort:(BOOL)arg2;
- (void)authenticateWithDelegate:(id)arg1;
- (BOOL)verifyWithDelegate:(id)arg1;
- (void)encryptWithDelegate:(id)arg1;
- (void)decryptWithDelegate:(id)arg1;
- (id)importedObjects;
- (void)importObject:(id)arg1;
- (id)connection;
- (BOOL)isBycopy;
- (BOOL)isByref;
- (long long)versionForClassName:(id)arg1;
- (void)encodeDataObject:(id)arg1;
- (id)decodeDataObject;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)encodePortObject:(id)arg1;
- (id)decodePortObject;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (void)encodeInvocation:(id)arg1;
- (id)decodeInvocation;
- (void)encodeReturnValue:(id)arg1;
- (void)decodeReturnValue:(id)arg1;
- (void)encodeObject:(id)arg1 isBycopy:(BOOL)arg2 isByref:(BOOL)arg3;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodePropertyList:(id)arg1;
- (id)decodePropertyList;
- (id)decodeRetainedObject;

@end

@interface NSDOStreamData : NSMutableData
{
    id refObject;
    struct {
        id data;
        char *datap;
        char *limitp;
        char *startp;
        id callback;
        char datapVM;
    } stream;
}

- (id)init;
- (void)dealloc;
- (void)finalize;
- (const void *)bytes;
- (void *)mutableBytes;
- (unsigned long long)length;

@end

@interface NSPortCoder : NSCoder
{
}

+ (id)portCoderWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isBycopy;
- (BOOL)isByref;
- (id)connection;
- (void)encodePortObject:(id)arg1;
- (id)decodePortObject;
- (void)dispatch;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;

@end

@interface NSSocketPortNameServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (id)portForName:(id)arg1;
- (id)portForName:(id)arg1 host:(id)arg2;
- (id)portForName:(id)arg1 host:(id)arg2 nameServerPortNumber:(unsigned short)arg3;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (BOOL)registerPort:(id)arg1 name:(id)arg2 nameServerPortNumber:(unsigned short)arg3;
- (void)netServiceWillPublish:(id)arg1;
- (void)netService:(id)arg1 didNotPublish:(id)arg2;
- (void)netServiceWillResolve:(id)arg1;
- (void)netService:(id)arg1 didNotResolve:(id)arg2;
- (void)netServiceDidStop:(id)arg1;
- (BOOL)removePortForName:(id)arg1;
- (void)setDefaultNameServerPortNumber:(unsigned short)arg1;
- (unsigned short)defaultNameServerPortNumber;

@end

@interface NSMessagePortNameServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (id)portForName:(id)arg1;
- (id)portForName:(id)arg1 host:(id)arg2;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (BOOL)removePortForName:(id)arg1;

@end

@interface NSMachBootstrapServer : NSPortNameServer
{
}

+ (id)sharedInstance;
- (id)portForName:(id)arg1;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (id)servicePortWithName:(id)arg1;
- (id)portForName:(id)arg1 host:(id)arg2;
- (BOOL)removePortForName:(id)arg1;

@end

@interface NSPortNameServer : NSObject
{
}

+ (id)systemDefaultPortNameServer;
+ (id)defaultPortNameServer;
- (id)portForName:(id)arg1;
- (id)portForName:(id)arg1 host:(id)arg2;
- (BOOL)registerPort:(id)arg1 name:(id)arg2;
- (BOOL)removePortForName:(id)arg1;
- (BOOL)registerPort:(id)arg1 forName:(id)arg2;
- (id)portForName:(id)arg1 onHost:(id)arg2;

@end

@interface NSPositionalSpecifier : NSObject
{
    NSScriptObjectSpecifier *_specifier;
    unsigned long long _unadjustedPosition;
    NSScriptClassDescription *_insertionClassDescription;
    id _moreVars;
    void *_reserved0;
}

+ (BOOL)_describedClass:(id)arg1 isSubclassOfClass:(Class)arg2;
- (id)initWithPosition:(unsigned long long)arg1 objectSpecifier:(id)arg2;
- (void)dealloc;
- (unsigned long long)position;
- (id)objectSpecifier;
- (void)setInsertionClassDescription:(id)arg1;
- (void)_preEvaluate;
- (void)_evaluateToBeginningOrEndOfContainer:(id)arg1;
- (void)_evaluateRelativeToObjectInContainer:(id)arg1;
- (void)evaluate;
- (id)insertionContainer;
- (id)insertionKey;
- (long long)insertionIndex;
- (BOOL)insertionReplaces;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSPositionalSpecifierMoreIVars : NSObject
{
    NSScriptObjectSpecifier *insertionContainerSpecifier;
    NSString *insertionKey;
    unsigned long long insertionPosition;
    BOOL evaluated;
    id insertionContainer;
    BOOL specifiesSetting;
    long long insertionIndex;
    BOOL insertionReplaces;
}

@end

@interface NSPredicate : NSObject <NSCoding, NSCopying>
{
    void *_reserved;
}

+ (void)initialize;
+ (id)newStringFrom:(id)arg1 usingUnicodeTransforms:(unsigned long long)arg2;
+ (struct __CFLocale *)retainedLocale;
+ (id)predicateWithFormat:(id)arg1 argumentArray:(id)arg2;
+ (id)predicateWithFormat:(id)arg1;
+ (id)predicateWithFormat:(id)arg1 arguments:(CDStruct_19b88e92 [1])arg2;
+ (id)predicateWithValue:(BOOL)arg1;
+ (id)predicateWithBlock:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)evaluateWithObject:(id)arg1;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (id)description;
- (id)predicateFormat;

@end

@interface NSPredicateOperator : NSObject <NSCoding, NSCopying>
{
    unsigned long long _operatorType;
    unsigned long long _modifier;
}

+ (id)_getSymbolForType:(unsigned long long)arg1;
+ (SEL)_getSelectorForType:(unsigned long long)arg1;
+ (id)operatorWithType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
+ (id)_newOperatorWithType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
+ (id)operatorWithCustomSelector:(SEL)arg1 modifier:(unsigned long long)arg2;
- (id)initWithOperatorType:(unsigned long long)arg1;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (id)description;
- (SEL)selector;
- (unsigned long long)operatorType;
- (id)symbol;
- (unsigned long long)modifier;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (BOOL)performOperationUsingObject:(id)arg1 andObject:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (void)_setOptions:(unsigned long long)arg1;
- (unsigned long long)options;
- (void)_setModifier:(unsigned long long)arg1;

@end

@interface NSCFType : NSObject
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;

@end

@interface NSProcessInfo : NSObject
{
    NSDictionary *environment;
    NSArray *arguments;
    NSString *hostName;
    NSString *name;
    void *reserved;
}

+ (id)processInfo;
- (void)dealloc;
- (id)environment;
- (id)arguments;
- (void)setArguments:(id)arg1;
- (id)hostName;
- (id)processName;
- (void)setProcessName:(id)arg1;
- (int)processIdentifier;
- (id)globallyUniqueString;
- (id)userName;
- (id)userFullName;
- (id)userHomeDirectory;
- (unsigned long long)operatingSystem;
- (id)operatingSystemName;
- (id)operatingSystemVersionString;
- (unsigned long long)processorCount;
- (unsigned long long)activeProcessorCount;
- (unsigned long long)physicalMemory;
- (BOOL)isTranslated;
- (double)systemUptime;
- (void)disableSuddenTermination;
- (void)enableSuddenTermination;
- (void)_exitIfSuddenTerminationEnabledWithStatus:(int)arg1;
- (void)_exitWhenSuddenTerminationEnabledWithStatus:(int)arg1;
- (long long)_suddenTerminationDisablingCount;

@end

@interface NSPropertyListSerialization : NSObject
{
    void *reserved[6];
}

+ (BOOL)propertyList:(id)arg1 isValidForFormat:(unsigned long long)arg2;
+ (id)dataFromPropertyList:(id)arg1 format:(unsigned long long)arg2 errorDescription:(id *)arg3;
+ (id)propertyListFromData:(id)arg1 mutabilityOption:(unsigned long long)arg2 format:(unsigned long long *)arg3 errorDescription:(id *)arg4;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)dataWithPropertyList:(id)arg1 format:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
+ (id)propertyListWithData:(id)arg1 options:(unsigned long long)arg2 format:(unsigned long long *)arg3 error:(id *)arg4;
+ (long long)writePropertyList:(id)arg1 toStream:(id)arg2 format:(unsigned long long)arg3 options:(unsigned long long)arg4 error:(id *)arg5;
+ (id)propertyListWithStream:(id)arg1 options:(unsigned long long)arg2 format:(unsigned long long *)arg3 error:(id *)arg4;
- (id)init;

@end

@interface NSPropertySpecifier : NSScriptObjectSpecifier
{
}

+ (unsigned int)_keyCodeFromRecord:(id)arg1;
- (id)_specifiedValueInContainer:(id)arg1;
- (long long *)_specifiedIndicesOfObjectOrObjectsInContainer:(id)arg1 count:(long long *)arg2;
- (id)_specifiedIndexesOfObjectsInContainer:(id)arg1;
- (BOOL)_specifiesSingleIndexedObjectPerContainer;
- (BOOL)_specifiesMultipleIndexedObjectsPerContainer;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;

@end

@interface NSConcreteProtocolChecker : NSProtocolChecker
{
    NSObject *_target;
    Protocol *_protocol;
}

- (id)protocol;
- (id)target;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;
- (void)dealloc;

@end

@interface NSProtocolChecker : NSProxy
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)protocolCheckerWithTarget:(id)arg1 protocol:(id)arg2;
- (id)protocol;
- (id)target;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (const char *)_localClassNameForClass;
- (void)forwardInvocation:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;

@end

@interface NSProxy <NSObject>
{
    Class isa;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
+ (Class)class;
+ (id)self;
+ (id)retain;
+ (oneway void)release;
+ (id)autorelease;
+ (unsigned long long)retainCount;
+ (id)copyWithZone:(struct _NSZone *)arg1;
+ (id)mutableCopyWithZone:(struct _NSZone *)arg1;
+ (BOOL)respondsToSelector:(SEL)arg1;
+ (BOOL)isAncestorOfObject:(id)arg1;
+ (Class)superclass;
+ (id)debugDescription;
+ (id)_copyDescription;
+ (id)performSelector:(SEL)arg1;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2;
+ (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
+ (BOOL)isFault;
+ (BOOL)isProxy;
+ (BOOL)isSubclassOfClass:(Class)arg1;
+ (BOOL)conformsToProtocol:(id)arg1;
- (long long)forward:(SEL)arg1:(void *)arg2;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (id)retain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)autorelease;
- (void)dealloc;
- (void)finalize;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)description;
- (id)debugDescription;
- (id)_copyDescription;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isFault;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;

@end

@interface NSRandomSpecifier : NSScriptObjectSpecifier
{
}

- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;

@end

@interface NSRangeSpecifier : NSScriptObjectSpecifier
{
    NSScriptObjectSpecifier *_startSpec;
    NSScriptObjectSpecifier *_endSpec;
}

- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3 startSpecifier:(id)arg4 endSpecifier:(id)arg5;
- (id)_initFromRecord:(id)arg1;
- (void)dealloc;
- (void)setStartSpecifier:(id)arg1;
- (void)setEndSpecifier:(id)arg1;
- (id)startSpecifier;
- (id)endSpecifier;
- (id)_specifiedIndexesOfObjectsInContainer:(id)arg1;
- (BOOL)_specifiesSingleIndexedObjectPerContainer;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSRelativeSpecifier : NSScriptObjectSpecifier
{
    unsigned long long _relativePosition;
    NSScriptObjectSpecifier *_baseSpecifier;
}

- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3 relativePosition:(unsigned long long)arg4 baseSpecifier:(id)arg5;
- (id)_initFromRecord:(id)arg1;
- (void)dealloc;
- (void)setBaseSpecifier:(id)arg1;
- (id)baseSpecifier;
- (void)setRelativePosition:(unsigned long long)arg1;
- (unsigned long long)relativePosition;
- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSConcreteScanner : NSScanner
{
    NSString *scanString;
    NSCharacterSet *skipSet;
    NSCharacterSet *invertedSkipSet;
    id locale;
    unsigned long long scanLocation;
    struct {
        unsigned int caseSensitive:1;
        unsigned int :31;
    } flags;
}

- (id)initWithString:(id)arg1;
- (id)string;
- (id)_invertedSkipSet;
- (void)setScanLocation:(unsigned long long)arg1;
- (unsigned long long)scanLocation;
- (void)setCharactersToBeSkipped:(id)arg1;
- (id)charactersToBeSkipped;
- (void)setCaseSensitive:(BOOL)arg1;
- (BOOL)caseSensitive;
- (void)setLocale:(id)arg1;
- (id)locale;
- (BOOL)scanInt:(int *)arg1;
- (BOOL)scanLongLong:(long long *)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSScanner : NSObject <NSCopying>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)scannerWithString:(id)arg1;
+ (id)localizedScannerWithString:(id)arg1;
- (id)initWithString:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_invertedSkipSet;
- (BOOL)scanDouble:(double *)arg1;
- (BOOL)scanFloat:(float *)arg1;
- (BOOL)scanHexDouble:(double *)arg1;
- (BOOL)scanHexFloat:(float *)arg1;
- (BOOL)scanLongLong:(long long *)arg1;
- (BOOL)scanInt:(int *)arg1;
- (BOOL)scanInteger:(long long *)arg1;
- (BOOL)scanHexLongLong:(unsigned long long *)arg1;
- (BOOL)scanHexInt:(unsigned int *)arg1;
- (BOOL)scanCharactersFromSet:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanUpToCharactersFromSet:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanString:(id)arg1 intoString:(id *)arg2;
- (BOOL)scanUpToString:(id)arg1 intoString:(id *)arg2;
- (BOOL)isAtEnd;
- (id)charactersToBeSkipped;
- (BOOL)caseSensitive;
- (id)locale;
- (id)string;
- (void)setScanLocation:(unsigned long long)arg1;
- (unsigned long long)scanLocation;
- (void)setCharactersToBeSkipped:(id)arg1;
- (void)setCaseSensitive:(BOOL)arg1;
- (void)setLocale:(id)arg1;

@end

@interface NSScriptArgumentDescription : NSObject
{
    NSString *_key;
    unsigned int _appleEventCode;
    NSObject *_typeNameOrDescription;
    BOOL _isOptional;
    BOOL _isHidden;
    NSString *_presentableDescription;
    NSObject *_presentableNameOrNames;
    NSArray *_synonymDescriptions;
}

- (id)initWithKey:(id)arg1 appleEventCode:(unsigned int)arg2 type:(id)arg3 isOptional:(BOOL)arg4 isHidden:(BOOL)arg5 presentableDescription:(id)arg6 name:(id)arg7 synonymDescriptions:(id)arg8;
- (id)initWithKey:(id)arg1 appleEventCode:(unsigned int)arg2 type:(id)arg3 isOptional:(BOOL)arg4 presentableDescription:(id)arg5 nameOrNames:(id)arg6;
- (void)dealloc;
- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2 commandName:(id)arg3;
- (id)key;
- (unsigned int)appleEventCode;
- (id)typeDescription;
- (BOOL)isOptional;
- (BOOL)isHidden;
- (id)presentableDescription;
- (id)presentableNames;
- (id)firstPresentableName;
- (id)parameterDescriptorFromEvent:(id)arg1;

@end

@interface NSScriptClassDescription : NSClassDescription
{
    NSString *_suiteName;
    NSString *_objcClassName;
    unsigned int _appleEventCode;
    NSObject *_superclassNameOrDescription;
    NSArray *_attributeDescriptions;
    NSArray *_toOneRelationshipDescriptions;
    NSArray *_toManyRelationshipDescriptions;
    NSDictionary *_commandMethodSelectorsByName;
    id _moreVars;
}

+ (id)classDescriptionForClass:(Class)arg1;
- (id)init;
- (void)dealloc;
- (id)initWithSuiteName:(id)arg1 className:(id)arg2 dictionary:(id)arg3;
- (id)suiteName;
- (id)className;
- (id)implementationClassName;
- (id)superclassDescription;
- (unsigned int)appleEventCode;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (id)_methodNameForCommand:(id)arg1;
- (BOOL)supportsCommand:(id)arg1;
- (SEL)selectorForCommand:(id)arg1;
- (id)typeForKey:(id)arg1;
- (id)classDescriptionForKey:(id)arg1;
- (unsigned int)appleEventCodeForKey:(id)arg1;
- (id)keyWithAppleEventCode:(unsigned int)arg1;
- (id)defaultSubcontainerAttributeKey;
- (id)_propertyDescriptionsByKey;
- (BOOL)isLocationRequiredToCreateForKey:(id)arg1;
- (BOOL)hasPropertyForKey:(id)arg1;
- (BOOL)hasOrderedToManyRelationshipForKey:(id)arg1;
- (BOOL)hasReadablePropertyForKey:(id)arg1;
- (BOOL)hasWritablePropertyForKey:(id)arg1;
- (void)_getKeys:(id)arg1 forPropertyDescriptionKind:(int)arg2;
- (id)_keysForPropertyDescriptionKind:(int)arg1;
- (id)attributeKeys;
- (id)toOneRelationshipKeys;
- (id)toManyRelationshipKeys;
- (id)inverseForRelationshipKey:(id)arg1;

@end

@interface NSScriptClassDescriptionMoreIVars : NSObject
{
    NSString *defaultSubcontainerAttributeKey;
    NSDictionary *inverseRelationshipKeysByKey;
    NSString *presentableDescription;
    NSObject *presentableNameOrNames;
    NSString *presentablePluralName;
    NSArray *synonymDescriptions;
    BOOL isHidden;
    BOOL isFromLegacyPropertyLists;
    BOOL isSynonym;
    NSDictionary *cachedPropertyDescriptionsByKey;
    NSObject *primitiveTypeNameOrDescription;
}

@end

@interface NSScriptCoercionHandler : NSObject
{
    id _coercers;
}

+ (id)sharedCoercionHandler;
- (id)init;
- (void)dealloc;
- (id)_findCoercerFromClass:(Class)arg1 toClass:(Class)arg2;
- (id)coerceValue:(id)arg1 toClass:(Class)arg2;
- (void)registerCoercer:(id)arg1 selector:(SEL)arg2 toConvertFromClass:(Class)arg3 toClass:(Class)arg4;

@end

@interface _NSAECoercerData : NSObject
{
    id coercer;
    SEL selector;
}

- (id)initWithCoercer:(id)arg1 selector:(SEL)arg2;
- (void)dealloc;

@end

@interface NSScriptCommand : NSObject <NSCoding>
{
    NSScriptCommandDescription *_commandDescription;
    id _directParameter;
    NSScriptObjectSpecifier *_receiversSpecifier;
    id _evaluatedReceivers;
    NSDictionary *_arguments;
    NSMutableDictionary *_evaluatedArguments;
    struct {
        unsigned int hasEvaluatedReceivers:1;
        unsigned int hasEvaluatedArguments:1;
        unsigned int RESERVED:30;
    } _flags;
    id _moreVars;
    void *_reserved;
}

+ (id)currentCommand;
- (id)initWithCommandDescription:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)commandDescription;
- (void)setDirectParameter:(id)arg1;
- (id)directParameter;
- (void)setReceiversSpecifier:(id)arg1;
- (id)receiversSpecifier;
- (id)evaluatedReceivers;
- (void)setArguments:(id)arg1;
- (id)arguments;
- (id)evaluatedArguments;
- (BOOL)isWellFormed;
- (id)performDefaultImplementation;
- (void)_sendToRemainingReceivers;
- (id)executeCommand;
- (void)setScriptErrorNumber:(int)arg1;
- (void)setScriptErrorOffendingObjectDescriptor:(id)arg1;
- (void)setScriptErrorExpectedTypeDescriptor:(id)arg1;
- (void)setScriptErrorString:(id)arg1;
- (int)scriptErrorNumber;
- (id)scriptErrorOffendingObjectDescriptor;
- (id)scriptErrorExpectedTypeDescriptor;
- (id)scriptErrorString;
- (id)appleEvent;
- (void)suspendExecution;
- (void)resumeExecutionWithResult:(id)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSScriptCommandMoreIVars : NSObject
{
    NSAppleEventHandling *appleEventHandling;
    NSArray *flattenedReceivers;
    unsigned long long nextReceiverIndex;
    NSMutableArray *collectedResults;
    Class cachedHanderInvocationReceiverClass;
    NSInvocation *cachedHandlerInvocation;
    int errorNumber;
    NSString *errorString;
    NSAppleEventDescriptor *errorOffendingObjectDescriptor;
    NSAppleEventDescriptor *errorExpectedTypeDescriptor;
}

@end

@interface NSScriptCommandConstructionContext : NSObject
{
}

+ (void)beginConstructionWithSuiteRegistry:(id)arg1;
+ (void)endConstruction;
+ (void)setCurrentConstructionContext:(id)arg1;
+ (id)currentConstructionContext;

@end

@interface NSScriptCommandDescription : NSObject <NSCoding>
{
    NSString *_suiteName;
    NSString *_plistCommandName;
    unsigned int _classAppleEventCode;
    unsigned int _idAppleEventCode;
    NSString *_objcClassName;
    NSObject *_resultTypeNameOrDescription;
    unsigned int _plistResultTypeAppleEventCode;
    id _moreVars;
}

- (id)init;
- (void)dealloc;
- (id)initWithSuiteName:(id)arg1 commandName:(id)arg2 dictionary:(id)arg3;
- (id)suiteName;
- (id)commandName;
- (unsigned int)appleEventClassCode;
- (unsigned int)appleEventCode;
- (id)commandClassName;
- (id)returnType;
- (unsigned int)appleEventCodeForReturnType;
- (id)_argumentDescriptionsByName;
- (id)argumentNames;
- (id)typeForArgumentWithName:(id)arg1;
- (unsigned int)appleEventCodeForArgumentWithName:(id)arg1;
- (BOOL)isOptionalArgumentWithName:(id)arg1;
- (id)createCommandInstance;
- (id)createCommandInstanceWithZone:(struct _NSZone *)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSScriptCommandDescriptionMoreIVars : NSObject
{
    NSArray *argumentDescriptions;
    NSString *presentableDescription;
    NSObject *presentableNameOrNames;
    NSString *presentableResultDescription;
    NSArray *synonymDescriptions;
    BOOL isHidden;
    BOOL isFromLegacyPropertyLists;
    NSDictionary *cachedArgumentDescriptionsByName;
}

@end

@interface NSScriptExecutionContext : NSObject
{
    id _topLevelObject;
    id _objectBeingTested;
    id _rangeContainerObject;
    id _moreVars;
}

+ (id)sharedScriptExecutionContext;
- (id)init;
- (void)dealloc;
- (void)setTopLevelObject:(id)arg1;
- (id)topLevelObject;
- (void)setObjectBeingTested:(id)arg1;
- (id)objectBeingTested;
- (void)setRangeContainerObject:(id)arg1;
- (id)rangeContainerObject;

@end

@interface NSScriptExecutionContextMoreIVars : NSObject
{
    NSScriptClassDescription *rangeContainerClassDescription;
    NSScriptTypeDescription *testedObjectTypeDescription;
    int errorNumber;
    NSAppleEventDescriptor *errorOffendingObjectDescriptor;
    NSAppleEventDescriptor *errorExpectedTypeDescriptor;
}

@end

@interface NSScriptObjectSpecifier : NSObject <NSCoding>
{
    NSScriptObjectSpecifier *_container;
    NSScriptObjectSpecifier *_child;
    NSString *_key;
    NSScriptClassDescription *_containerClassDescription;
    BOOL _containerIsObjectBeingTested;
    BOOL _containerIsRangeContainerObject;
    char _padding[2];
    NSAppleEventDescriptor *_descriptor;
    long long _error;
}

+ (id)objectSpecifierWithDescriptor:(id)arg1;
- (id)init;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerSpecifier:(id)arg1 key:(id)arg2;
- (void)dealloc;
- (void)setContainerClassDescription:(id)arg1;
- (id)containerClassDescription;
- (void)setContainerSpecifier:(id)arg1;
- (id)containerSpecifier;
- (void)setKey:(id)arg1;
- (id)key;
- (void)setContainerIsObjectBeingTested:(BOOL)arg1;
- (BOOL)containerIsObjectBeingTested;
- (void)setContainerIsRangeContainerObject:(BOOL)arg1;
- (BOOL)containerIsRangeContainerObject;
- (void)setChildSpecifier:(id)arg1;
- (id)childSpecifier;
- (id)keyClassDescription;
- (id)objectsByEvaluatingSpecifier;
- (id)objectsByEvaluatingWithContainers:(id)arg1;
- (long long *)indicesOfObjectsByEvaluatingWithContainer:(id)arg1 count:(long long *)arg2;
- (void)setEvaluationErrorNumber:(long long)arg1;
- (long long)evaluationErrorNumber;
- (id)evaluationErrorSpecifier;
- (id)descriptor;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSScriptToManyRelationshipDescription : NSScriptPropertyDescription
{
    unsigned int _plistAppleEventCode;
    BOOL _isLocationRequiredToCreate;
    BOOL _shouldByDefaultInsertAtBeginning;
}

+ (id)defaultKeyMarker;
- (id)initWithKey:(id)arg1 type:(id)arg2 access:(unsigned long long)arg3 isHidden:(BOOL)arg4 shouldByDefaultInsertAtBeginning:(BOOL)arg5;
- (id)initWithKey:(id)arg1 type:(id)arg2 isReadOnly:(BOOL)arg3 appleEventCode:(unsigned int)arg4 isLocationRequiredToCreate:(BOOL)arg5;
- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2 className:(id)arg3;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (BOOL)matchesPresentableName:(id)arg1;
- (unsigned int)appleEventCode;
- (BOOL)isLocationRequiredToCreate;
- (BOOL)shouldByDefaultInsertAtBeginning;

@end

@interface NSScriptToOneRelationshipDescription : NSScriptAttributeDescription
{
}

- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2 className:(id)arg3;
- (BOOL)shouldBecomeAETEPropertyDeclaration;

@end

@interface NSScriptAttributeDescription : NSScriptPropertyDescription
{
    unsigned int _appleEventCode;
    NSString *_presentableDescription;
    NSObject *_presentableNameOrNames;
    NSArray *_synonymDescriptions;
}

- (id)initWithKey:(id)arg1 type:(id)arg2 access:(unsigned long long)arg3 appleEventCode:(unsigned int)arg4 isHidden:(BOOL)arg5 presentableDescription:(id)arg6 name:(id)arg7 synonymDescriptions:(id)arg8;
- (id)initWithKey:(id)arg1 type:(id)arg2 isReadOnly:(BOOL)arg3 appleEventCode:(unsigned int)arg4 presentableDescription:(id)arg5 nameOrNames:(id)arg6;
- (void)dealloc;
- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2 className:(id)arg3;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (BOOL)matchesPresentableName:(id)arg1;
- (unsigned int)appleEventCode;
- (id)presentableDescription;
- (id)presentableNames;
- (id)firstPresentableName;

@end

@interface NSScriptPropertyDescription : NSObject
{
    NSString *_key;
    NSObject *_typeNameOrDescription;
    unsigned long long _access;
    BOOL _isHidden;
    NSScriptSuiteDescription *_typeSuiteDescription;
}

- (id)initWithKey:(id)arg1 type:(id)arg2 access:(unsigned long long)arg3 isHidden:(BOOL)arg4;
- (void)dealloc;
- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2 className:(id)arg3;
- (void)setTypeDescription:(id)arg1 forReconcilingToSuiteRegistry:(id)arg2;
- (id)fullTypeName;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (BOOL)matchesPresentableName:(id)arg1;
- (id)key;
- (id)typeDescription;
- (unsigned long long)access;
- (BOOL)isHidden;
- (unsigned int)appleEventCode;

@end

@interface NSScriptSDEFParser : NSObject <NSXMLParserDelegate>
{
    NSData *_data;
    NSBundle *_bundle;
    NSDictionary *_descriptionCreationMethodsByElementName;
    NSDictionary *_validSubelementNamesPerArrayElementName;
    NSMutableArray *_elementsBeingParsed;
    NSArray *_suiteDescriptions;
    BOOL _parsesCocoaElements;
}

- (id)initWithDataNoCopy:(id)arg1;
- (void)dealloc;
- (void)setBundle:(id)arg1;
- (void)setParsesCocoaElements:(BOOL)arg1;
- (id)_valueForOptionalCocoaAttributeKey:(id)arg1 fromElement:(id)arg2;
- (id)_valueForRequiredCocoaAttributeKey:(id)arg1 fromElement:(id)arg2;
- (BOOL)_booleanValueForCocoaAttributeKey:(id)arg1 fromElement:(id)arg2;
- (BOOL)_booleanValueForAttributeKey:(id)arg1 fromElement:(id)arg2;
- (unsigned long long)_propertyAccessFromElement:(id)arg1;
- (id)_propertyKeyFromElement:(id)arg1 withName:(id)arg2;
- (id)_typeNameFromElement:(id)arg1 isOptional:(BOOL)arg2;
- (id)_currentSuiteName;
- (id)_createArgumentDescriptionFromElement:(id)arg1;
- (id)_createClassDescriptionFromElement:(id)arg1;
- (id)_createClassExtensionDescriptionFromElement:(id)arg1;
- (id)_createCocoaDescriptionFromElement:(id)arg1;
- (id)_createCommandDescriptionFromElement:(id)arg1;
- (id)_createEnumerationDescriptionFromElement:(id)arg1;
- (id)_createEnumeratorDescriptionFromElement:(id)arg1;
- (id)_createPropertyDescriptionFromElement:(id)arg1;
- (id)_createRecordTypeDescriptionFromElement:(id)arg1;
- (id)_createRespondsToDescriptionFromElement:(id)arg1;
- (id)_createResultDescriptionFromElement:(id)arg1;
- (id)_createSuiteDescriptionFromElement:(id)arg1;
- (id)_createSynonymDescriptionFromElement:(id)arg1;
- (id)_createSuiteDescriptionArrayFromDictionaryElement:(id)arg1;
- (id)_createToManyRelationshipDescriptionFromElement:(id)arg1;
- (id)_createToOneRelationshipDescriptionFromElement:(id)arg1;
- (id)_createTypeDescriptionFromElement:(id)arg1;
- (id)_createValueTypeDescriptionFromElement:(id)arg1;
- (id)suiteDescriptions;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;

@end

@interface NSScriptSDEFElement : NSObject
{
    NSString *_name;
    NSDictionary *_attributes;
    NSMutableDictionary *_descriptionsPerSubelementName;
}

- (id)initWithName:(id)arg1 attributes:(id)arg2;
- (void)dealloc;
- (void)addDescription:(id)arg1 forSubelementName:(id)arg2;
- (id)name;
- (id)attributes;
- (id)valueForOptionalAttributeKey:(id)arg1;
- (id)valueForRequiredAttributeKey:(id)arg1;
- (id)descriptionForOptionalSubelementName:(id)arg1;
- (id)zeroOrMoreDescriptionsForSubelementName:(id)arg1;
- (id)oneOrMoreDescriptionsForSubelementName:(id)arg1;
- (id)description;

@end

@interface NSQuitCommand : NSScriptCommand
{
}

- (unsigned long long)saveOptions;

@end

@interface NSMoveCommand : NSScriptCommand
{
    NSScriptObjectSpecifier *_keySpecifier;
}

- (void)setReceiversSpecifier:(id)arg1;
- (void)dealloc;
- (id)keySpecifier;
- (void)_moveObjectInContainer:(id)arg1 withKey:(id)arg2 atIndex:(long long)arg3 toContainer:(id)arg4 withKey:(id)arg5 atIndex:(long long *)arg6 replace:(BOOL)arg7;
- (void)_moveObjectsInContainer:(id)arg1 toContainer:(id)arg2 withKey:(id)arg3 atIndex:(long long *)arg4 replace:(BOOL)arg5;
- (id)performDefaultImplementation;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSCloseCommand : NSScriptCommand
{
}

- (unsigned long long)saveOptions;

@end

@interface NSScriptSuiteDescription : NSObject
{
    CDStruct_bb59a0ca _properties;
    NSString *_plistSuiteName;
    BOOL _usesUnnamedArguments;
    char _padding[3];
    NSArray *_unreconciledClassSynonymDescriptions;
    NSArray *_unreconciledClassExtensionDescriptions;
    NSDictionary *_cachedClassDescriptionsByName;
    NSDictionary *_cachedCommandDescriptionsByName;
}

- (id)initWithProperties:(const CDStruct_bb59a0ca *)arg1 classExtensionDescriptions:(id)arg2;
- (id)initWithProperties:(const CDStruct_bb59a0ca *)arg1 suiteName:(id)arg2 usesUnnamedArguments:(BOOL)arg3 classSynonymDescriptions:(id)arg4;
- (void)dealloc;
- (void)reconcileSelfToSuiteRegistry:(id)arg1;
- (void)reconcileSubdescriptionsToSuiteRegistry:(id)arg1;
- (id)bundle;
- (id)name;
- (unsigned int)appleEventCode;
- (id)classDescriptions;
- (id)commandDescriptions;
- (id)typeDescriptions;
- (BOOL)isHidden;
- (id)presentableDescription;
- (id)presentableNames;
- (id)firstPresentableName;
- (BOOL)usesUnnamedArguments;
- (id)classDescriptionsByName;
- (id)commandDescriptionsByName;
- (void)setClassDescription:(id)arg1;
- (void)removeClassDescriptions:(id)arg1;
- (void)setCommandDescription:(id)arg1;
- (void)removeCommandDescriptions:(id)arg1;

@end

@interface NSScriptSuiteRegistry : NSObject
{
    BOOL _isLoadingSDEFFiles;
    char _reserved1[3];
    NSMutableSet *_seenBundles;
    NSMutableArray *_suiteDescriptionsBeingCollected;
    NSScriptClassDescription *_classDescriptionNeedingRegistration;
    NSMutableArray *_suiteDescriptions;
    NSScriptCommandDescription *_commandDescriptionNeedingRegistration;
    NSMutableDictionary *_cachedClassDescriptionsByAppleEventCode;
    NSMutableDictionary *_cachedCommandDescriptionsByAppleEventCodes;
    NSDictionary *_cachedSuiteDescriptionsByName;
    NSMutableDictionary *_complexTypeDescriptionsByName;
    NSMutableDictionary *_listTypeDescriptionsByName;
    unsigned int _nextComplexTypeAppleEventCode;
    void *_reserved2[4];
}

+ (id)sharedScriptSuiteRegistry;
+ (void)setSharedScriptSuiteRegistry:(id)arg1;
+ (BOOL)_isScriptingEnabled;
- (void)_registerSuiteDescriptions:(id)arg1;
- (void)_registerOrCollectSuiteDescription:(id)arg1;
- (void)_loadSuiteDescription:(id)arg1;
- (void)_loadSuitesFromSDEFData:(id)arg1 bundle:(id)arg2;
- (void)_loadSuitesForAlreadyLoadedBundles;
- (void)_loadSuitesForJustLoadedBundle:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)loadSuitesFromBundle:(id)arg1;
- (void)loadSuiteWithDictionary:(id)arg1 fromBundle:(id)arg2;
- (id)_newRegisteredSuiteDescriptionForName:(id)arg1;
- (void)registerClassDescription:(id)arg1;
- (void)registerCommandDescription:(id)arg1;
- (id)suiteNames;
- (unsigned int)appleEventCodeForSuite:(id)arg1;
- (id)bundleForSuite:(id)arg1;
- (id)classDescriptionsInSuite:(id)arg1;
- (id)commandDescriptionsInSuite:(id)arg1;
- (id)suiteForAppleEventCode:(unsigned int)arg1;
- (id)classDescriptionWithAppleEventCode:(unsigned int)arg1;
- (id)commandDescriptionWithAppleEventClass:(unsigned int)arg1 andAppleEventCode:(unsigned int)arg2;
- (id)aeteResource:(id)arg1;

@end

@interface NSScriptSynonymDescription : NSObject
{
    NSString *name;
    unsigned int appleEventCode;
    BOOL isHidden;
    unsigned int appleEventClassCode;
}

- (id)initWithName:(id)arg1 appleEventCode:(unsigned int)arg2 isHidden:(BOOL)arg3 appleEventClassCode:(unsigned int)arg4;
- (void)dealloc;

@end

@interface NSScriptFakeObjectTypeDescription : NSScriptObjectTypeDescription
{
    unsigned int _appleEventCode;
}

- (id)initWithAppleEventCode:(unsigned int)arg1;
- (unsigned int)appleEventCode;

@end

@interface NSScriptPropertiesRecordTypeDescription : NSScriptRecordTypeDescription
{
    NSScriptClassDescription *_containerClassDescription;
}

- (id)initWithContainerClassDescription:(id)arg1;
- (void)dealloc;
- (id)name;
- (unsigned int)appleEventCode;
- (id)errorExpectedTypeDescriptor;
- (id)fieldDescriptionForAppleEventCode:(unsigned int)arg1;
- (id)fieldDescriptionForKey:(id)arg1;

@end

@interface NSScriptDeclaredRecordTypeDescription : NSScriptRecordTypeDescription
{
    NSString *_name;
    unsigned int _appleEventCode;
    NSArray *_fieldDescriptions;
    BOOL _isHidden;
    NSString *_presentableDescription;
}

- (id)initWithName:(id)arg1 appleEventCode:(unsigned int)arg2 fieldDescriptions:(id)arg3 isHidden:(BOOL)arg4 presentableDescription:(id)arg5;
- (void)dealloc;
- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2;
- (id)name;
- (unsigned int)appleEventCode;
- (id)fieldDescriptionForAppleEventCode:(unsigned int)arg1;
- (id)fieldDescriptionForKey:(id)arg1;
- (id)fieldDescriptions;
- (BOOL)isHidden;
- (id)presentableDescription;

@end

@interface NSScriptRecordTypeDescription : NSScriptTypeDescription
{
}

- (id)objcClassName;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;
- (id)coercedValue:(id)arg1;
- (id)fieldDescriptionForAppleEventCode:(unsigned int)arg1;
- (id)fieldDescriptionForKey:(id)arg1;

@end

@interface NSScriptRecordFieldDescription : NSObject
{
    NSString *_key;
    NSObject *_typeNameOrDescription;
    unsigned int _appleEventCode;
    BOOL _isHidden;
    NSString *_presentableDescription;
    NSString *_presentableName;
    NSArray *_synonymDescriptions;
}

- (id)initWithKey:(id)arg1 type:(id)arg2 appleEventCode:(unsigned int)arg3 isHidden:(BOOL)arg4 presentableDescription:(id)arg5 name:(id)arg6 synonymDescriptions:(id)arg7;
- (id)initWithKey:(id)arg1 typeDescription:(id)arg2 appleEventCode:(unsigned int)arg3 presentableDescription:(id)arg4 name:(id)arg5;
- (void)dealloc;
- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2 recordTypeName:(id)arg3;
- (id)key;
- (id)typeDescription;
- (unsigned int)appleEventCode;
- (BOOL)isHidden;
- (id)presentableDescription;
- (id)presentableName;
- (id)synonymDescriptions;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;

@end

@interface NSScriptListTypeDescription : NSScriptTypeDescription
{
    NSScriptTypeDescription *_elementTypeDescription;
}

- (id)initWithElementTypeDescription:(id)arg1;
- (void)dealloc;
- (id)name;
- (unsigned int)appleEventCode;
- (BOOL)isList;
- (id)objcClassName;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (id)errorExpectedTypeDescriptor;
- (id)coercedValue:(id)arg1;
- (id)elementTypeDescription;

@end

@interface NSScriptEnumerationDescription : NSScriptValueTypeDescription
{
    NSArray *_enumeratorDescriptions;
}

- (id)initWithName:(id)arg1 appleEventCode:(unsigned int)arg2 enumeratorDescriptions:(id)arg3 isHidden:(BOOL)arg4;
- (id)initWithName:(id)arg1 appleEventCode:(unsigned int)arg2 enumeratorDescriptions:(id)arg3;
- (void)dealloc;
- (BOOL)isEnumeration;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;
- (id)coercedValue:(id)arg1;
- (id)errorExpectedTypeDescriptor;
- (id)enumeratorDescriptions;

@end

@interface NSScriptEnumeratorDescription : NSObject
{
    unsigned int appleEventCode;
    BOOL isHidden;
    NSString *presentableDescription;
    NSString *presentableName;
    NSObject *_value;
    NSArray *_synonymDescriptions;
}

- (id)initWithAppleEventCode:(unsigned int)arg1 value:(id)arg2 isHidden:(BOOL)arg3 presentableDescription:(id)arg4 name:(id)arg5 synonymDescriptions:(id)arg6;
- (id)initWithAppleEventCode:(unsigned int)arg1 presentableDescription:(id)arg2 name:(id)arg3;
- (void)dealloc;
- (id)synonymDescriptions;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (id)value;

@end

@interface NSScriptComplexTypeDescription : NSScriptTypeDescription
{
    unsigned int _appleEventCode;
    NSArray *_alternativeTypeDescriptions;
}

- (id)initWithAppleEventCode:(unsigned int)arg1 alernativeTypeDescriptions:(id)arg2;
- (void)dealloc;
- (id)name;
- (unsigned int)appleEventCode;
- (id)classDescription;
- (id)objcClassName;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (id)coercedValue:(id)arg1;
- (id)errorExpectedTypeDescriptor;
- (id)alternativeTypeDescriptions;

@end

@interface NSScriptValueTypeDescription : NSScriptTypeDescription
{
    NSString *_name;
    unsigned int _appleEventCode;
    NSString *_objcClassName;
    SEL _cachedObjcCreationMethodSelector;
    BOOL _isHidden;
}

- (id)initWithName:(id)arg1 appleEventCode:(unsigned int)arg2 objcClassName:(id)arg3 isHidden:(BOOL)arg4;
- (id)initWithName:(id)arg1 appleEventCode:(unsigned int)arg2 objcClassName:(id)arg3;
- (void)dealloc;
- (id)name;
- (unsigned int)appleEventCode;
- (id)objcClassName;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;
- (BOOL)isHidden;
- (id)_oneWordName;
- (id)_oldStyleOneWordName;
- (SEL)objcCreationMethodSelector2;
- (SEL)objcDescriptorCreationMethodSelector2ForClass:(Class)arg1;

@end

@interface NSScriptObjectTypeDescription : NSScriptTypeDescription
{
    NSScriptClassDescription *_classDescription;
}

- (id)initWithClassDescription:(id)arg1;
- (void)dealloc;
- (id)name;
- (unsigned int)appleEventCode;
- (id)classDescription;
- (id)objcClassName;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;

@end

@interface NSScriptTypeDescription : NSObject
{
}

- (void)reconcileToSuiteRegistry:(id)arg1 suiteName:(id)arg2;
- (id)name;
- (unsigned int)appleEventCode;
- (BOOL)isEnumeration;
- (BOOL)isList;
- (id)classDescription;
- (id)objcClassName;
- (SEL)objcCreationMethodSelector;
- (SEL)objcDescriptorCreationMethodSelector;
- (BOOL)matchesAppleEventCode:(unsigned int)arg1;
- (id)coercedValue:(id)arg1;
- (id)errorExpectedTypeDescriptor;

@end

@interface NSScriptWhoseTest : NSObject <NSCoding>
{
}

- (BOOL)isTrue;
- (id)replacementObjectForPortCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSScriptingAppleEventHandler : NSObject
{
}

+ (id)sharedScriptingAppleEventHandler;
- (void)registerForCommandDescription:(id)arg1;
- (void)handleCommandEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)handleGetAETEEvent:(id)arg1 withReplyEvent:(id)arg2;

@end

@interface NSSelfExpression : NSExpression
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)defaultInstance;
- (id)retain;
- (unsigned long long)retainCount;
- (void)release;
- (id)autorelease;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)_initPrivate;
- (id)init;
- (id)predicateFormat;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;

@end

@interface NSDeserializer : NSObject
{
}

+ (id)deserializePropertyListFromData:(id)arg1 mutableContainers:(BOOL)arg2;
+ (id)deserializePropertyListFromData:(id)arg1 atCursor:(unsigned int *)arg2 mutableContainers:(BOOL)arg3;
+ (id)deserializePropertyListLazilyFromData:(id)arg1 atCursor:(unsigned int *)arg2 length:(unsigned int)arg3 mutableContainers:(BOOL)arg4;

@end

@interface NSSerializer : NSObject
{
}

+ (void)serializePropertyList:(id)arg1 intoData:(id)arg2;
+ (id)serializePropertyList:(id)arg1;

@end

@interface NSCountedSet : NSMutableSet
{
    id _table;
    void *_reserved;
}

- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;
- (void)addObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)allObjects;
- (id)anyObject;
- (id)descriptionWithLocale:(id)arg1;
- (BOOL)intersectsSet:(id)arg1;
- (BOOL)isEqualToSet:(id)arg1;
- (BOOL)isSubsetOfSet:(id)arg1;
- (void)makeObjectsPerformSelector:(SEL)arg1;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (Class)classForCoder;
- (void)intersectSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)removeAllObjects;
- (unsigned long long)countForObject:(id)arg1;
- (id)init;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithObjects:(id *)arg1 count:(unsigned long long)arg2;
- (id)initWithSet:(id)arg1 copyItems:(BOOL)arg2;
- (id)initWithArray:(id)arg1;
- (id)initWithSet:(id)arg1;
- (void)dealloc;

@end

@interface NSCFSet : NSMutableSet
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (Class)classForCoder;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (id)member:(id)arg1;
- (unsigned long long)_trueCount;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumerator;
- (void)addObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeAllObjects;
- (void)getObjects:(id *)arg1;
- (void)minusSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)setSet:(id)arg1;

@end

@interface NSSet5413174 : NSMutableSet
{
    id z;
}

- (unsigned long long)count;
- (id)member:(id)arg1;
- (id)objectEnumerator;
- (void)addObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (id)initWithObjects:(id *)arg1 count:(unsigned long long)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;

@end

@interface NSSetCommand : NSScriptCommand
{
    NSScriptObjectSpecifier *_keySpecifier;
}

- (void)setReceiversSpecifier:(id)arg1;
- (void)dealloc;
- (id)keySpecifier;
- (id)performDefaultImplementation;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSSetExpression : NSExpression
{
    NSExpression *_left;
    NSExpression *_right;
}

- (id)initWithType:(unsigned long long)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)leftExpression;
- (id)rightExpression;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;

@end

@interface NSSimpleCString : NSString
{
    char *bytes;
    int numBytes;
    int _unused;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)length;
- (unsigned long long)cStringLength;
- (unsigned long long)fastestEncoding;
- (unsigned long long)smallestEncoding;
- (BOOL)canBeConvertedToEncoding:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToString:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)hasPrefix:(id)arg1;
- (BOOL)hasSuffix:(id)arg1;
- (unsigned long long)hash;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (id)stringByAppendingString:(id)arg1;
- (void)dealloc;
- (void)finalize;

@end

@interface NSSocketPort : NSPort
{
    void *_receiver;
    void *_connectors;
    void *_loops;
    void *_data;
    id _signature;
    id _delegate;
    id _lock;
    unsigned long long _maxSize;
    unsigned long long _useCount;
    unsigned long long _reserved;
}

+ (void)initialize;
+ (void)_fixNSSocketPortLeak;
+ (BOOL)sendBeforeTime:(double)arg1 streamData:(id)arg2 components:(id)arg3 to:(id)arg4 from:(id)arg5 msgid:(unsigned int)arg6 reserved:(unsigned long long)arg7;
- (BOOL)isValid;
- (void)_incrementUseCount;
- (void)invalidate;
- (void)handleConnDeath:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)signature;
- (int)protocolFamily;
- (int)socketType;
- (int)protocol;
- (int)socket;
- (id)address;
- (id)_initWithRetainedCFSocket:(struct __CFSocket *)arg1 protocolFamily:(int)arg2 socketType:(int)arg3 protocol:(int)arg4;
- (id)init;
- (id)initWithTCPPort:(unsigned short)arg1;
- (id)initRemoteWithTCPPort:(unsigned short)arg1 host:(id)arg2;
- (id)_initRemoteWithSignature:(id)arg1;
- (id)initRemoteWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 address:(id)arg4;
- (id)initWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 address:(id)arg4;
- (id)initWithProtocolFamily:(int)arg1 socketType:(int)arg2 protocol:(int)arg3 socket:(int)arg4;
- (void)dealloc;
- (void)finalize;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)description;
- (struct __CFSocket *)_sendingSocketForPort:(id)arg1 beforeTime:(double)arg2;
- (BOOL)sendBeforeTime:(double)arg1 streamData:(void *)arg2 components:(id)arg3 from:(id)arg4 msgid:(unsigned int)arg5;
- (BOOL)sendBeforeDate:(id)arg1 components:(id)arg2 from:(id)arg3 reserved:(unsigned long long)arg4;
- (BOOL)sendBeforeDate:(id)arg1 msgid:(unsigned long long)arg2 components:(id)arg3 from:(id)arg4 reserved:(unsigned long long)arg5;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)addConnection:(id)arg1 toRunLoop:(id)arg2 forMode:(id)arg3;
- (void)handlePortMessage:(id)arg1;
- (void)_handleMessage:(struct __CFData *)arg1 from:(struct __CFData *)arg2 socket:(struct __CFSocket *)arg3;

@end

@interface NSSortDescriptor : NSObject <NSCoding, NSCopying>
{
    unsigned long long _sortDescriptorFlags;
    NSString *_key;
    SEL _selector;
    id _selectorOrBlock;
}

+ (void)initialize;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(BOOL)arg2;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3;
+ (id)sortDescriptorWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(id)arg3;
+ (id)_defaultSelectorName;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(id)arg3;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setKey:(id)arg1;
- (id)key;
- (void)_setAscending:(BOOL)arg1;
- (BOOL)ascending;
- (SEL)selector;
- (id)comparator;
- (void)_setSelectorName:(id)arg1;
- (id)_selectorName;
- (id)description;
- (long long)compareObject:(id)arg1 toObject:(id)arg2;
- (id)reversedSortDescriptor;
- (BOOL)_isEqualToSortDescriptor:(id)arg1;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSSpecifierTest : NSScriptWhoseTest
{
    unsigned long long _comparisonOperator;
    NSScriptObjectSpecifier *_object1;
    id _object2;
}

- (id)initWithObjectSpecifier:(id)arg1 comparisonOperator:(unsigned long long)arg2 testObject:(id)arg3;
- (void)dealloc;
- (BOOL)_testWithComparisonOperator:(unsigned long long)arg1 object1:(id)arg2 object2:(id)arg3;
- (BOOL)isTrue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;

@end

@interface NSSpellingSubstring : NSString
{
    NSString *_originalString;
    unsigned long long _startingOffset;
}

- (id)initWithOriginalString:(id)arg1 startingOffset:(unsigned long long)arg2;
- (void)dealloc;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;

@end

@interface NSSpellServer : NSObject
{
    id _delegate;
    long long _caseSensitive;
    id _spellServerConnection;
    id _dictionaries;
    NSArray *_learnedDictionaries;
    struct __ssFlags {
        unsigned int delegateLearnsWords:1;
        unsigned int delegateForgetsWords:1;
        unsigned int busy:1;
        unsigned int _reserved:29;
    } _ssFlags;
    void *_reservedSpellServer1;
    void *_reservedSpellServer2;
}

- (id)delegate;
- (void)setDelegate:(id)arg1;
- (BOOL)registerLanguage:(id)arg1 byVendor:(id)arg2;
- (struct __CFSet *)createDictHashTable:(BOOL)arg1;
- (id)openUserDictionary:(id)arg1;
- (void)normalizeUserDictionary:(id)arg1;
- (id)dictionaryInfo:(id)arg1;
- (long long)sizeOfDictionary:(id)arg1;
- (BOOL)isWord:(id)arg1 inDictionaries:(id)arg2 caseSensitive:(BOOL)arg3;
- (BOOL)isWordInUserDictionaries:(id)arg1 caseSensitive:(BOOL)arg2;
- (void)run;
- (BOOL)_learnWord:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (BOOL)_forgetWord:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (BOOL)_isWord:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (bycopy id)_wordsInDictionary:(in bycopy id)arg1;
- (oneway void)_setWords:(in bycopy id)arg1 inDictionary:(in bycopy id)arg2;
- (struct _NSRange)_findMisspelledWordInString:(in id)arg1 language:(in bycopy id)arg2 learnedDictionaries:(in bycopy id)arg3 wordCount:(out long long *)arg4 countOnly:(in char)arg5;
- (struct _NSRange)_checkGrammarInString:(in id)arg1 language:(in bycopy id)arg2 details:(out bycopy id *)arg3;
- (id)autocorrectionDictionaryForLanguage:(id)arg1 isGerman:(char *)arg2;
- (id)correctionForString:(id)arg1 language:(id)arg2;
- (id)checkString:(id)arg1 offset:(unsigned long long)arg2 types:(unsigned long long)arg3 options:(id)arg4 orthography:(id)arg5 wordCount:(long long *)arg6;
- (id)checkString:(id)arg1 offset:(unsigned long long)arg2 types:(unsigned long long)arg3 options:(id)arg4 orthography:(id)arg5 learnedDictionaries:(id)arg6 wordCount:(long long *)arg7;
- (bycopy id)_checkString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthography:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_dataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthography:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_dataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthographyData:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_unkeyedDataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthography:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_unkeyedDataFromCheckingString:(in id)arg1 offset:(in unsigned long long)arg2 types:(in unsigned long long)arg3 options:(in bycopy id)arg4 orthographyData:(in bycopy id)arg5 learnedDictionaries:(in bycopy id)arg6 wordCount:(out long long *)arg7;
- (bycopy id)_suggestGuessesForWord:(in bycopy id)arg1 inLanguage:(in bycopy id)arg2;
- (bycopy id)_suggestCompletionsForPartialWordRange:(struct _NSRange)arg1 inString:(in bycopy id)arg2 language:(in bycopy id)arg3;
- (oneway void)_invalidateDictionary:(in bycopy id)arg1 newTime:(in long long)arg2;

@end

@interface NSDictionaryEntry : NSObject
{
    struct __CFSet *dictionary;
    NSData *data;
    long long size;
    long long mtime;
}

- (void)dealloc;

@end

@interface NSCFOutputStream : NSOutputStream
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)initToMemory;
- (id)initToBuffer:(char *)arg1 capacity:(unsigned long long)arg2;
- (id)initToFileAtPath:(id)arg1 append:(BOOL)arg2;
- (id)initWithURL:(id)arg1 append:(BOOL)arg2;
- (void)open;
- (void)close;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (unsigned long long)streamStatus;
- (id)streamError;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (BOOL)hasSpaceAvailable;
- (BOOL)_setCFClientFlags:(unsigned long long)arg1 callback:(void *)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;

@end

@interface NSCFInputStream : NSInputStream
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (id)initWithData:(id)arg1;
- (id)initWithFileAtPath:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)open;
- (void)close;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (unsigned long long)streamStatus;
- (id)streamError;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (BOOL)hasBytesAvailable;
- (BOOL)_setCFClientFlags:(unsigned long long)arg1 callback:(void *)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;

@end

@interface NSPlaceholderString : NSString
{
}

- (id)autorelease;
- (id)retain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (void)dealloc;
- (id)init;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;
- (id)initWithCString:(const char *)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(CDStruct_19b88e92 [1])arg3;
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;

@end

@interface NSString : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)string;
+ (id)stringWithString:(id)arg1;
+ (id)stringWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithCString:(const char *)arg1;
+ (id)stringWithCString:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
+ (id)stringWithUTF8String:(const char *)arg1;
+ (id)stringWithBytes:(const void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
+ (id)localizedStringWithFormat:(id)arg1;
+ (id)stringWithFormat:(id)arg1;
+ (id)stringWithFormat:(id)arg1 locale:(id)arg2;
+ (id)stringWithContentsOfFile:(id)arg1;
+ (id)stringWithContentsOfURL:(id)arg1;
+ (id)stringWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
+ (id)stringWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
- (unsigned long long)length;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (const unsigned short *)_fastCharacterContents;
- (const char *)_fastCStringContents:(BOOL)arg1;
- (BOOL)_isCString;
- (id)_stringRepresentation;
- (id)quotedStringRepresentation;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqualToString:(id)arg1;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (long long)compare:(id)arg1 options:(unsigned long long)arg2;
- (long long)compare:(id)arg1;
- (long long)caseInsensitiveCompare:(id)arg1;
- (long long)localizedCompare:(id)arg1;
- (long long)localizedCaseInsensitiveCompare:(id)arg1;
- (long long)localizedStandardCompare:(id)arg1;
- (struct _NSRange)rangeOfComposedCharacterSequenceAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfComposedCharacterSequencesForRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3 locale:(id)arg4;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2;
- (struct _NSRange)rangeOfString:(id)arg1;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1 options:(unsigned long long)arg2;
- (struct _NSRange)rangeOfCharacterFromSet:(id)arg1;
- (id)componentsSeparatedByString:(id)arg1;
- (id)componentsSeparatedByCharactersInSet:(id)arg1;
- (id)commonPrefixWithString:(id)arg1 options:(unsigned long long)arg2;
- (BOOL)hasPrefix:(id)arg1;
- (BOOL)hasSuffix:(id)arg1;
- (id)stringByTrimmingCharactersInSet:(id)arg1;
- (id)stringByPaddingToLength:(unsigned long long)arg1 withString:(id)arg2 startingAtIndex:(unsigned long long)arg3;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 options:(unsigned long long)arg3 range:(struct _NSRange)arg4;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;
- (id)stringByReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (void)getCharacters:(unsigned short *)arg1;
- (id)_newSubstringWithRange:(struct _NSRange)arg1 zone:(struct _NSZone *)arg2;
- (id)substringWithRange:(struct _NSRange)arg1;
- (id)substringFromIndex:(unsigned long long)arg1;
- (id)substringToIndex:(unsigned long long)arg1;
- (id)stringByAppendingString:(id)arg1;
- (id)stringByAppendingFormat:(id)arg1;
- (double)doubleValue;
- (float)floatValue;
- (int)intValue;
- (long long)longLongValue;
- (long long)integerValue;
- (BOOL)boolValue;
- (id)uppercaseString;
- (id)lowercaseString;
- (id)capitalizedString;
- (id)decomposedStringWithCanonicalMapping;
- (id)precomposedStringWithCanonicalMapping;
- (id)decomposedStringWithCompatibilityMapping;
- (id)precomposedStringWithCompatibilityMapping;
- (id)stringByFoldingWithOptions:(unsigned long long)arg1 locale:(id)arg2;
- (void)_getBlockStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4 stopAtLineSeparators:(BOOL)arg5;
- (void)getLineStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;
- (void)getParagraphStart:(unsigned long long *)arg1 end:(unsigned long long *)arg2 contentsEnd:(unsigned long long *)arg3 forRange:(struct _NSRange)arg4;
- (struct _NSRange)lineRangeForRange:(struct _NSRange)arg1;
- (struct _NSRange)paragraphRangeForRange:(struct _NSRange)arg1;
- (void)enumerateSubstringsInRange:(struct _NSRange)arg1 options:(unsigned long long)arg2 usingBlock:(id)arg3;
- (void)enumerateLinesUsingBlock:(id)arg1;
- (id)displayableString;
- (BOOL)getExternalRepresentation:(id *)arg1 extendedAttributes:(id *)arg2 forWritingToURLOrPath:(id)arg3 usingEncoding:(unsigned long long)arg4 error:(id *)arg5;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 encoding:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (id)initWithCString:(const char *)arg1 length:(unsigned long long)arg2;
- (id)initWithCString:(const char *)arg1;
- (id)initWithCString:(const char *)arg1 encoding:(unsigned long long)arg2;
- (id)initWithUTF8String:(const char *)arg1;
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)_initWithBytesOfUnknownEncoding:(char *)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 usedEncoding:(unsigned long long *)arg4;
- (id)_initWithDataOfUnknownEncoding:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
- (id)initWithContentsOfFile:(id)arg1 usedEncoding:(unsigned long long *)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 usedEncoding:(unsigned long long *)arg2;
- (id)initWithFormat:(id)arg1;
- (id)initWithFormat:(id)arg1 locale:(id)arg2;
- (id)initWithFormat:(id)arg1 arguments:(CDStruct_19b88e92 [1])arg2;
- (id)initWithCharactersNoCopy:(unsigned short *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCStringNoCopy:(char *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 encoding:(unsigned long long)arg3 freeWhenDone:(BOOL)arg4;
- (id)initWithFormat:(id)arg1 locale:(id)arg2 arguments:(CDStruct_19b88e92 [1])arg3;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSStringPredicateOperator : NSPredicateOperator
{
    unsigned long long _flags;
}

- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_modifierString;
- (unsigned long long)flags;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setOptions:(unsigned long long)arg1;
- (unsigned long long)options;

@end

@interface NSSubqueryExpression : NSExpression
{
    NSExpression *_collection;
    NSExpression *_variableExpression;
    NSPredicate *_subpredicate;
}

- (void)dealloc;
- (id)initWithExpression:(id)arg1 usingIteratorVariable:(id)arg2 predicate:(id)arg3;
- (id)initWithExpression:(id)arg1 usingIteratorExpression:(id)arg2 predicate:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (id)collection;
- (id)variableExpression;
- (id)variable;
- (id)predicate;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (BOOL)_shouldUseParensWithDescription;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;

@end

@interface NSSubstringPredicateOperator : NSStringPredicateOperator
{
    unsigned long long _position;
}

- (SEL)selector;
- (id)initWithOperatorType:(unsigned long long)arg1 modifier:(unsigned long long)arg2 variant:(unsigned long long)arg3 position:(unsigned long long)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)position;
- (BOOL)isEqual:(id)arg1;
- (id)symbol;
- (BOOL)performPrimitiveOperationUsingObject:(id)arg1 andObject:(id)arg2;

@end

@interface NSSymbolicExpression : NSExpression
{
    NSString *_token;
}

- (id)initWithString:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)predicateFormat;
- (id)constantValue;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;

@end

@interface NSSynchronousURLConnectionDelegate : NSObject
{
    NSURLRequest *request;
    NSURLResponse *response;
    NSMutableData *resourceData;
    NSError *error;
    BOOL done;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (id)initWithRequest:(id)arg1;
- (void)dealloc;
- (void)run:(id)arg1;
- (id)response;
- (id)error;
- (id)resourceData;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;

@end

@interface NSConcreteTask : NSTask
{
    NSMutableDictionary *_dictionary;
    BOOL _hasExeced;
    BOOL _isRunning;
    BOOL _hasPostedDeathNotification;
    char _padding[1];
    long long _suspendCount;
    int _pid;
    int _platformExitInfo;
    struct dispatch_source_s *_dsrc;
    NSPort *_tmpPort;
}

- (int)terminationStatus;
- (long long)_platformExitInformation;
- (long long)terminationReason;
- (BOOL)isRunning;
- (void)launch;
- (void)launchWithDictionary:(id)arg1;
- (void)waitUntilExit;
- (void)setArguments:(id)arg1;
- (void)setPreferredArchitectures:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setLaunchPath:(id)arg1;
- (id)launchPath;
- (id)environment;
- (id)arguments;
- (id)preferredArchitectures;
- (id)currentDirectoryPath;
- (void)setTaskDictionary:(id)arg1;
- (id)taskDictionary;
- (void)interrupt;
- (void)terminate;
- (void)terminateTask;
- (BOOL)suspend;
- (BOOL)resume;
- (long long)suspendCount;
- (void)setStandardInput:(id)arg1;
- (void)setStandardOutput:(id)arg1;
- (void)setStandardError:(id)arg1;
- (id)standardInput;
- (id)standardOutput;
- (id)standardError;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (int)_procid;
- (int)processIdentifier;
- (void)setStartsNewProcessGroup:(BOOL)arg1;

@end

@interface NSTask : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)currentTaskDictionary;
+ (id)launchedTaskWithDictionary:(id)arg1;
+ (id)launchedTaskWithLaunchPath:(id)arg1 arguments:(id)arg2;
- (int)terminationStatus;
- (long long)terminationReason;
- (BOOL)isRunning;
- (void)launch;
- (void)setArguments:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setLaunchPath:(id)arg1;
- (void)interrupt;
- (void)terminate;
- (BOOL)suspend;
- (BOOL)resume;
- (long long)suspendCount;
- (int)processIdentifier;
- (id)launchPath;
- (id)environment;
- (id)arguments;
- (id)currentDirectoryPath;
- (void)setStandardInput:(id)arg1;
- (void)setStandardOutput:(id)arg1;
- (void)setStandardError:(id)arg1;
- (id)standardInput;
- (id)standardOutput;
- (id)standardError;
- (id)init;

@end

@interface NSThread : NSObject
{
    id _private;
    unsigned char _bytes[44];
}

+ (BOOL)isMainThread;
+ (BOOL)isMultiThreaded;
+ (double)threadPriority;
+ (BOOL)setThreadPriority:(double)arg1;
+ (void)sleepUntilDate:(id)arg1;
+ (void)sleepForTimeInterval:(double)arg1;
+ (id)callStackReturnAddresses;
+ (id)callStackSymbols;
+ (id)mainThread;
+ (id)currentThread;
+ (void)exit;
+ (BOOL)isDying;
+ (void)detachNewThreadSelector:(SEL)arg1 toTarget:(id)arg2 withObject:(id)arg3;
- (id)runLoop;
- (BOOL)isDying;
- (id)init;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)dealloc;
- (id)threadDictionary;
- (void)setName:(id)arg1;
- (id)name;
- (void)setStackSize:(unsigned long long)arg1;
- (unsigned long long)stackSize;
- (double)threadPriority;
- (void)setThreadPriority:(double)arg1;
- (BOOL)isMainThread;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (BOOL)isCancelled;
- (void)cancel;
- (id)description;
- (void)start;
- (void)main;
- (void)_nq:(id)arg1;

@end

@interface _NSThreadData : NSObject
{
    id dict;
    id name;
    id target;
    SEL selector;
    id argument;
    int seqNum;
    unsigned char qstate;
    unsigned char ____;
    unsigned char cancel;
    unsigned char status;
    id performQ;
    NSMutableDictionary *performD;
    struct _opaque_pthread_attr_t {
        long long __sig;
        char __opaque[56];
    } attr;
    struct _opaque_pthread_t {
        long long _field1;
        struct __darwin_pthread_handler_rec *_field2;
        char _field3[1168];
    } *tid;
}

@end

@interface _NSThreadPerformInfo : NSObject
{
    id target;
    SEL selector;
    id argument;
    NSMutableArray *modes;
    NSCondition *waiter;
    char *signalled;
}

- (void)dealloc;

@end

@interface _NSCallStackArray : NSArray
{
    void **_frames;
    unsigned long long _cnt;
    unsigned long long _ignore;
    char **_pcstrs;
    BOOL _wantSyms;
}

+ (id)arrayWithFrames:(void **)arg1 count:(unsigned long long)arg2 symbols:(BOOL)arg3;
- (void)dealloc;
- (void)finalize;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;

@end

@interface NSCFTimer : NSTimer
{
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)finalize;
- (BOOL)isValid;
- (double)timeInterval;
- (void)invalidate;
- (id)fireDate;
- (void)setFireDate:(id)arg1;
- (id)userInfo;
- (void)fire;
- (unsigned long long)_cfTypeID;
- (id)initWithFireDate:(id)arg1 interval:(double)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 repeats:(BOOL)arg6;
- (id)init;

@end

@interface NSTruePredicate : NSPredicate
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)defaultInstance;
- (id)retain;
- (unsigned long long)retainCount;
- (void)release;
- (id)autorelease;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)predicateFormat;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;

@end

@interface NSURLAuthenticationChallenge : NSObject
{
    NSURLAuthenticationChallengeInternal *_internal;
}

- (id)init;
- (id)initWithProtectionSpace:(id)arg1 proposedCredential:(id)arg2 previousFailureCount:(long long)arg3 failureResponse:(id)arg4 error:(id)arg5 sender:(id)arg6;
- (id)initWithAuthenticationChallenge:(id)arg1 sender:(id)arg2;
- (void)dealloc;
- (id)protectionSpace;
- (id)proposedCredential;
- (long long)previousFailureCount;
- (id)error;
- (id)failureResponse;
- (id)sender;

@end

@interface NSURLAuthenticationChallengeInternal : NSObject
{
    NSURLProtectionSpace *space;
    NSURLCredential *proposedCredential;
    long long previousFailureCount;
    NSURLResponse *failureResponse;
    NSError *error;
    id <NSURLAuthenticationChallengeSender> sender;
}

- (id)initWithProtectionSpace:(id)arg1 proposedCredential:(id)arg2 previousFailureCount:(long long)arg3 failureResponse:(id)arg4 error:(id)arg5 sender:(id)arg6;
- (void)dealloc;

@end

@interface NSURLCache : NSObject
{
    NSURLCacheInternal *_internal;
}

+ (id)sharedURLCache;
+ (void)setSharedURLCache:(id)arg1;
+ (void)_performDiskCacheSync;
+ (void)_diskCacheSyncLoop:(id)arg1;
- (struct _CFCachedURLResponse *)_nscfBridgeURLCacheCopyResponseForRequest:(struct _CFURLRequest *)arg1;
- (void)_nscfBridgeURLCacheStoreCachedResponse:(struct _CFCachedURLResponse *)arg1 forRequest:(struct _CFURLRequest *)arg2;
- (long long)_nscfBridgeURLCacheDiskCapacity;
- (void)_nscfBridgeURLCacheSetMemoryCapacity:(long long)arg1;
- (void)_nscfBridgeURLCacheSetDiskCapacity:(long long)arg1;
- (void)_nscfBridgeURLCacheRemoveCachedResponseForRequest:(id)arg1;
- (void)_nscfBridgeURLCacheRemoveAllCachedResponses;
- (long long)_nscfBridgeURLCacheMemoryCapacity;
- (long long)_nscfBridgeURLCacheCurrentMemoryUsage;
- (long long)_nscfBridgeURLCacheCurrentDiskUsage;
- (id)init;
- (id)initWithExistingSharedCFURLCache:(struct _CFURLCache *)arg1;
- (id)initWithMemoryCapacity:(unsigned long long)arg1 diskCapacity:(unsigned long long)arg2 diskPath:(id)arg3;
- (id)cachedResponseForRequest:(id)arg1;
- (void)storeCachedResponse:(id)arg1 forRequest:(id)arg2;
- (void)removeCachedResponseForRequest:(id)arg1;
- (void)removeAllCachedResponses;
- (unsigned long long)memoryCapacity;
- (unsigned long long)diskCapacity;
- (void)setMemoryCapacity:(unsigned long long)arg1;
- (void)setDiskCapacity:(unsigned long long)arg1;
- (unsigned long long)currentMemoryUsage;
- (unsigned long long)currentDiskUsage;
- (CDStruct_912cb5d2)_cacheStatistics;
- (void)dealloc;
- (struct _CFURLCache *)_CFURLCache;
- (void)_memoryCacheRemoveNodeFromLRUList:(id)arg1;
- (void)_memoryCacheAppendNodeToLRUList:(id)arg1;
- (void)_memoryCacheTouchNode:(id)arg1;
- (void)_memoryCacheTruncate:(unsigned long long)arg1;
- (id)_memoryCacheGet:(id)arg1;
- (void)_memoryCachePut:(id)arg1;
- (void)_memoryCacheRemove:(id)arg1;
- (void)_memoryCacheClear;
- (void)_diskCacheSetSyncTimer;
- (void)_diskCacheSync;
- (void)_diskCacheCreateLRUList:(id)arg1;
- (id)_cacheDirectory;
- (id)_diskCacheDefaultPath;
- (BOOL)_diskCacheCreateDirectory;
- (id)_diskCacheGet:(id)arg1;
- (void)_diskCacheClear;
- (void)_diskCacheTruncate:(unsigned long long)arg1;
- (void)_diskCacheScheduleWrite:(id)arg1;
- (void)_diskCacheExecuteWrite:(id)arg1;
- (void)_diskCacheScheduleRemoval:(id)arg1;
- (void)_diskCacheExecuteRemoval:(id)arg1;

@end

@interface NSURLCacheNode : NSObject
{
    NSCachedURLResponse *cachedResponse;
    NSURLRequest *request;
    NSString *key;
    NSURLCacheNode *prev;
    NSURLCacheNode *next;
    unsigned long long hash;
}

- (id)initWithCachedResponse:(id)arg1 request:(id)arg2 key:(id)arg3;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;

@end

@interface NSURLCacheInternal : NSObject
{
    unsigned long long memoryCapacity;
    unsigned long long diskCapacity;
    NSString *diskPath;
    unsigned long long currentMemoryUsage;
    unsigned long long currentDiskUsage;
    NSMutableDictionary *memoryCache;
    NSLock *memoryCacheGuard;
    NSURLCacheNode *memoryCacheLRUHead;
    NSURLCacheNode *memoryCacheLRUTail;
    unsigned long long memoryCacheItemLengthThreshold;
    NSLock *diskCacheGuard;
    NSMutableDictionary *diskCachePendingWrites;
    NSMutableSet *diskCachePendingRemovals;
    NSURLQueue *diskCachePendingOperations;
    unsigned long long diskCacheItemLengthThreshold;
    double diskCacheTouchTime;
    struct NSLRUFileList *diskCacheLRUList;
    unsigned long long timerResetCount;
    unsigned long long syncSkipCount;
    struct _CFURLCache *_cacheRef;
    BOOL diskCacheLeftoverFilesRemovedFlag;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (void)dealloc;
- (void)finalize;

@end

@interface NSCachedURLResponse : NSObject <NSCoding, NSCopying>
{
    NSCachedURLResponseInternal *_internal;
}

- (id)initWithResponse:(id)arg1 data:(id)arg2;
- (id)initWithResponse:(id)arg1 data:(id)arg2 userInfo:(id)arg3 storagePolicy:(unsigned long long)arg4;
- (id)_initWithCFCachedURLResponse:(struct _CFCachedURLResponse *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)response;
- (id)data;
- (id)userInfo;
- (unsigned long long)storagePolicy;
- (void)dealloc;
- (struct _CFCachedURLResponse *)_CFCachedURLResponse;
- (void)_deallocInternalCFCachedURLResponse;
- (void)_reestablishInternalCFCachedURLResponse:(struct _CFCachedURLResponse *)arg1;

@end

@interface NSCachedURLResponseInternal : NSObject
{
    NSURLResponse *response;
    NSData *data;
    NSDictionary *userInfo;
    unsigned long long storagePolicy;
    struct _CFCachedURLResponse *_cachedURLResponse;
}

- (void)dealloc;

@end

@interface _NSHTTPBodyStreamWrapper : NSObject
{
    NSInputStream *bodyStream;
    id spoolingStream;
    struct __CFString *backupFile;
}

- (id)initWithStream:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)requestStreamForTransmission;
- (id)originalBodyStream;
- (void)setSpoolPath:(id)arg1;
- (id)spoolPath;
- (void)completedSpoolToFile;

@end

@interface NSURLConnection : NSObject
{
    NSURLConnectionInternal *_internal;
}

+ (id)connectionWithRequest:(id)arg1 delegate:(id)arg2;
+ (id)sendSynchronousRequest:(id)arg1 returningResponse:(id *)arg2 error:(id *)arg3;
+ (BOOL)canHandleRequest:(id)arg1;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 usesCache:(BOOL)arg3 maxContentLength:(long long)arg4 startImmediately:(BOOL)arg5;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 priority:(float)arg3 usesCache:(BOOL)arg4;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2 priority:(float)arg3;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2 startImmediately:(BOOL)arg3;
- (void)start;
- (void)cancel;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (id)description;
- (void)dealloc;

@end

@interface NSURLConnectionInternal : NSObject
{
    struct _CFURLConnection *cfConn;
    struct _CFURLAuthChallenge *currCFChallenge;
    NSURLAuthenticationChallenge *currNSChallenge;
    NSURL *url;
    id delegate;
    _Bool shouldSkipCancelOnRelease;
    BOOL connectionActive;
    _NSHTTPBodyStreamWrapper *bodyStreamWrapper;
}

@end

@interface NSURLConnectionHandle : NSURLHandle
{
    NSURLRequest *req;
    NSURLConnection *conn;
}

+ (BOOL)canInitWithURL:(id)arg1;
+ (id)cachedHandleForURL:(id)arg1;
- (id)initWithURL:(id)arg1 cached:(BOOL)arg2;
- (void)dealloc;
- (id)propertyForKey:(id)arg1;
- (id)propertyForKeyIfAvailable:(id)arg1;
- (BOOL)writeProperty:(id)arg1 forKey:(id)arg2;
- (BOOL)writeData:(id)arg1;
- (id)loadInForeground;
- (void)beginLoadInBackground;
- (void)endLoadInBackground;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailLoadingWithError:(id)arg2;

@end

@interface NSURLCredential : NSObject <NSCopying>
{
    NSURLCredentialInternal *_internal;
}

+ (id)credentialWithUser:(id)arg1 password:(id)arg2 persistence:(unsigned long long)arg3;
+ (id)credentialWithIdentity:(struct OpaqueSecIdentityRef *)arg1 certificates:(id)arg2 persistence:(unsigned long long)arg3;
+ (id)credentialForTrust:(struct OpaqueSecTrustRef *)arg1;
- (id)initWithUser:(id)arg1 password:(id)arg2 persistence:(unsigned long long)arg3;
- (id)_initWithCFURLCredential:(struct _CFURLCredential *)arg1;
- (id)initWithIdentity:(struct OpaqueSecIdentityRef *)arg1 certificates:(id)arg2 persistence:(unsigned long long)arg3;
- (void)dealloc;
- (struct _CFURLCredential *)_cfurlcredential;
- (id)user;
- (id)password;
- (BOOL)hasPassword;
- (unsigned long long)persistence;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (struct OpaqueSecIdentityRef *)identity;
- (id)certificates;
- (id)initWithTrust:(struct OpaqueSecTrustRef *)arg1;

@end

@interface NSURLCredentialStorage : NSObject
{
    NSURLCredentialStorageInternal *_internal;
}

+ (id)sharedCredentialStorage;
- (void)dealloc;
- (id)init;
- (id)credentialsForProtectionSpace:(id)arg1;
- (id)allCredentials;
- (void)setCredential:(id)arg1 forProtectionSpace:(id)arg2;
- (void)removeCredential:(id)arg1 forProtectionSpace:(id)arg2;
- (id)defaultCredentialForProtectionSpace:(id)arg1;
- (void)setDefaultCredential:(id)arg1 forProtectionSpace:(id)arg2;

@end

@interface NSGZipDecoder : NSObject <NSURLDownloadDecoder, NSURLDataDecoder>
{
    struct z_stream_s _stream;
    unsigned long long _modificationTime;
    NSString *_filename;
    BOOL _streamInitialized;
    BOOL _decodedHeader;
    BOOL _finishedInflating;
    BOOL _pad;
}

+ (BOOL)decodeDownloadHeader:(id)arg1 headerLength:(int *)arg2 modificationTime:(unsigned long long *)arg3 filename:(id *)arg4;
+ (BOOL)canDecodeDownloadHeaderData:(id)arg1;
+ (id)MIMEType;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (id)decodeData:(id)arg1;
- (BOOL)decodeDownloadData:(id)arg1 dataForkData:(id *)arg2 resourceForkData:(id *)arg3;
- (BOOL)isFinishedDecoding;
- (BOOL)finishDownloadDecoding;
- (id)fileAttributes;
- (id)filenameWithOriginalFilename:(id)arg1;

@end

@interface NSURLConnectionDelegateProxy : NSObject
{
    id delegate;
    unsigned long long flags;
}

- (void)setDelegate:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2 lengthReceived:(long long)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;

@end

@interface NSURLDownload : NSObject
{
    NSURLDownloadInternal *_internal;
}

+ (id)_downloadWithLoadingConnection:(id)arg1 request:(id)arg2 response:(id)arg3 delegate:(id)arg4 proxy:(id)arg5;
+ (id)_downloadWithRequest:(id)arg1 delegate:(id)arg2 directory:(id)arg3;
+ (BOOL)canResumeDownloadDecodedWithEncodingMIMEType:(id)arg1;
+ (BOOL)_isEncodingMIMETypeResumable:(id)arg1;
- (id)init;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (id)_initWithLoadingConnection:(id)arg1 request:(id)arg2 response:(id)arg3 delegate:(id)arg4 proxy:(id)arg5;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 directory:(id)arg3;
- (id)_initWithResumeInformation:(id)arg1 delegate:(id)arg2 path:(id)arg3;
- (id)initWithResumeData:(id)arg1 delegate:(id)arg2 path:(id)arg3;
- (id)_resumeInformation;
- (id)resumeData;
- (void)dealloc;
- (void)cancel;
- (id)request;
- (void)setDestination:(id)arg1 allowOverwrite:(BOOL)arg2;
- (void)_setDeletesFileAfterFailure:(BOOL)arg1;
- (BOOL)_deletesFileAfterFailure;
- (void)setDeletesFileUponFailure:(BOOL)arg1;
- (BOOL)deletesFileUponFailure;
- (id)url;
- (id)_directoryPath;
- (void)_setDelegate:(id)arg1;
- (void)_setDirectoryPath:(id)arg1;
- (void)_setOriginatingURL:(id)arg1;
- (id)_originatingURL;
- (void)releaseDelegate;
- (id)_delegate;
- (BOOL)_downloadActive;
- (void)sendDidStart:(struct _CFURLDownload *)arg1;
- (struct _CFURLRequest *)sendWillSendRequest:(struct _CFURLRequest *)arg1 redirectResponse:(struct _CFURLResponse *)arg2;
- (unsigned char)sendDownloadShouldUseCredentialStorage;
- (void)sendDidReceiveChallenge:(struct _CFURLAuthChallenge *)arg1;
- (void)sendDidReceiveResponse:(struct _CFURLResponse *)arg1;
- (void)sendWillResumeWithResponse:(struct _CFURLResponse *)arg1 startingByte:(unsigned long long)arg2;
- (void)sendDidReceiveData:(long long)arg1;
- (_Bool)sendShouldDecodeDataOfMIMEType:(struct __CFString *)arg1;
- (void)sendDecideDestinationWithSuggestedObjectName:(struct __CFString *)arg1;
- (void)sendDidCreateDestination:(struct __CFURL *)arg1;
- (void)sendDidFinish;
- (void)sendDidFail:(struct __CFError *)arg1;
- (BOOL)sendCanAuthenticateAgainstProtectionSpace:(struct _CFURLProtectionSpace *)arg1;

@end

@interface NSURLDownloadInternal : NSObject
{
    struct _CFURLDownload *cfDownload;
    struct _CFURLAuthChallenge *currCFChallenge;
    NSURLAuthenticationChallenge *currNSChallenge;
    NSURLConnectionDelegateProxy *proxy;
    id delegate;
    BOOL downloadActive;
}

- (void)dealloc;

@end

@interface NSURLFileTypeMappings : NSObject
{
    NSURLFileTypeMappingsInternal *_internal;
}

+ (id)sharedMappings;
- (id)_init;
- (id)_UTIextensionForMIMEType:(id)arg1;
- (id)_UTIMIMETypeForExtension:(id)arg1;
- (id)MIMETypeForExtension:(id)arg1;
- (id)preferredExtensionForMIMEType:(id)arg1;
- (id)extensionsForMIMEType:(id)arg1;

@end

@interface NSURLFileTypeMappingsInternal : NSObject
{
    NSDictionary *MIMETypeToExtensionList;
    NSDictionary *extensionToMIMEType;
}

- (id)init;

@end

@interface NSURLHandle : NSObject
{
    NSMutableArray *_clients;
    id _data;
    unsigned long long _status;
    long long _reserved;
}

+ (void)initialize;
+ (void)registerURLHandleClass:(Class)arg1;
+ (BOOL)canInitWithURL:(id)arg1;
+ (Class)URLHandleClassForURL:(id)arg1;
+ (id)cachedHandleForURL:(id)arg1;
+ (BOOL)_subclassManagesData;
- (id)initWithURL:(id)arg1 cached:(BOOL)arg2;
- (void)dealloc;
- (id)availableResourceData;
- (BOOL)_isCached;
- (BOOL)_prepareToMessageClients;
- (void)_finishMessagingClients:(BOOL)arg1;
- (void)_sendClientMessage:(SEL)arg1 arg1:(id)arg2 arg2:(id)arg3;
- (long long)expectedResourceDataSize;
- (id)resourceData;
- (BOOL)writeData:(id)arg1;
- (unsigned long long)status;
- (id)failureReason;
- (void)addClient:(id)arg1;
- (void)removeClient:(id)arg1;
- (void)loadInBackground;
- (void)cancelLoadInBackground;
- (id)propertyForKey:(id)arg1;
- (id)propertyForKeyIfAvailable:(id)arg1;
- (BOOL)writeProperty:(id)arg1 forKey:(id)arg2;
- (void)flushCachedData;
- (id)loadInForeground;
- (void)beginLoadInBackground;
- (void)endLoadInBackground;
- (void)backgroundLoadDidFailWithReason:(id)arg1;
- (void)didLoadBytes:(id)arg1 loadComplete:(BOOL)arg2;

@end

@interface NSURLHandleProtocol : NSURLProtocol <NSURLHandleClient>
{
    NSURLRequest *origRequest;
    NSURLHandle *handle;
}

+ (BOOL)canInitWithRequest:(id)arg1;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (void)dealloc;
- (void)finalize;
- (void)startLoading;
- (void)stopLoading;
- (void)URLHandle:(id)arg1 resourceDataDidBecomeAvailable:(id)arg2;
- (void)URLHandleResourceDidBeginLoading:(id)arg1;
- (void)URLHandleResourceDidFinishLoading:(id)arg1;
- (void)URLHandleResourceDidCancelLoading:(id)arg1;
- (void)URLHandle:(id)arg1 resourceDidFailLoadingWithReason:(id)arg2;

@end

@interface NSURLHostNameAddressInfo : NSObject
{
    double timestamp;
    struct addrinfo *addressInfo;
}

+ (id)addressInfoForHost:(id)arg1;
+ (void)asyncResolveWithCallbackClient:(id)arg1;
- (id)_initWithAddressInfo:(struct addrinfo *)arg1;
- (struct addrinfo *)addrinfo;
- (double)_timestamp;
- (void)dealloc;
- (void)finalize;

@end

@interface NSURLKeyValuePair : NSObject
{
    id key;
    id value;
    unsigned long long hash;
}

+ (id)pair;
+ (id)pairWithKey:(id)arg1 value:(id)arg2;
- (id)initWithKey:(id)arg1 value:(id)arg2;
- (void)dealloc;
- (void)setKey:(id)arg1;
- (void)setValue:(id)arg1;
- (id)key;
- (id)value;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSURLProtectionSpace : NSObject <NSCopying>
{
    NSURLProtectionSpaceInternal *_internal;
}

- (id)_internalInit;
- (id)initWithHost:(id)arg1 port:(long long)arg2 protocol:(id)arg3 realm:(id)arg4 authenticationMethod:(id)arg5;
- (id)initWithProxyHost:(id)arg1 port:(long long)arg2 type:(id)arg3 realm:(id)arg4 authenticationMethod:(id)arg5;
- (id)_initWithCFURLProtectionSpace:(struct _CFURLProtectionSpace *)arg1;
- (id)init;
- (void)dealloc;
- (id)realm;
- (BOOL)receivesCredentialSecurely;
- (BOOL)isProxy;
- (id)host;
- (long long)port;
- (id)proxyType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)authenticationMethod;
- (id)distinguishedNames;
- (struct OpaqueSecTrustRef *)serverTrust;
- (id)protocol;
- (struct _CFURLProtectionSpace *)_cfurlprtotectionspace;

@end

@interface NSURLProtocol : NSObject
{
    NSURLProtocolInternal *_internal;
}

+ (BOOL)canInitWithRequest:(id)arg1;
+ (id)_canonicalRequestForRequest:(id)arg1 allowCF:(BOOL)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (BOOL)_requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2 allowCF:(BOOL)arg3;
+ (BOOL)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (BOOL)registerClass:(Class)arg1;
+ (void)unregisterClass:(Class)arg1;
+ (id)_protocolWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3 allowCF:(BOOL)arg4;
+ (id)propertyForKey:(id)arg1 inRequest:(id)arg2;
+ (void)setProperty:(id)arg1 forKey:(id)arg2 inRequest:(id)arg3;
+ (void)removePropertyForKey:(id)arg1 inRequest:(id)arg2;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (id)client;
- (id)request;
- (id)cachedResponse;
- (void)dealloc;
- (void)startLoading;
- (void)stopLoading;

@end

@interface NSURLProtocolInternal : NSObject
{
    id <NSURLProtocolClient> client;
    NSURLRequest *request;
    NSCachedURLResponse *cachedResponse;
    NSLock *mutex;
}

- (id)init;
- (void)dealloc;

@end

@interface NSURLQueue : NSObject
{
    unsigned long long count;
    NSURLQueueNode *head;
    NSURLQueueNode *tail;
    id monitor;
    BOOL waitOnTake;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

+ (id)newNode;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)put:(id)arg1;
- (id)take;
- (id)peek;
- (id)peekAt:(unsigned long long)arg1;
- (BOOL)remove:(id)arg1;
- (void)clear;
- (long long)indexOf:(id)arg1;
- (BOOL)isEmpty;
- (unsigned long long)count;
- (BOOL)waitOnTake;
- (void)setWaitOnTake:(BOOL)arg1;

@end

@interface NSURLQueueNode : NSObject
{
    id object;
    NSURLQueueNode *next;
}

@end

@interface NSHTTPURLRequestParameters : NSObject
{
    NSString *method;
    NSMutableDictionary *fields;
    NSArray *extraCookies;
    NSData *data;
    unsigned long long pageNotFoundCacheLifetime;
    BOOL shouldHandleCookies;
    BOOL _pad1;
    BOOL _pad2;
    BOOL _pad3;
}

- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NSMutableURLRequest : NSURLRequest
{
}

- (void)setURL:(id)arg1;
- (void)setCachePolicy:(unsigned long long)arg1;
- (void)setTimeoutInterval:(double)arg1;
- (void)setMainDocumentURL:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSURLRequest : NSObject <NSCoding, NSCopying, NSMutableCopying>
{
    NSURLRequestInternal *_internal;
}

+ (id)requestWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 timeoutInterval:(double)arg3;
+ (id)requestWithURL:(id)arg1;
+ (void)setDefaultTimeoutInterval:(double)arg1;
+ (double)defaultTimeoutInterval;
- (id)initWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 timeoutInterval:(double)arg3;
- (id)_initWithCFURLRequest:(struct _CFURLRequest *)arg1;
- (id)initWithURL:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct _CFURLRequest *)_CFURLRequest;
- (id)URL;
- (unsigned long long)cachePolicy;
- (double)timeoutInterval;
- (id)mainDocumentURL;
- (void)dealloc;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)_copyReplacingURLWithURL:(id)arg1;
- (BOOL)_URLHasScheme:(id)arg1;
- (id)_propertyForKey:(id)arg1;
- (void)_setProperty:(id)arg1 forKey:(id)arg2;
- (void)_removePropertyForKey:(id)arg1;

@end

@interface NSURLRequestInternal : NSObject
{
    struct _CFURLRequest *request;
}

- (void)dealloc;

@end

@interface NSHTTPURLResponse : NSURLResponse
{
    NSHTTPURLResponseInternal *_httpInternal;
}

+ (id)localizedStringForStatusCode:(long long)arg1;
+ (BOOL)isErrorStatusCode:(long long)arg1;
- (id)_initWithCFURLResponse:(struct _CFURLResponse *)arg1;
- (id)initWithURL:(id)arg1 statusCode:(long long)arg2 headerFields:(id)arg3 requestTime:(double)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)allHeaderFields;
- (long long)statusCode;
- (void)dealloc;
- (id)_peerCertificateChain;
- (id)_clientCertificateChain;
- (id)_clientCertificateState;

@end

@interface NSHTTPURLResponseInternal : NSObject <NSCoding>
{
    BOOL isMixedReplace;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface NSURLResponse : NSObject <NSCoding, NSCopying>
{
    NSURLResponseInternal *_internal;
}

+ (id)_responseWithCFURLResponse:(struct _CFURLResponse *)arg1;
- (id)_initWithCFURLResponse:(struct _CFURLResponse *)arg1;
- (id)initWithURL:(id)arg1 MIMEType:(id)arg2 expectedContentLength:(long long)arg3 textEncodingName:(id)arg4;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct _CFURLResponse *)_CFURLResponse;
- (id)URL;
- (id)MIMEType;
- (id)textEncodingName;
- (long long)expectedContentLength;
- (id)suggestedFilename;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSURLResponseInternal : NSObject
{
    struct _CFURLResponse *response;
}

- (id)initWithURLResponse:(struct _CFURLResponse *)arg1;
- (void)dealloc;

@end

@interface NSURLUploadAuthenticationChallenge : NSURLAuthenticationChallenge
{
    NSURLUploadAuthenticationChallengeInternal *_uploadChallengeInternal;
}

- (id)upload;

@end

@interface NSURLUpload : NSObject
{
    NSURLUploadPrivate *_private;
}

- (id)initWithSource:(id)arg1 destination:(id)arg2 delegate:(id)arg3;
- (void)cancel;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;

@end

@interface _NSUndoStack : NSObject
{
    unsigned long long _max;
    unsigned long long _count;
    unsigned long long _nestingLevel;
    _NSUndoObject *_head;
}

- (void)_removeBottom;
- (id)init;
- (void)dealloc;
- (unsigned long long)max;
- (unsigned long long)count;
- (void)setMax:(unsigned long long)arg1;
- (void)push:(id)arg1;
- (id)popUndoObject;
- (id)_beginMark;
- (void)setGroupIdentifier:(id)arg1;
- (id)groupIdentifier;
- (id)topUndoObject;
- (void)markBegin;
- (void)markEnd;
- (BOOL)popAndInvoke;
- (unsigned long long)nestingLevel;
- (void)removeAllObjects;
- (void)removeAllObjectsWithTarget:(id)arg1;
- (void)removeObject:(id)arg1;
- (id)description;

@end

@interface _NSUndoInvocation : _NSUndoObject
{
    NSInvocation *_invocation;
}

- (id)initWithTarget:(id)arg1 invocation:(id)arg2;
- (void)invoke;
- (void)dealloc;
- (id)description;

@end

@interface _NSUndoLightInvocation : _NSUndoObject
{
    SEL _selector;
    id _arg;
}

- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)invoke;
- (void)dealloc;
- (id)_argument;
- (id)description;

@end

@interface _NSUndoEndMark : _NSUndoObject
{
}

- (BOOL)isEndMark;
- (id)description;

@end

@interface _NSUndoBeginMark : _NSUndoObject
{
    id _groupIdentifier;
}

- (void)dealloc;
- (void)setGroupIdentifier:(id)arg1;
- (id)groupIdentifier;
- (BOOL)isBeginMark;
- (id)description;

@end

@interface _NSUndoObject : NSObject
{
    _NSUndoObject *next;
    _NSUndoObject *previous;
    id _target;
}

- (id)init;
- (id)initWithTarget:(id)arg1;
- (BOOL)isBeginMark;
- (BOOL)isEndMark;
- (void)invoke;
- (id)target;

@end

@interface NSUndoManager : NSObject
{
    id _undoStack;
    id _redoStack;
    NSArray *_runLoopModes;
    long long _disabled;
    struct {
        unsigned int undoing:1;
        unsigned int redoing:1;
        unsigned int registeredForCallback:1;
        unsigned int postingCheckpointNotification:1;
        unsigned int groupsByEvent:1;
        unsigned int reserved:27;
    } _flags;
    id _target;
    id _proxy;
    void *_NSUndoManagerReserved1;
    void *_NSUndoManagerReserved2;
}

- (id)init;
- (void)dealloc;
- (void)_scheduleAutomaticTopLevelGroupEnding;
- (void)_cancelAutomaticTopLevelGroupEnding;
- (void)_prepareEventGrouping;
- (void)_postCheckpointNotification;
- (void)beginUndoGrouping;
- (long long)groupingLevel;
- (BOOL)_endUndoGroupRemovingIfEmpty:(BOOL)arg1;
- (void)endUndoGrouping;
- (void)disableUndoRegistration;
- (void)enableUndoRegistration;
- (BOOL)isUndoRegistrationEnabled;
- (BOOL)groupsByEvent;
- (void)setGroupsByEvent:(BOOL)arg1;
- (void)setLevelsOfUndo:(unsigned long long)arg1;
- (unsigned long long)levelsOfUndo;
- (void)setRunLoopModes:(id)arg1;
- (id)runLoopModes;
- (void)undo;
- (void)undoNestedGroup;
- (void)redo;
- (BOOL)canUndo;
- (BOOL)canRedo;
- (BOOL)isUndoing;
- (BOOL)isRedoing;
- (void)removeAllActions;
- (void)removeAllActionsWithTarget:(id)arg1;
- (id)prepareWithInvocationTarget:(id)arg1;
- (id)_methodSignatureForTargetSelector:(SEL)arg1;
- (void)_registerUndoObject:(id)arg1;
- (void)_forwardTargetInvocation:(id)arg1;
- (void)registerUndoWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)registerUndoWithTarget:(id)arg1 selector:(SEL)arg2 arguments:(id *)arg3 argumentCount:(unsigned long long)arg4;
- (id)undoActionName;
- (id)redoActionName;
- (void)_setGroupIdentifier:(id)arg1;
- (void)setActionName:(id)arg1;
- (id)undoMenuItemTitle;
- (id)redoMenuItemTitle;
- (id)undoMenuTitleForUndoActionName:(id)arg1;
- (id)redoMenuTitleForUndoActionName:(id)arg1;

@end

@interface NSUndoManagerProxy : NSProxy
{
    NSUndoManager *_manager;
}

- (id)initWithManager:(id)arg1;
- (id)retain;
- (void)release;
- (void)superRelease;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

@interface NSUniqueIDSpecifier : NSScriptObjectSpecifier
{
    id _uniqueID;
}

- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3 uniqueID:(id)arg4;
- (id)_initFromRecord:(id)arg1;
- (void)dealloc;
- (void)setUniqueID:(id)arg1;
- (id)uniqueID;
- (id)_specifiedValueInContainer:(id)arg1;
- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSPlaceholderNumber : NSPlaceholderValue
{
}

- (id)init;
- (id)initWithChar:(BOOL)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithInteger:(long long)arg1;
- (id)initWithUnsignedInteger:(unsigned long long)arg1;
- (id)initWithLong:(long long)arg1;
- (id)initWithUnsignedLong:(unsigned long long)arg1;
- (id)initWithLongLong:(long long)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithFloat:(float)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithBool:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSPlaceholderValue : NSNumber
{
    struct _NSZone *zoneForInstance;
}

- (id)autorelease;
- (id)retain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (void)dealloc;
- (void)finalize;
- (id)init;
- (id)initWithBytes:(const void *)arg1 objCType:(const char *)arg2;
- (id)initWithCoder:(id)arg1;
- (const char *)objCType;
- (void)getValue:(void *)arg1;

@end

@interface NSNumber : NSValue
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)numberWithChar:(BOOL)arg1;
+ (id)numberWithUnsignedChar:(unsigned char)arg1;
+ (id)numberWithShort:(short)arg1;
+ (id)numberWithUnsignedShort:(unsigned short)arg1;
+ (id)numberWithInt:(int)arg1;
+ (id)numberWithUnsignedInt:(unsigned int)arg1;
+ (id)numberWithInteger:(long long)arg1;
+ (id)numberWithUnsignedInteger:(unsigned long long)arg1;
+ (id)numberWithLong:(long long)arg1;
+ (id)numberWithUnsignedLong:(unsigned long long)arg1;
+ (id)numberWithLongLong:(long long)arg1;
+ (id)numberWithUnsignedLongLong:(unsigned long long)arg1;
+ (id)numberWithFloat:(float)arg1;
+ (id)numberWithDouble:(double)arg1;
+ (id)numberWithBool:(BOOL)arg1;
- (BOOL)boolValue;
- (long long)integerValue;
- (unsigned long long)unsignedIntegerValue;
- (BOOL)charValue;
- (unsigned char)unsignedCharValue;
- (short)shortValue;
- (unsigned short)unsignedShortValue;
- (int)intValue;
- (unsigned int)unsignedIntValue;
- (long long)longValue;
- (unsigned long long)unsignedLongValue;
- (double)doubleValue;
- (float)floatValue;
- (long long)longLongValue;
- (unsigned long long)unsignedLongLongValue;
- (long long)compare:(id)arg1;
- (BOOL)isEqualToNumber:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)descriptionWithLocale:(id)arg1;
- (id)description;
- (id)stringValue;
- (Class)classForCoder;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithInteger:(long long)arg1;
- (id)initWithUnsignedInteger:(unsigned long long)arg1;
- (id)initWithLong:(long long)arg1;
- (id)initWithUnsignedLong:(unsigned long long)arg1;
- (id)initWithLongLong:(long long)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithFloat:(float)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithBool:(BOOL)arg1;

@end

@interface NSValue : NSObject <NSCopying, NSCoding>
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)value:(const void *)arg1 withObjCType:(const char *)arg2;
+ (id)valueWithBytes:(const void *)arg1 objCType:(const char *)arg2;
+ (id)valueWithNonretainedObject:(id)arg1;
+ (id)valueWithPointer:(const void *)arg1;
+ (id)valueWithPoint:(struct CGPoint)arg1;
+ (id)valueWithSize:(struct CGSize)arg1;
+ (id)valueWithRect:(struct CGRect)arg1;
+ (id)valueWithRange:(struct _NSRange)arg1;
- (id)init;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqualToValue:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)nonretainedObjectValue;
- (void *)pointerValue;
- (struct CGPoint)pointValue;
- (struct CGSize)sizeValue;
- (struct CGRect)rectValue;
- (struct _NSRange)rangeValue;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBytes:(const void *)arg1 objCType:(const char *)arg2;

@end

@interface NSWeakPointerValue : NSValue
{
    void *_value;
    void *_weakValue;
}

- (id)initWithPointer:(void *)arg1;
- (BOOL)isEqualToValue:(id)arg1;
- (unsigned long long)hash;
- (const char *)objCType;
- (void)getValue:(void *)arg1;
- (id)nonretainedObjectValue;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSConcreteValue : NSValue
{
    unsigned long long _specialFlags;
    void *typeInfo;
}

+ (void)initialize;
- (void)getValue:(void *)arg1;
- (const char *)objCType;
- (const void *)_value;
- (BOOL)isEqualToValue:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;

@end

@interface _NSKeyedUnarchiveFromDataTransformer : _NSSharedValueTransformer
{
}

- (id)transformedValue:(id)arg1;
- (id)reverseTransformedValue:(id)arg1;
- (id)description;

@end

@interface _NSUnarchiveFromDataTransformer : _NSSharedValueTransformer
{
}

- (id)transformedValue:(id)arg1;
- (id)reverseTransformedValue:(id)arg1;
- (id)description;

@end

@interface _NSIsNotNilTransformer : _NSNegateBooleanTransformer
{
}

+ (BOOL)supportsReverseTransformation;
- (id)transformedValue:(id)arg1;
- (id)description;

@end

@interface _NSIsNilTransformer : _NSNegateBooleanTransformer
{
}

+ (BOOL)supportsReverseTransformation;
- (id)transformedValue:(id)arg1;
- (id)description;

@end

@interface _NSNegateBooleanTransformer : _NSSharedValueTransformer
{
}

+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;
- (id)description;
- (BOOL)_isBooleanTransformer;

@end

@interface _NSSharedValueTransformer : NSValueTransformer
{
}

- (id)retain;
- (id)autorelease;
- (oneway void)release;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)_isBooleanTransformer;

@end

@interface NSValueTransformer : NSObject
{
}

+ (id)_transformerRegistry;
+ (void)setValueTransformer:(id)arg1 forName:(id)arg2;
+ (id)valueTransformerForName:(id)arg1;
+ (id)valueTransformerNames;
+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)transformedValue:(id)arg1;
- (id)reverseTransformedValue:(id)arg1;

@end

@interface NSVariableAssignmentExpression : NSExpression
{
    NSVariableExpression *_assignmentVariable;
    NSExpression *_subexpression;
}

- (void)dealloc;
- (id)initWithAssignmentVariable:(id)arg1 expression:(id)arg2;
- (id)initWithAssignmentExpression:(id)arg1 expression:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)assignmentVariable;
- (id)variable;
- (id)subexpression;
- (id)predicateFormat;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;

@end

@interface NSVariableExpression : NSExpression
{
    NSString *_variable;
}

- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)predicateFormat;
- (id)variable;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;

@end

@interface NSWhoseSpecifier : NSScriptObjectSpecifier
{
    NSScriptWhoseTest *_test;
    unsigned long long _startSubelementIdentifier;
    long long _startSubelementIndex;
    unsigned long long _endSubelementIdentifier;
    long long _endSubelementIndex;
}

- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3;
- (id)initWithContainerClassDescription:(id)arg1 containerSpecifier:(id)arg2 key:(id)arg3 test:(id)arg4;
- (BOOL)_setStartSubelementFromDescriptor:(id)arg1;
- (BOOL)_setEndSubelementFromDescriptor:(id)arg1;
- (id)_initFromTestRecord:(id)arg1;
- (id)_initFromAbsolutePositionRecord:(id)arg1;
- (id)_initFromRangeRecord:(id)arg1;
- (id)_initFromRecord:(id)arg1;
- (void)dealloc;
- (void)setTest:(id)arg1;
- (id)test;
- (void)setStartSubelementIdentifier:(unsigned long long)arg1;
- (void)setStartSubelementIndex:(long long)arg1;
- (void)setEndSubelementIdentifier:(unsigned long long)arg1;
- (void)setEndSubelementIndex:(long long)arg1;
- (unsigned long long)startSubelementIdentifier;
- (long long)startSubelementIndex;
- (unsigned long long)endSubelementIdentifier;
- (long long)endSubelementIndex;
- (id)_indexesOfPassingObjectsInContainer:(id)arg1;
- (unsigned long long)_objectIndexForSubelementIdentifier:(unsigned long long)arg1 subelementIndex:(long long)arg2 fromIndexes:(id)arg3;
- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_specifiedIndexesOfObjectsInContainer:(id)arg1;
- (BOOL)_specifiesSingleIndexedObjectPerContainer;
- (id)_subsetDescription;
- (id)_simpleDescription;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface NSXMLAttributeDeclaration : NSXMLDTDNode
{
    NSString *_elementName;
    unsigned long long _defaultType;
    NSMutableArray *_enumerations;
}

- (void)dealloc;
- (void)setElementName:(id)arg1;
- (id)elementName;
- (void)setDefaultType:(unsigned long long)arg1;
- (unsigned long long)defaultType;
- (void)addEnumeration:(id)arg1;
- (id)enumerations;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (void)_addToLibxml2TreeRepresentationWithDoc:(struct _xmlDoc *)arg1 dtd:(struct _xmlDtd *)arg2 context:(struct _xmlValidCtxt *)arg3;
- (BOOL)isEqual:(id)arg1;

@end

@interface NSXMLChildren : NSMutableArray
{
    NSMutableArray *_array;
    BOOL _isStale;
}

- (void)dealloc;
- (id)init;
- (id)initWithArray:(id)arg1;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)addObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeLastObject;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)addObjectsFromArray:(id)arg1;
- (void)exchangeObjectAtIndex:(unsigned long long)arg1 withObjectAtIndex:(unsigned long long)arg2;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)removeObject:(id)arg1;
- (void)removeObjectIdenticalTo:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)removeObjectIdenticalTo:(id)arg1;
- (void)removeObjectsFromIndices:(unsigned long long *)arg1 numIndices:(unsigned long long)arg2;
- (void)removeObjectsInArray:(id)arg1;
- (void)removeObjectsInRange:(struct _NSRange)arg1;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjectsFromArray:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjectsFromArray:(id)arg2;
- (void)setArray:(id)arg1;
- (void)sortUsingFunction:(void *)arg1 context:(void *)arg2;
- (void)sortUsingSelector:(SEL)arg1;
- (void)insertObjects:(id)arg1 atIndexes:(id)arg2;
- (void)removeObjectsAtIndexes:(id)arg1;
- (void)replaceObjectsAtIndexes:(id)arg1 withObjects:(id)arg2;
- (id)reallyAddObject:(id)arg1;
- (id)reallyInsertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)reallyRemoveObjectAtIndex:(unsigned long long)arg1;
- (id)reallyReplaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (id)reallyRemoveObject:(id)arg1;
- (id)reallyRemoveAllObjects;
- (void)makeStale;

@end

@interface NSXMLNSArrayTransformerName : NSValueTransformer
{
}

+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)transformedValue:(id)arg1;

@end

@interface NSXMLNSDateTransformerName : NSValueTransformer
{
}

+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)transformedValue:(id)arg1;

@end

@interface NSXMLNSDataTransformerName : NSValueTransformer
{
}

+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)transformedValue:(id)arg1;

@end

@interface NSXMLNSURLTransformerName : NSValueTransformer
{
}

+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)transformedValue:(id)arg1;

@end

@interface NSXMLNSNumberTransformerName : NSValueTransformer
{
    NSNumberFormatter *_formatter;
}

+ (Class)transformedValueClass;
+ (BOOL)allowsReverseTransformation;
- (id)init;
- (id)_oldTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;
- (void)dealloc;

@end

@interface NSXMLContext : NSObject
{
}

+ (id)defaultNamespaceForPrefix:(id)arg1;
+ (id)defaultNamespaceForURI:(id)arg1;
+ (BOOL)isEmptyHTMLElement:(id)arg1;
+ (BOOL)isSingleAttribute:(id)arg1;
+ (id)stringForObjectValue:(id)arg1;
+ (id)normalizeWhitespace:(id)arg1;
+ (void)_initDefaultNamespaces;
+ (void)_initEmptyHTMLNames;
+ (void)_initSingleAttributes;
+ (void)_initValueTransformers;

@end

@interface NSXMLDTD : NSXMLNode
{
    NSString *_name;
    NSString *_publicID;
    NSString *_systemID;
    NSArray *_children;
    BOOL _childrenHaveMutated;
    unsigned char _padding3[3];
    NSMutableDictionary *_entities;
    NSMutableDictionary *_elements;
    NSMutableDictionary *_notations;
    NSMutableDictionary *_attributes;
    NSString *_original;
    BOOL _modified;
    unsigned char _padding2[3];
}

+ (void)_initializeDTD:(id)arg1 fromTidyNode:(struct _TidyNode *)arg2;
+ (id)predefinedEntityDeclarationForName:(id)arg1;
+ (void)_initializePredefinedEntities;
+ (id)_nodeFromLibXML2Node:(void *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (void)setName:(id)arg1;
- (id)name;
- (void)setPublicID:(id)arg1;
- (id)publicID;
- (void)setSystemID:(id)arg1;
- (id)systemID;
- (id)children;
- (unsigned long long)childCount;
- (void)_setDTDString:(id)arg1;
- (id)_DTDString;
- (void)_setModified:(BOOL)arg1;
- (id)childAtIndex:(unsigned long long)arg1;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertChildren:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeChildAtIndex:(unsigned long long)arg1;
- (void)setChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (void)replaceChildAtIndex:(unsigned long long)arg1 withNode:(id)arg2;
- (unsigned long long)countOfChildren;
- (id)objectInChildrenAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildrenAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromChildrenAtIndex:(unsigned long long)arg1;
- (void)replaceObjectInChildrenAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (id)entityDeclarationForName:(id)arg1;
- (id)notationDeclarationForName:(id)arg1;
- (id)elementDeclarationForName:(id)arg1;
- (id)attributeDeclarationForName:(id)arg1 elementName:(id)arg2;
- (void)_internalXMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)canonicalXMLStringPreservingComments:(BOOL)arg1;
- (id)_elementAttributeRelationship;
- (void)_renameChild:(id)arg1 toName:(id)arg2;
- (void)_addLibxml2TreeRepresentationToDoc:(struct _xmlDoc *)arg1 context:(struct _xmlValidCtxt *)arg2;

@end

@interface NSXMLDTDNode : NSXMLNode
{
    unsigned long long _DTDKind;
    NSString *_name;
    NSString *_notationName;
    NSString *_publicID;
    NSString *_systemID;
}

+ (id)_nodeFromLibXML2Node:(void *)arg1;
- (void)dealloc;
- (id)initWithKind:(unsigned long long)arg1;
- (id)initWithXMLString:(id)arg1;
- (void)setDTDKind:(unsigned long long)arg1;
- (unsigned long long)DTDKind;
- (BOOL)isExternal;
- (void)setPublicID:(id)arg1;
- (id)publicID;
- (void)setSystemID:(id)arg1;
- (id)systemID;
- (void)setNotationName:(id)arg1;
- (id)notationName;
- (void)setName:(id)arg1;
- (id)name;
- (void)setStringValue:(id)arg1;
- (void)setObjectValue:(id)arg1;
- (id)XPath;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)canonicalXMLStringPreservingComments:(BOOL)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)_addToLibxml2TreeRepresentationWithDoc:(struct _xmlDoc *)arg1 dtd:(struct _xmlDtd *)arg2 context:(struct _xmlValidCtxt *)arg3;

@end

@interface NSXMLDocument : NSXMLNode
{
    NSString *_encoding;
    NSString *_version;
    NSXMLDTD *_docType;
    NSArray *_children;
    BOOL _childrenHaveMutated;
    BOOL _standalone;
    unsigned char _padding3[2];
    NSXMLElement *_rootElement;
    NSString *_URI;
    NSString *_MIMEType;
    unsigned long long _fidelityMask;
    unsigned long long _contentKind;
}

+ (void)_setInstancesShouldLoadExternalEntities:(BOOL)arg1;
+ (BOOL)_instancesShouldLoadExternalEntities;
+ (void)_setXMLTagsAllowableInHTML:(id)arg1;
+ (Class)replacementClassForClass:(Class)arg1;
+ (void)_loadXSLT;
+ (id)_nodeFromLibXML2Node:(void *)arg1;
+ (id)_contentsOfHTMLData:(id)arg1 encoding:(id)arg2 strippingTagsSeparatedByString:(id)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithXMLString:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)_initWithData:(id)arg1 encoding:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)initWithData:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithRootElement:(id)arg1;
- (id)_tidyWithData:(id)arg1 error:(id *)arg2 isXML:(BOOL)arg3 detectedEncoding:(unsigned int)arg4;
- (void)setCharacterEncoding:(id)arg1;
- (id)characterEncoding;
- (void)setVersion:(id)arg1;
- (id)version;
- (void)setURI:(id)arg1;
- (id)URI;
- (void)setStandalone:(BOOL)arg1;
- (BOOL)isStandalone;
- (void)setDocumentContentKind:(unsigned long long)arg1;
- (unsigned long long)documentContentKind;
- (void)setMIMEType:(id)arg1;
- (id)MIMEType;
- (void)setDTD:(id)arg1;
- (id)DTD;
- (void)setRootElement:(id)arg1;
- (id)rootElement;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (id)stringValue;
- (void)setStringValue:(id)arg1 resolvingEntities:(BOOL)arg2;
- (id)children;
- (unsigned long long)childCount;
- (id)childAtIndex:(unsigned long long)arg1;
- (id)XPath;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertChildren:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeChildAtIndex:(unsigned long long)arg1;
- (void)setChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (void)replaceChildAtIndex:(unsigned long long)arg1 withNode:(id)arg2;
- (unsigned long long)countOfChildren;
- (id)objectInChildrenAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildrenAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromChildrenAtIndex:(unsigned long long)arg1;
- (void)replaceObjectInChildrenAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (id)XMLStringWithOptions:(unsigned long long)arg1;
- (id)canonicalXMLStringPreservingComments:(BOOL)arg1;
- (id)_canonicalXMLStringPreservingComments:(BOOL)arg1 namespaceString:(id)arg2 relationships:(id)arg3;
- (id)XMLData;
- (id)XMLDataWithOptions:(unsigned long long)arg1;
- (id)objectByApplyingXSLT:(id)arg1 error:(id *)arg2;
- (id)objectByApplyingXSLTAtURL:(id)arg1 error:(id *)arg2;
- (id)objectByApplyingXSLT:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)objectByApplyingXSLTString:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)objectByApplyingXSLTAtURL:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)_applyStylesheet:(struct _xmlDoc *)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (BOOL)validateAndReturnError:(id *)arg1;
- (BOOL)_validateWithSchemaAndReturnError:(id *)arg1;
- (struct _xmlDoc *)_libxml2TreeRepresentation;
- (void)_initWithLibTidyDoc:(struct _TidyDoc *)arg1 child:(struct _TidyNode *)arg2 encoding:(unsigned int)arg3;
- (void)_setContentKindAndEncoding;

@end

@interface NSXMLElement : NSXMLNode
{
    NSString *_name;
    NSMutableArray *_attributes;
    NSMutableArray *_namespaces;
    NSArray *_children;
    BOOL _childrenHaveMutated;
    unsigned char _padding3[3];
    NSString *_URI;
    long long _prefixIndex;
}

+ (id)_nodeFromLibXML2Node:(void *)arg1;
+ (id)_elementFromTidyDoc:(struct _TidyDoc *)arg1 element:(struct _TidyNode *)arg2 encoding:(unsigned int)arg3 elementClass:(Class)arg4 nodeClass:(Class)arg5;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1;
- (id)initWithLocalName:(id)arg1 URI:(id)arg2;
- (id)initWithName:(id)arg1 stringValue:(id)arg2;
- (id)initWithName:(id)arg1 URI:(id)arg2;
- (id)_initWithName:(id)arg1 URI:(id)arg2 prefixIndex:(long long)arg3;
- (id)initWithXMLString:(id)arg1 error:(id *)arg2;
- (void)setName:(id)arg1;
- (BOOL)validateName:(id *)arg1 error:(id *)arg2;
- (id)name;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (id)stringValue;
- (id)children;
- (unsigned long long)childCount;
- (void)_setLocalName:(id)arg1;
- (void)setURI:(id)arg1;
- (id)URI;
- (BOOL)_QNamesAreResolved;
- (void)_setQNamesAreResolved:(BOOL)arg1;
- (id)childAtIndex:(unsigned long long)arg1;
- (id)XPath;
- (id)elementsForName:(id)arg1;
- (id)elementsForLocalName:(id)arg1 URI:(id)arg2;
- (void)setAttributes:(id)arg1;
- (void)setAttributesAsDictionary:(id)arg1;
- (id)attributes;
- (id)_attributes;
- (void)addAttribute:(id)arg1;
- (id)attributeForName:(id)arg1;
- (id)attributeForLocalName:(id)arg1 URI:(id)arg2;
- (void)removeAttributeForName:(id)arg1;
- (void)_addTrustedAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)countOfAttributes;
- (id)objectInAttributesAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inAttributesAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromAttributesAtIndex:(unsigned long long)arg1;
- (void)setNamespaces:(id)arg1;
- (id)namespaces;
- (id)_namespaces;
- (void)addNamespace:(id)arg1;
- (id)namespaceForPrefix:(id)arg1;
- (id)_namespaceForURI:(id)arg1;
- (void)removeNamespaceForPrefix:(id)arg1;
- (id)resolveNamespaceForName:(id)arg1;
- (id)_resolveNamespaceForPrefix:(id)arg1;
- (id)resolvePrefixForNamespaceURI:(id)arg1;
- (void)_changeQNamePrefix:(id)arg1 toPrefix:(id)arg2 forURI:(id)arg3;
- (void)_changeQNameURI:(id)arg1 toURI:(id)arg2 forPrefix:(id)arg3;
- (void)_bindAncestorNamespaces;
- (BOOL)_bindNamespaceName:(id)arg1 URI:(id)arg2;
- (unsigned long long)countOfNamespaces;
- (id)objectInNamespacesAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inNamespacesAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromNamespacesAtIndex:(unsigned long long)arg1;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertChildren:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeChildAtIndex:(unsigned long long)arg1;
- (void)setChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (void)replaceChildAtIndex:(unsigned long long)arg1 withNode:(id)arg2;
- (void)normalizeAdjacentTextNodesPreservingCDATA:(BOOL)arg1;
- (unsigned long long)countOfChildren;
- (id)objectInChildrenAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inChildrenAtIndex:(unsigned long long)arg2;
- (void)removeObjectFromChildrenAtIndex:(unsigned long long)arg1;
- (void)replaceObjectInChildrenAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)canonicalXMLStringPreservingComments:(BOOL)arg1;
- (id)_canonicalXMLStringPreservingComments:(BOOL)arg1 namespaceString:(id)arg2 relationships:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)_children;
- (void)_setSingleChild:(id)arg1;
- (BOOL)_nameIsEqualToNameOfNode:(id)arg1;
- (void)_resolveName;
- (id)localName;
- (id)prefix;
- (BOOL)_setPrefix:(id)arg1;
- (long long)_prefixIndex;
- (struct _xmlNode *)_libxml2TreeRepresentationWithNamespaces:(id)arg1;

@end

@interface NSXMLElementDeclarationContent : NSXMLNode
{
    unsigned long long _contentKind;
    unsigned long long _occurrence;
    NSString *_name;
    NSXMLElementDeclarationContent *_leftChild;
    NSXMLElementDeclarationContent *_rightChild;
}

+ (id)createElementContent:(struct _xmlElementContent *)arg1;
+ (id)createElementContentFromString:(id)arg1;
- (id)initWithContentKind:(unsigned long long)arg1 occurrence:(unsigned long long)arg2;
- (void)setName:(id)arg1;
- (id)name;
- (void)setLeftChild:(id)arg1;
- (id)leftChild;
- (void)setRightChild:(id)arg1;
- (id)rightChild;
- (unsigned long long)contentKind;
- (unsigned long long)occurrence;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (void)XMLStringSequenceStarted:(BOOL)arg1 choiceStarted:(BOOL)arg2 appendingToString:(struct __CFString *)arg3;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (struct _xmlElementContent *)libxml2Content;

@end

@interface NSXMLFidelityElement : NSXMLElement
{
    unsigned long long _fidelity;
    NSString *_startWhitespace;
    NSString *_endWhitespace;
}

- (void)dealloc;
- (id)init;
- (void)setFidelity:(unsigned long long)arg1;
- (unsigned long long)fidelity;
- (void)setWhitespace:(id)arg1;
- (void)setEndWhitespace:(id)arg1;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)_canonicalXMLStringPreservingComments:(BOOL)arg1 namespaceString:(id)arg2 relationships:(id)arg3;
- (BOOL)_setPrefix:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSXMLFidelityNode : NSXMLNode
{
    unsigned long long _fidelity;
    NSString *_whitespace;
    NSMutableArray *_ranges;
    NSMutableArray *_names;
}

+ (void)setObjectValuePreservingEntitiesForNode:(id)arg1 string:(id)arg2;
+ (id)stringValueSubstitutingEntitiesForNode:(id)arg1 ranges:(id)arg2 names:(id)arg3 objectValue:(id)arg4;
+ (unsigned short)charRefToUnicode:(const char *)arg1;
- (void)dealloc;
- (id)initWithKind:(unsigned long long)arg1;
- (void)setWhitespace:(id)arg1;
- (id)whitespace;
- (void)addEntity:(id)arg1 index:(unsigned long long)arg2;
- (void)setStringValue:(id)arg1 resolvingEntities:(BOOL)arg2;
- (id)stringValue;
- (id)objectValue;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)_XMLStringWithCharactersOnly;
- (void)setFidelity:(unsigned long long)arg1;
- (unsigned long long)fidelity;
- (void)setRanges:(id)arg1;
- (void)setNames:(id)arg1;
- (BOOL)isCDATA;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSXMLNamedFidelityNode : NSXMLNamedNode
{
    unsigned long long _fidelity;
    NSString *_whitespace;
    NSMutableArray *_ranges;
    NSMutableArray *_names;
}

- (void)dealloc;
- (id)initWithKind:(unsigned long long)arg1;
- (void)setFidelity:(unsigned long long)arg1;
- (unsigned long long)fidelity;
- (void)setWhitespace:(id)arg1;
- (void)setStringValue:(id)arg1 resolvingEntities:(BOOL)arg2;
- (id)stringValue;
- (id)objectValue;
- (void)addEntity:(id)arg1 index:(unsigned long long)arg2;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (BOOL)_setPrefix:(id)arg1;
- (void)setRanges:(id)arg1;
- (void)setNames:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSXMLNamedNode : NSXMLNode
{
    NSString *_name;
    NSString *_URI;
    long long _prefixIndex;
}

- (void)dealloc;
- (id)initWithKind:(unsigned long long)arg1;
- (id)initWithKind:(unsigned long long)arg1 name:(id)arg2 stringValue:(id)arg3;
- (id)initWithKind:(unsigned long long)arg1 localName:(id)arg2 stringValue:(id)arg3 URI:(id)arg4;
- (id)initWithKind:(unsigned long long)arg1 name:(id)arg2 stringValue:(id)arg3 URI:(id)arg4;
- (void)setName:(id)arg1;
- (id)name;
- (void)_setLocalName:(id)arg1;
- (void)setURI:(id)arg1;
- (id)URI;
- (void)setObjectValue:(id)arg1;
- (id)XPath;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)canonicalXMLStringPreservingComments:(BOOL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)_caseSensitiveCompare:(id)arg1;
- (BOOL)_nameIsEqualToNameOfNode:(id)arg1;
- (void)_resolveName;
- (id)localName;
- (id)prefix;
- (BOOL)_setPrefix:(id)arg1;
- (long long)_prefixIndex;

@end

@interface NSXMLNode : NSObject <NSCopying>
{
    unsigned long long _kind;
    NSXMLNode *_parent;
    unsigned long long _index;
    id _objectValue;
}

+ (void)initialize;
+ (id)document;
+ (id)documentWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)documentWithRootElement:(id)arg1;
+ (id)elementWithName:(id)arg1;
+ (id)elementWithLocalName:(id)arg1 URI:(id)arg2;
+ (id)elementWithName:(id)arg1 URI:(id)arg2;
+ (id)elementWithName:(id)arg1 stringValue:(id)arg2;
+ (id)elementWithName:(id)arg1 children:(id)arg2 attributes:(id)arg3;
+ (id)attributeWithName:(id)arg1 stringValue:(id)arg2;
+ (id)attributeWithLocalName:(id)arg1 URI:(id)arg2 stringValue:(id)arg3;
+ (id)attributeWithName:(id)arg1 URI:(id)arg2 stringValue:(id)arg3;
+ (id)namespaceWithName:(id)arg1 stringValue:(id)arg2;
+ (id)processingInstructionWithName:(id)arg1 stringValue:(id)arg2;
+ (id)commentWithStringValue:(id)arg1;
+ (id)textWithStringValue:(id)arg1;
+ (id)DTDNodeWithXMLString:(id)arg1;
+ (id)localNameForName:(id)arg1;
+ (id)prefixForName:(id)arg1;
+ (id)predefinedNamespaceForPrefix:(id)arg1;
+ (unsigned long long)_indexOfColonInString:(id)arg1;
+ (void)_escapeCharacters:(const unsigned short *)arg1 amount:(unsigned long long)arg2 inString:(id)arg3 appendingToString:(struct __CFString *)arg4;
+ (void)_escapeHTMLAttributeCharacters:(id)arg1 withQuote:(unsigned short)arg2 appendingToString:(struct __CFString *)arg3;
+ (id)_tidyHTMLBody:(id)arg1;
+ (BOOL)_htmlFromTidyNode:(void *)arg1 tidyDoc:(void *)arg2 appendingToString:(id)arg3;
+ (id)_nodeFromLibXML2Node:(void *)arg1;
+ (id)_contentsOfHTMLData:(id)arg1 strippingTagsSeparatedByString:(id)arg2;
+ (id)_contentsOfHTMLData:(id)arg1 encoding:(id)arg2 strippingTagsSeparatedByString:(id)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithKind:(unsigned long long)arg1;
- (id)initWithKind:(unsigned long long)arg1 options:(unsigned long long)arg2;
- (unsigned long long)kind;
- (id)parent;
- (id)children;
- (unsigned long long)childCount;
- (id)rootDocument;
- (void)setName:(id)arg1;
- (id)name;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (void)setStringValue:(id)arg1;
- (void)setStringValue:(id)arg1 resolvingEntities:(BOOL)arg2;
- (id)stringValue;
- (unsigned long long)index;
- (id)childAtIndex:(unsigned long long)arg1;
- (void)detach;
- (unsigned long long)level;
- (id)previousSibling;
- (id)nextSibling;
- (id)previousNode;
- (id)nextNode;
- (id)XPath;
- (id)localName;
- (id)prefix;
- (void)_setURI:(id)arg1;
- (void)setURI:(id)arg1;
- (id)URI;
- (id)description;
- (id)XMLString;
- (id)XMLStringWithOptions:(unsigned long long)arg1;
- (void)_XMLStringWithOptions:(unsigned long long)arg1 appendingToString:(struct __CFString *)arg2;
- (id)canonicalXMLStringPreservingComments:(BOOL)arg1;
- (id)XMLData;
- (id)nodesForXPath:(id)arg1 error:(id *)arg2;
- (id)objectsForXQuery:(id)arg1 error:(id *)arg2;
- (id)objectsForXQuery:(id)arg1 constants:(id)arg2 error:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)_setIndex:(unsigned long long)arg1;
- (void)_setKind:(unsigned long long)arg1;
- (void)_setParent:(id)arg1;

@end

@interface NSXMLParser : NSObject
{
    void *_parser;
    id _delegate;
    id _reserved1;
    id _reserved2;
    id _reserved3;
}

- (id)_info;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setShouldProcessNamespaces:(BOOL)arg1;
- (void)setShouldReportNamespacePrefixes:(BOOL)arg1;
- (void)setShouldResolveExternalEntities:(BOOL)arg1;
- (BOOL)shouldProcessNamespaces;
- (BOOL)shouldReportNamespacePrefixes;
- (BOOL)shouldResolveExternalEntities;
- (void)setShouldContinueAfterFatalError:(BOOL)arg1;
- (BOOL)shouldContinueAfterFatalError;
- (BOOL)parse;
- (void)abortParsing;
- (id)parserError;
- (id)publicID;
- (id)systemID;
- (long long)lineNumber;
- (long long)columnNumber;
- (void)dealloc;
- (void)finalize;
- (void)_setParserError:(long long)arg1;
- (struct _xmlParserCtxt *)_parserContext;
- (void)_pushNamespaces:(id)arg1;
- (void)_popNamespaces;
- (void)_initializeSAX2Callbacks;

@end

@interface _NSXMLParserInfo : NSObject
{
    struct _xmlSAXHandler *saxHandler;
    struct _xmlParserCtxt *parserContext;
    unsigned long long parserFlags;
    NSError *error;
    NSMutableArray *namespaces;
    NSMapTable *slowStringMap;
    BOOL delegateAborted;
}

@end

@interface NSXMLSAXParser : NSObject
{
    BOOL _hadError;
    BOOL _afterEntityLookup;
    BOOL _isSingleDTDNode;
    long long _parserFlags;
    unsigned long long _fidelityMask;
    struct _xmlSAXHandler *_saxHandler;
    struct _xmlParserCtxt *_context;
    NSData *_data;
    NSURL *_url;
    NSXMLNode *_root;
    NSXMLNode *_current;
    NSError **_error;
    NSMutableString *_content;
    NSMutableString *_whitespace;
    NSXMLNode *_text;
}

- (void)dealloc;
- (void)finalize;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 isSingleDTDNode:(BOOL)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)parse;
- (void)setRoot:(id)arg1;
- (id)root;
- (void)setCurrent:(id)arg1;
- (id)current;
- (unsigned long long)fidelityMask;
- (void)setError:(long long)arg1 info:(id)arg2 fatal:(BOOL)arg3;
- (struct _xmlParserCtxt *)context;
- (id)content;
- (void)setContent:(id)arg1;
- (id)whitespace;
- (void)setWhitespace:(id)arg1;
- (void)_addContent;
- (void)_addWhitespace;
- (void)_addEntity:(id)arg1;
- (void)setAfterEntityLookup:(BOOL)arg1;
- (BOOL)afterEntityLookup;
- (BOOL)isSingleDTDNode;
- (id)_createElementContent:(struct _xmlElementContent *)arg1;

@end

@interface NSXMLSchemaType : NSObject
{
}

+ (id)stringValueForObject:(id)arg1;

@end

@interface NSXMLTidy : NSObject
{
}

+ (BOOL)isLoaded;
+ (void)loadTidy;

@end

@interface NSXMLTreeReader : NSObject
{
    BOOL _hadError;
    BOOL _additiveContent;
    BOOL _isSingleDTDNode;
    BOOL _wasEmpty;
    BOOL _isMissingDTD;
    BOOL _elementClassOverridden;
    unsigned long long _fidelityMask;
    NSData *_data;
    NSXMLNode *_root;
    NSXMLNode *_current;
    NSError **_error;
    NSString *_content;
    NSString *_whitespace;
    NSXMLNode *_text;
    NSMapTable *_xmlCharToNSString;
    NSMapTable *_xmlCharHashToNSString;
    void *_readerCharacters;
    struct _xmlTextReader *_reader;
    Class _documentClass;
    Class _dtdClass;
    Class _dtdNodeClass;
    Class _elementClass;
    Class _nodeClass;
}

+ (void)initialize;
- (void)dealloc;
- (id)initWithData:(id)arg1 documentClass:(Class)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)initWithData:(id)arg1 documentClass:(Class)arg2 isSingleDTDNode:(BOOL)arg3 options:(unsigned long long)arg4 error:(id *)arg5;
- (void)_initializeReader;
- (id)parse;
- (void)setError:(long long)arg1 info:(id)arg2 fatal:(BOOL)arg3;
- (void)processNode:(struct _xmlTextReader *)arg1;
- (void)processRealDocument:(struct _xmlDoc *)arg1;
- (void)processElement:(struct _xmlTextReader *)arg1;
- (void)processEndElement:(struct _xmlTextReader *)arg1;
- (id)createNamedNodeFromNode:(struct _xmlNode *)arg1 reader:(struct _xmlTextReader *)arg2;
- (void)processText:(struct _xmlTextReader *)arg1;
- (void)processCDATA:(struct _xmlTextReader *)arg1;
- (void)processEntityReference:(struct _xmlTextReader *)arg1;
- (void)processEntity:(struct _xmlTextReader *)arg1;
- (void)processProcessingInstruction:(struct _xmlTextReader *)arg1;
- (void)processComment:(struct _xmlTextReader *)arg1;
- (void)processDocument:(struct _xmlTextReader *)arg1;
- (void)processDocumentType:(struct _xmlTextReader *)arg1;
- (void)processDocumentFragment:(struct _xmlTextReader *)arg1;
- (void)processNotation:(struct _xmlTextReader *)arg1;
- (void)processWhitespace:(struct _xmlTextReader *)arg1;
- (void)processSignificantWhitespace:(struct _xmlTextReader *)arg1;
- (void)processEndEntity:(struct _xmlTextReader *)arg1;
- (void)processXMLDeclaration:(struct _xmlTextReader *)arg1;
- (void)setRoot:(id)arg1;
- (id)root;
- (void)setCurrent:(id)arg1;
- (void)setContent:(id)arg1;
- (void)_addContent;
- (void)_addEntity:(id)arg1;
- (id)DTDString;

@end

@interface NSZipFileArchive : NSObject
{
    NSDictionary *_contents;
    NSData *_data;
    id _provider;
    long long _desc;
    NSString *_path;
    NSArray *_names;
    NSDictionary *_properties;
    NSMutableDictionary *_cachedContents;
    void *_reserved;
    struct __zFlags {
        unsigned int providerSuppliesContents:1;
        unsigned int providerSuppliesStreams:1;
        unsigned int providerSuppliesProperties:1;
        unsigned int noContentsCaching:1;
        unsigned int fileOpen:1;
        unsigned int reserved:27;
    } _zFlags;
    void *_reserved2[5];
}

- (id)initWithPath:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithEntryNames:(id)arg1 contents:(id)arg2 properties:(id)arg3 options:(unsigned long long)arg4;
- (id)initWithEntryNames:(id)arg1 dataProvider:(id)arg2 options:(unsigned long long)arg3;
- (void)dealloc;
- (void)finalize;
- (id)entryNames;
- (id)contentsForEntryName:(id)arg1;
- (id)streamForEntryName:(id)arg1;
- (BOOL)writeContentsForEntryName:(id)arg1 toFile:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (id)propertiesForEntryName:(id)arg1;
- (id)archiveData;
- (id)archiveStream;
- (BOOL)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (void)invalidate;
- (BOOL)isValid;

@end

@interface _NSNestedDictionary : NSMutableDictionary
{
    id _locals;
    id _bindings;
}

- (id)_recursiveAllKeys;
- (id)_recursiveAllValues;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;
- (id)objectEnumerator;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;

@end

@interface _NSPredicateOperatorUtilities : NSObject
{
}

+ (struct __CFLocale *)retainedLocale;
+ (id)newStringFrom:(id)arg1 usingUnicodeTransforms:(unsigned long long)arg2;
+ (BOOL)doRegexForString:(id)arg1 pattern:(id)arg2 likeProtect:(BOOL)arg3 flags:(unsigned long long)arg4 context:(CDStruct_ed1313e2 *)arg5;
+ (long long)copyRegexFindSafePattern:(id)arg1 toBuffer:(unsigned short *)arg2;

@end

@interface _NSPredicateUtilities : NSObject
{
}

+ (unsigned long long)_getITypeFor:(const char *)arg1;
+ (unsigned long long)_getCommonTypeFor:(id)arg1;
+ (id)sum:(id)arg1;
+ (id)count:(id)arg1;
+ (id)min:(id)arg1;
+ (id)max:(id)arg1;
+ (id)average:(id)arg1;
+ (id)median:(id)arg1;
+ (id)mode:(id)arg1;
+ (id)stddev:(id)arg1;
+ (id)add:(id)arg1 to:(id)arg2;
+ (id)from:(id)arg1 subtract:(id)arg2;
+ (id)multiply:(id)arg1 by:(id)arg2;
+ (id)divide:(id)arg1 by:(id)arg2;
+ (id)modulus:(id)arg1 by:(id)arg2;
+ (id)sqrt:(id)arg1;
+ (id)log:(id)arg1;
+ (id)ln:(id)arg1;
+ (id)raise:(id)arg1 toPower:(id)arg2;
+ (id)exp:(id)arg1;
+ (id)floor:(id)arg1;
+ (id)ceiling:(id)arg1;
+ (id)abs:(id)arg1;
+ (id)trunc:(id)arg1;
+ (id)uppercase:(id)arg1;
+ (id)lowercase:(id)arg1;
+ (id)_convertStringToNumber:(id)arg1;
+ (id)castObject:(id)arg1 toType:(id)arg2;
+ (id)random;
+ (id)randomn:(id)arg1;
+ (id)objectFrom:(id)arg1 withIndex:(id)arg2;
+ (id)now;
+ (id)bitwiseAnd:(id)arg1 with:(id)arg2;
+ (id)bitwiseOr:(id)arg1 with:(id)arg2;
+ (id)bitwiseXor:(id)arg1 with:(id)arg2;
+ (id)leftshift:(id)arg1 by:(id)arg2;
+ (id)rightshift:(id)arg1 by:(id)arg2;
+ (id)onesComplement:(id)arg1;
+ (id)noindex:(id)arg1;
+ (BOOL)_isReservedWordInParser:(id)arg1;
+ (id)_parserableStringDescription:(id)arg1;
+ (id)_parserableDateDescription:(id)arg1;
+ (id)_parserableCollectionDescription:(id)arg1;

@end

@interface NSPortMessage : NSObject
{
    NSPort *localPort;
    NSPort *remotePort;
    NSMutableArray *components;
    unsigned int msgid;
    void *reserved2;
    void *reserved;
}

- (id)initWithSendPort:(id)arg1 receivePort:(id)arg2 components:(id)arg3;
- (id)initWithReceivePort:(id)arg1 sendPort:(id)arg2 components:(id)arg3;
- (void)dealloc;
- (id)sendPort;
- (id)receivePort;
- (unsigned int)msgid;
- (void)setMsgid:(unsigned int)arg1;
- (id)components;
- (BOOL)sendBeforeDate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSExistsCommand : NSScriptCommand
{
}

- (id)performDefaultImplementation;

@end

@interface NSSimpleOrthography : NSOrthography
{
    unsigned int _orthographyFlags;
}

+ (void)initialize;
+ (id)orthographyWithFlags:(unsigned int)arg1;
- (id)initWithFlags:(unsigned int)arg1;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)dominantScript;
- (id)languageMap;
- (unsigned int)orthographyFlags;
- (id)languagesForScript:(id)arg1;
- (id)dominantLanguageForScript:(id)arg1;
- (id)dominantLanguage;
- (id)allScripts;
- (id)allLanguages;

@end

@interface NSComplexOrthography : NSOrthography
{
    NSString *_dominantScript;
    NSDictionary *_languageMap;
    unsigned int _orthographyFlags;
}

+ (void)initialize;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;
- (void)dealloc;
- (id)dominantScript;
- (id)languageMap;
- (unsigned int)orthographyFlags;

@end

@interface NSOrthography : NSObject <NSCopying, NSCoding>
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)orthographyWithDominantScript:(id)arg1 languageMap:(id)arg2;
- (id)initWithDominantScript:(id)arg1 languageMap:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly) NSString *dominantScript;
@property(readonly) NSDictionary *languageMap;
- (unsigned int)orthographyFlags;
- (id)languagesForScript:(id)arg1;
- (id)dominantLanguageForScript:(id)arg1;
- (id)dominantLanguage;
- (id)allScripts;
- (id)allLanguages;

@end

@interface NSCorrectionCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSReplacementCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSDashCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSQuoteCheckingResult : NSSubstitutionCheckingResult
{
}

- (unsigned long long)resultType;

@end

@interface NSSubstitutionCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSString *_replacementString;
}

- (id)initWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)range;
- (id)replacementString;

@end

@interface NSLinkCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSURL *_url;
}

- (id)initWithRange:(struct _NSRange)arg1 URL:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)resultType;
- (struct _NSRange)range;
- (id)URL;

@end

@interface NSAddressCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDictionary *_components;
    id _underlyingResult;
}

- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2 underlyingResult:(void *)arg3;
- (id)initWithRange:(struct _NSRange)arg1 components:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)resultType;
- (struct _NSRange)range;
- (id)addressComponents;
@property(readonly) void *underlyingResult;

@end

@interface NSDateCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSDate *_date;
    NSTimeZone *_timeZone;
    double _duration;
    NSDate *_referenceDate;
    id _underlyingResult;
}

- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5 underlyingResult:(void *)arg6;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4 referenceDate:(id)arg5;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4;
- (id)initWithRange:(struct _NSRange)arg1 date:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)resultType;
- (struct _NSRange)range;
- (id)date;
@property(readonly) NSTimeZone *timeZone;
@property(readonly) double duration;
@property(readonly) NSDate *referenceDate;
@property(readonly) void *underlyingResult;

@end

@interface NSGrammarCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSArray *_details;
}

- (id)initWithRange:(struct _NSRange)arg1 details:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)resultType;
- (struct _NSRange)range;
- (id)grammarDetails;

@end

@interface NSSpellCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
}

- (id)initWithRange:(struct _NSRange)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)resultType;
- (struct _NSRange)range;

@end

@interface NSOrthographyCheckingResult : NSTextCheckingResult
{
    struct _NSRange _range;
    NSOrthography *_orthography;
}

- (id)initWithRange:(struct _NSRange)arg1 orthography:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)resultType;
- (struct _NSRange)range;
- (id)orthography;

@end

@interface NSTextCheckingResult : NSObject <NSCopying, NSCoding>
{
}

+ (void)initialize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeRangeWithCoder:(id)arg1;
- (struct _NSRange)decodeRangeWithCoder:(id)arg1;
@property(readonly) unsigned long long resultType;
@property(readonly) struct _NSRange range;
- (id)orthography;
- (id)grammarDetails;
- (id)date;
- (id)timeZone;
- (double)duration;
- (id)addressComponents;
- (id)URL;
- (id)replacementString;
- (void *)underlyingResult;

@end

@interface NSBlockPredicate : NSPredicate
{
    id _block;
}

- (id)initWithBlock:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2;
- (id)predicateFormat;
- (BOOL)isEqual:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (unsigned long long)hash;
- (id)predicateWithSubstitutionVariables:(id)arg1;
- (id)_predicateBlock;

@end

@interface NSBlockExpression : NSExpression
{
    id _block;
    NSArray *_arguments;
}

- (id)initWithType:(unsigned long long)arg1 block:(id)arg2 arguments:(void)arg3;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)expressionBlock;
- (id)arguments;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;
- (id)predicateFormat;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface NSTernaryExpression : NSExpression
{
    NSPredicate *_predicate;
    NSExpression *_trueExpression;
    NSExpression *_falseExpression;
}

- (id)initWithPredicate:(id)arg1 trueExpression:(id)arg2 falseExpression:(id)arg3;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)predicateFormat;
- (id)predicate;
- (id)trueExpression;
- (id)falseExpression;
- (void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2;
- (id)_expressionWithSubstitutionVariables:(id)arg1;
- (id)expressionValueWithObject:(id)arg1 context:(id)arg2;

@end

@interface NSKeyValueChangeDictionary : NSDictionary
{
    long long _retainCountMinusOne;
    CDStruct_6e6d02c6 _details;
    NSObject *_originalObservable;
    BOOL _isPriorNotification;
    BOOL _isRetainingObjects;
}

- (id)initWithDetailsNoCopy:(CDStruct_6e6d02c6)arg1 originalObservable:(id)arg2 isPriorNotification:(BOOL)arg3;
- (void)setDetailsNoCopy:(CDStruct_6e6d02c6)arg1 originalObservable:(id)arg2;
- (void)setOriginalObservable:(id)arg1;
- (void)retainObjects;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (void)dealloc;
- (unsigned long long)count;
- (id)objectForKey:(id)arg1;
- (id)keyEnumerator;

@end

@interface NSAppleEventDescriptor (NSCompatibility)
- (void)removeDecriptorAtIndex:(long long)arg1;
- (id)_initWithDescriptorType:(unsigned int)arg1 bytes:(const void *)arg2 byteCount:(unsigned long long)arg3;
- (id)_initWithoutAEDesc;
- (struct AEDesc *)_AEDesc;
- (void)_setAEDesc:(struct AEDesc *)arg1;
@end

@interface NSAppleEventDescriptor (NSPrivate)
+ (id)_descriptorWithNumber:(id)arg1;
- (id)_numberValue;
- (BOOL)_copyValueOfDescriptorType:(unsigned int)arg1 toBuffer:(void *)arg2 ofLength:(unsigned long long)arg3;
- (id)_dateValue;
- (id)_fileURLValue;
- (id)_fsRefValue;
- (id)_singleFilePathValue;
- (id)_filePathValue;
- (void)_flushAEDesc;
@end

@interface NSAppleEventManager (NSInternal)
- (id)_perThreadHandlingStack:(BOOL)arg1;
- (id)_topHandling;
- (void)_pushHandling:(id)arg1;
- (id)_poppedTopHandling;
- (BOOL)_popIfTopHandling:(id)arg1;
- (void)_suspendIfTopHandling:(id)arg1;
- (void)_resumeIfNotTopHandling:(id)arg1 withScriptCommandResult:(id)arg2;
@end

@interface NSAppleEventManager (NSPrivate)
- (void)_prepareForDispatch;
@end

@interface NSAppleScript (NSPrivate)
+ (struct ComponentInstanceRecord *)_defaultScriptingComponent;
- (unsigned int)_compiledScriptID;
- (id)_executeWithMode:(int)arg1 andReturnError:(id *)arg2;
- (id)_executeAppleEvent:(id)arg1 withMode:(int)arg2 error:(id *)arg3;
@end

@interface NSData (NSDataObjCTypeDeserialization)
- (void)deserializeDataAt:(void *)arg1 ofObjCType:(const char *)arg2 atCursor:(unsigned int *)arg3 context:(id)arg4;
@end

@interface NSMutableData (NSMutableDataObjcTypeSerialization)
- (void)serializeDataAt:(const void *)arg1 ofObjCType:(const char *)arg2 context:(id)arg3;
@end

@interface NSObject (NSArchiverCallBack)
- (Class)classForArchiver;
- (id)replacementObjectForArchiver:(id)arg1;
@end

@interface NSMutableArray (NSMutableArray)
- (Class)classForCoder;
- (void)removeObjectsFromIndices:(unsigned long long *)arg1 numIndices:(unsigned long long)arg2;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
@end

@interface NSArray (NSArray)
+ (id)arrayWithContentsOfFile:(id)arg1;
+ (id)arrayWithContentsOfURL:(id)arg1;
+ (id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2;
- (id)debugDescription;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)sortedArrayHint;
- (id)sortedArrayUsingFunction:(void *)arg1 context:(void *)arg2 hint:(id)arg3;
- (id)sortedArrayUsingSelector:(SEL)arg1 hint:(id)arg2;
- (id)_stringToWrite;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
@end

@interface NSAttributedString (NSScriptingComparisonMethods)
- (BOOL)_attributesAreEqualToAttributesInAttributedString:(id)arg1;
- (BOOL)scriptingIsEqualTo:(id)arg1;
- (BOOL)scriptingIsLessThanOrEqualTo:(id)arg1;
- (BOOL)scriptingIsLessThan:(id)arg1;
- (BOOL)scriptingIsGreaterThanOrEqualTo:(id)arg1;
- (BOOL)scriptingIsGreaterThan:(id)arg1;
- (BOOL)scriptingBeginsWith:(id)arg1;
- (BOOL)scriptingEndsWith:(id)arg1;
- (BOOL)scriptingContains:(id)arg1;
@end

@interface NSScriptCoercionHandler (NSBasicCoercions)
- (void)_setUpFoundationCoercions;
@end

@interface NSAEDescriptorTranslator (NSBasicTranslations)
+ (id)_descriptorByTranslatingNull:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
+ (id)_propertyContainerClassDescriptionFromDictionaryType:(id)arg1 inSuite:(id)arg2;
+ (id)_dictionaryByTranslatingAERecord:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_arrayByTranslatingAEList:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_stringByTranslatingTextDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_numberByTranslatingNumericDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_valueByTranslatingOSAErrorRangeDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_dateByTranslatingLongDateTimeDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_stringByTranslatingFSSpecDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_stringByTranslatingAliasDescriptor:(id)arg1 toType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingString:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingNumber:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingArray:(id)arg1 ofObjectsOfType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingData:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingDate:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
+ (id)_descriptorByTranslatingDictionary:(id)arg1 ofType:(id)arg2 inSuite:(id)arg3;
- (void)_setUpFoundationTranslations;
@end

@interface NSAttributedString (NSCFAdditions)
- (unsigned long long)_cfTypeID;
- (id)_createAttributedSubstringWithRange:(struct _NSRange)arg1;
@end

@interface NSNumber (NSCFAdditions)
- (unsigned long long)_cfTypeID;
- (long long)_cfNumberType;
- (unsigned char)_getValue:(void *)arg1 forType:(long long)arg2;
- (long long)_reverseCompare:(id)arg1;
@end

@interface NSCFString (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
@end

@interface NSMutableString (NSCFAdditions)
- (void)appendCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
- (void)_cfAppendCString:(const char *)arg1 length:(long long)arg2;
- (void)_cfLowercase:(const void *)arg1;
- (void)_cfUppercase:(const void *)arg1;
- (void)_cfCapitalize:(const void *)arg1;
- (void)_cfPad:(struct __CFString *)arg1 length:(unsigned int)arg2 padIndex:(unsigned int)arg3;
- (void)_cfTrim:(struct __CFString *)arg1;
- (void)_trimWithCharacterSet:(id)arg1;
- (void)_cfTrimWS;
- (void)_cfNormalize:(long long)arg1;
@end

@interface NSString (NSCFAdditions)
- (unsigned long long)_cfTypeID;
- (id)_createSubstringWithRange:(struct _NSRange)arg1;
- (unsigned char)_encodingCantBeStoredInEightBitCFString;
- (unsigned int)_smallestEncodingInCFStringEncoding;
- (unsigned int)_fastestEncodingInCFStringEncoding;
- (BOOL)_getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned int)arg3;
@end

@interface NSDateComponents (_)
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@interface NSCalendar (NSCalendar)
+ (id)autoupdatingCurrentCalendar;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
@end

@interface NSDate (NSNaturalLanguageDate)
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
+ (id)dateWithNaturalLanguageString:(id)arg1;
+ (id)dateWithNaturalLanguageString:(id)arg1 locale:(id)arg2;
@end

@interface NSCalendarDate (NSNaturalLanguageDate)
+ (id)dateWithNaturalLanguageString:(id)arg1 date:(id)arg2 locale:(id)arg3;
@end

@interface NSDate (NSCalendarDateStuff)
- (id)dateWithCalendarFormat:(id)arg1 timeZone:(id)arg2;
- (id)descriptionWithCalendarFormat:(id)arg1 timeZone:(id)arg2 locale:(id)arg3;
@end

@interface NSScanner (NSRemainingString)
- (id)_remainingString;
- (BOOL)_scanDecimal:(unsigned long long)arg1 into:(long long *)arg2;
@end

@interface NSObject (NSClassDescriptionPrimitives)
- (id)classDescription;
- (id)attributeKeys;
- (id)toOneRelationshipKeys;
- (id)toManyRelationshipKeys;
- (id)inverseForRelationshipKey:(id)arg1;
@end

@interface NSCloneCommand (NSInternal)
+ (BOOL)_getArguments:(id)arg1 withParameters:(CDStruct_89ddc8e1)arg2;
@end

@interface NSNull (NSScriptingInternalCounting)
- (unsigned long long)_scriptingCount;
- (unsigned long long)_scriptingCountOfValueForKey:(id)arg1;
@end

@interface NSArray (NSScriptingInternalCounting)
- (unsigned long long)_scriptingCount;
- (unsigned long long)_scriptingCountOfValueForKey:(id)arg1;
- (unsigned long long)_scriptingCountNonrecursively;
@end

@interface NSObject (NSScriptingInternalCounting)
- (unsigned long long)_scriptingCount;
- (unsigned long long)_scriptingCountOfValueForKey:(id)arg1;
- (unsigned long long)_scriptingCountNonrecursively;
@end

@interface NSCreateCommand (NSInternal)
+ (BOOL)_getArguments:(id)arg1 withParameters:(CDStruct_89ddc8e1)arg2;
- (BOOL)_setAdditionalThingsFromEvent:(id)arg1;
@end

@interface NSMutableData (NSMutableData)
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)dataWithCapacity:(unsigned long long)arg1;
+ (id)dataWithLength:(unsigned long long)arg1;
- (void *)mutableBytes;
- (void)setLength:(unsigned long long)arg1;
- (Class)classForCoder;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2 length:(unsigned long long)arg3;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)appendData:(id)arg1;
- (void)increaseLengthBy:(unsigned long long)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withBytes:(const void *)arg2;
- (void)resetBytesInRange:(struct _NSRange)arg1;
- (void)setData:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithLength:(unsigned long long)arg1;
@end

@interface NSData (NSData)
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)data;
+ (id)dataWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
+ (id)dataWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
+ (id)dataWithContentsOfFile:(id)arg1;
+ (id)dataWithContentsOfURL:(id)arg1;
+ (id)dataWithContentsOfMappedFile:(id)arg1;
+ (id)dataWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)dataWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)dataWithData:(id)arg1;
- (unsigned long long)length;
- (const void *)bytes;
- (unsigned long long)_cfTypeID;
- (id)description;
- (id)_asciiDescription;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (BOOL)_bytesAreVM;
- (void)getBytes:(void *)arg1;
- (void)getBytes:(void *)arg1 length:(unsigned long long)arg2;
- (void)getBytes:(void *)arg1 range:(struct _NSRange)arg2;
- (BOOL)isEqualToData:(id)arg1;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (BOOL)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 error:(id *)arg3;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (id)initWithBytes:(void *)arg1 length:(unsigned long long)arg2 copy:(BOOL)arg3 freeWhenDone:(BOOL)arg4 bytesAreVM:(BOOL)arg5;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfMappedFile:(id)arg1 error:(id *)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;
- (id)initWithData:(id)arg1;
- (struct _NSRange)rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (id)initWithBase64Encoding:(id)arg1;
- (id)base64Encoding;
@end

@interface NSData (NSURLExtras)
- (id)_web_guessedMIMETypeForXML;
- (id)_web_guessedMIMEType;
- (id)_web_guessedMIMETypeForExtension:(id)arg1;
- (id)_web_parseRFC822HeaderFields;
- (id)_replaceCString:(const char *)arg1 withCString:(const char *)arg2;
@end

@interface NSDate (NSDate)
+ (id)dateWithString:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithString:(id)arg1;
@end

@interface NSDateFormatter (NSDateFormatterCompatibility)
- (id)initWithDateFormat:(id)arg1 allowNaturalLanguage:(BOOL)arg2;
- (BOOL)allowsNaturalLanguage;
@end

@interface NSDate (NSURLExtras)
- (id)_web_RFC1123DateString;
- (long long)_web_compareDay:(id)arg1;
- (BOOL)_web_isToday;
@end

@interface NSDecimalNumber (NSNumberCompatibility)
+ (id)numberWithChar:(BOOL)arg1;
+ (id)numberWithUnsignedChar:(unsigned char)arg1;
+ (id)numberWithShort:(short)arg1;
+ (id)numberWithUnsignedShort:(unsigned short)arg1;
+ (id)numberWithInt:(int)arg1;
+ (id)numberWithInteger:(long long)arg1;
+ (id)numberWithUnsignedInt:(unsigned int)arg1;
+ (id)numberWithUnsignedInteger:(unsigned long long)arg1;
+ (id)numberWithLong:(long long)arg1;
+ (id)numberWithUnsignedLong:(unsigned long long)arg1;
+ (id)numberWithLongLong:(long long)arg1;
+ (id)numberWithUnsignedLongLong:(unsigned long long)arg1;
+ (id)numberWithFloat:(float)arg1;
+ (id)numberWithDouble:(double)arg1;
+ (id)numberWithBool:(BOOL)arg1;
@end

@interface NSDecimalNumberPlaceholder (NSNumberCompatibility)
- (id)initWithLongLong:(long long)arg1;
- (id)initWithBool:(BOOL)arg1;
- (id)initWithChar:(BOOL)arg1;
- (id)initWithShort:(short)arg1;
- (id)initWithInt:(int)arg1;
- (id)initWithInteger:(long long)arg1;
- (id)initWithLong:(long long)arg1;
- (id)initWithUnsignedLongLong:(unsigned long long)arg1;
- (id)initWithUnsignedChar:(unsigned char)arg1;
- (id)initWithUnsignedShort:(unsigned short)arg1;
- (id)initWithUnsignedInt:(unsigned int)arg1;
- (id)initWithUnsignedInteger:(unsigned long long)arg1;
- (id)initWithUnsignedLong:(unsigned long long)arg1;
- (id)initWithDouble:(double)arg1;
- (id)initWithFloat:(float)arg1;
@end

@interface NSString (NSDecimalExtension)
- (CDStruct_5fe7aead)decimalValue;
@end

@interface NSScanner (NSDecimalNumberScanning)
- (BOOL)scanDecimal:(CDStruct_5fe7aead *)arg1;
@end

@interface NSNumber (NSDecimalNumberExtensions)
- (CDStruct_5fe7aead)decimalValue;
@end

@interface NSNull (NSScriptingInternalDeleting)
- (void)_scriptingRemoveValueForSpecifier:(id)arg1;
@end

@interface NSArray (NSScriptingInternalDeleting)
- (void)_scriptingRemoveValueForSpecifier:(id)arg1;
@end

@interface NSObject (NSScriptingInternalDeleting)
- (void)_scriptingRemoveValueForSpecifier:(id)arg1;
@end

@interface NSMutableDictionary (NSDeprecatedKeyValueCoding)
- (void)takeValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSDictionary (NSDeprecatedKeyValueCoding)
- (void)takeValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSArray (NSDeprecatedKeyValueCoding)
- (void)takeValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSObject (NSDeprecatedKeyValueCoding)
+ (BOOL)useStoredAccessor;
- (id)_oldValueForKeyPath:(id)arg1;
- (void)takeValue:(id)arg1 forKeyPath:(id)arg2;
- (id)valuesForKeys:(id)arg1;
- (void)takeValuesFromDictionary:(id)arg1;
- (id)handleQueryWithUnboundKey:(id)arg1;
- (void)handleTakeValue:(id)arg1 forUnboundKey:(id)arg2;
- (void)unableToSetNilForKey:(id)arg1;
- (id)_oldValueForKey:(id)arg1;
- (id)storedValueForKey:(id)arg1;
- (void)takeValue:(id)arg1 forKey:(id)arg2;
- (void)takeStoredValue:(id)arg1 forKey:(id)arg2;
- (id)keyValueBindingForKey:(id)arg1 typeMask:(unsigned long long)arg2;
- (id)_createKeyValueBindingForKey:(id)arg1 name:(const char *)arg2 bindingType:(unsigned long long)arg3;
- (id)createKeyValueBindingForKey:(id)arg1 typeMask:(unsigned long long)arg2;
@end

@interface NSCFDictionary (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setObservationInfo:(void *)arg1;
@end

@interface NSMutableDictionary (NSMutableDictionary)
- (Class)classForCoder;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
@end

@interface NSDictionary (NSDictionary)
+ (id)dictionaryWithContentsOfFile:(id)arg1;
+ (id)dictionaryWithContentsOfURL:(id)arg1;
+ (id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)descriptionInStringsFileFormat;
- (id)_stringToWrite;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
@end

@interface NSMutableDictionary (NSURLExtras)
- (void)_web_setInt:(int)arg1 forKey:(id)arg2;
- (void)_web_setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)_web_setObject:(id)arg1 forUncopiedKey:(id)arg2;
@end

@interface NSDictionary (NSURLExtras)
- (int)_web_intForKey:(id)arg1;
- (id)_web_stringForKey:(id)arg1;
- (id)_web_numberForKey:(id)arg1;
- (id)_web_objectForMIMEType:(id)arg1;
@end

@interface NSString (NSDistantString)
- (id)_getCharactersAsStringInRange:(struct _NSRange)arg1;
- (BOOL)_getBytesAsData:(id *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
@end

@interface NSMutableString (NSDistantString)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSProxy (NSDOAdditions)
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (BOOL)_conformsToProtocolNamed:(const char *)arg1;
@end

@interface NSObject (NSDOAdditions)
+ (struct objc_method_description *)instanceMethodDescriptionForSelector:(SEL)arg1;
+ (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (struct objc_method_description *)methodDescriptionForSelector:(SEL)arg1;
- (BOOL)_conformsToProtocolNamed:(const char *)arg1;
@end

@interface NSObject (NSDistantObjectAdditions)
+ (const char *)_localClassNameForClass;
- (const char *)_localClassNameForClass;
@end

@interface NSError (NSURLExtrasInternal)
- (id)_web_initWithDomain_nowarn:(id)arg1 code:(long long)arg2 URL:(id)arg3;
@end

@interface NSError (NSURLExtras)
+ (void)_web_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
+ (id)_web_errorWithDomain:(id)arg1 code:(long long)arg2 failingURL:(id)arg3;
+ (id)_web_errorWithDomain:(id)arg1 code:(long long)arg2 URL:(id)arg3;
- (id)_web_initWithDomain:(id)arg1 code:(long long)arg2 failingURL:(id)arg3;
- (BOOL)_web_errorIsInDomain:(id)arg1;
- (id)_web_localizedDescription;
- (id)_web_failingURL;
@end

@interface NSError (NSErrorPrivate)
+ (void)_registerBuiltInFormatters;
+ (void)_registerFormatter:(void *)arg1 forErrorKey:(id)arg2 parameters:(const char *)arg3;
- (long long)_collectApplicableUserInfoFormatters:(struct **)arg1 max:(long long)arg2;
- (id)_formatCocoaErrorString:(id)arg1 parameters:(const char *)arg2 applicableFormatters:(struct **)arg3 count:(long long)arg4;
- (id)_cocoaErrorString:(id)arg1 fromBundle:(id)arg2 tableName:(id)arg3;
- (id)_cocoaErrorString:(id)arg1;
@end

@interface NSException (NSException)
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@interface NSDictionary (NSFileAttributes)
- (unsigned long long)fileSize;
- (id)fileModificationDate;
- (id)fileType;
- (unsigned long long)filePosixPermissions;
- (id)fileOwnerAccountName;
- (unsigned long long)fileOwnerAccountNumber;
- (id)fileGroupOwnerAccountName;
- (unsigned long long)fileGroupOwnerAccountNumber;
- (long long)fileSystemNumber;
- (unsigned long long)fileSystemFileNumber;
- (BOOL)fileExtensionHidden;
- (unsigned int)fileHFSCreatorCode;
- (unsigned int)fileHFSTypeCode;
- (BOOL)fileIsImmutable;
- (BOOL)fileIsAppendOnly;
- (id)fileCreationDate;
- (id)fileOwnerAccountID;
- (id)fileGroupOwnerAccountID;
@end

@interface NSFileManager (NSFileManagerSPI)
- (id)_info;
@end

@interface NSFileManager (NSURLExtrasInternal)
- (BOOL)_web_fileExistsAtPath_nowarn:(id)arg1 isDirectory:(char *)arg2 traverseLink:(BOOL)arg3;
- (id)_web_carbonPathForPath_nowarn:(id)arg1;
- (id)_web_startupVolumeName_nowarn;
- (BOOL)_web_createIntermediateDirectoriesForPath_nowarn:(id)arg1 attributes:(id)arg2;
- (void)_web_noteFileChangedAtPath_nowarn:(id)arg1;
- (BOOL)_web_changeFileAttributes_nowarn:(id)arg1 atPath:(id)arg2;
@end

@interface NSFileManager (NSURLExtras)
- (BOOL)_web_createDirectoryAtPathWithIntermediateDirectories:(id)arg1 attributes:(id)arg2;
- (BOOL)_web_createFileAtPathWithIntermediateDirectories:(id)arg1 contents:(id)arg2 attributes:(id)arg3 directoryAttributes:(id)arg4;
- (BOOL)_web_changeFinderAttributes:(id)arg1 forFileAtPath:(id)arg2;
- (BOOL)_web_createFileAtPath:(id)arg1 contents:(id)arg2 attributes:(id)arg3;
- (void)_performRemoveFileAtPath:(id)arg1;
- (void)_web_backgroundRemoveFileAtPath:(id)arg1;
- (BOOL)_web_removeFileOnlyAtPath:(id)arg1;
- (void)_web_backgroundRemoveLeftoverFiles:(id)arg1;
- (id)_web_visibleItemsInDirectoryAtPath:(id)arg1;
- (id)_web_pathWithUniqueFilenameForPath:(id)arg1;
@end

@interface NSCoder (NSGeometryCoding)
- (void)encodePoint:(struct CGPoint)arg1;
- (struct CGPoint)decodePoint;
- (void)encodeSize:(struct CGSize)arg1;
- (struct CGSize)decodeSize;
- (void)encodeRect:(struct CGRect)arg1;
- (struct CGRect)decodeRect;
@end

@interface NSHTTPCookieStorage (NSPrivate)
- (void)_setPrivateBrowsingEnabled:(BOOL)arg1;
- (struct OpaqueCFHTTPCookieStorage *)_cookieStorage;
- (void)_saveCookies;
@end

@interface NSHTTPCookieStorage (NSInternal)
- (void)_readAcceptCookiesPreference;
- (void)_registerForCookiePreferenceNotification;
- (id)_internalInit;
@end

@interface NSBundle (_NSJavaSetupPrivate)
+ (BOOL)_usesFastJavaBundleSetup;
+ (void)_setUsesFastJavaBundleSetup:(BOOL)arg1;
- (void)_setJavaClassesLoaded;
@end

@interface NSArray (NSKeyValueCodingPrivate)
- (id)_valueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_mutableArrayValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (id)_mutableSetValueForKeyPath:(id)arg1 ofObjectAtIndex:(unsigned long long)arg2;
- (void)_setValue:(id)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3;
- (BOOL)_validateValue:(id *)arg1 forKeyPath:(id)arg2 ofObjectAtIndex:(unsigned long long)arg3 error:(id *)arg4;
@end

@interface NSObject (NSKeyValueCodingPrivate)
+ (id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2;
+ (id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2;
@end

@interface NSUserDefaults (NSKeyValueCoding)
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSSet (NSKeyValueCoding)
- (id)_sumForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKeyPath:(id)arg1;
@end

@interface NSNull (NSKeyValueCoding)
- (id)valueForKey:(id)arg1;
@end

@interface NSMutableDictionary (NSKeyValueCoding)
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)takeStoredValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSDictionary (NSKeyValueCoding)
- (id)valueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (id)storedValueForKey:(id)arg1;
- (void)takeStoredValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSArray (NSKeyValueCoding)
- (id)_sumForKeyPath:(id)arg1;
- (id)_avgForKeyPath:(id)arg1;
- (id)_countForKeyPath:(id)arg1;
- (id)_maxForKeyPath:(id)arg1;
- (id)_minForKeyPath:(id)arg1;
- (id)_unionOfObjectsForKeyPath:(id)arg1;
- (id)_unionOfArraysForKeyPath:(id)arg1;
- (id)_unionOfSetsForKeyPath:(id)arg1;
- (id)_distinctUnionOfArraysForKeyPath:(id)arg1;
- (id)_distinctUnionOfObjectsForKeyPath:(id)arg1;
- (id)_distinctUnionOfSetsForKeyPath:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKeyPath:(id)arg1;
@end

@interface NSObject (NSKeyValueCoding)
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (BOOL)validateValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (id)mutableArrayValueForKey:(id)arg1;
- (id)mutableSetValueForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (BOOL)validateValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (id)mutableArrayValueForKeyPath:(id)arg1;
- (id)mutableSetValueForKeyPath:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setNilValueForKey:(id)arg1;
- (id)dictionaryWithValuesForKeys:(id)arg1;
- (void)setValuesForKeysWithDictionary:(id)arg1;
@end

@interface NSObject (NSKeyValueObserverNotifying)
- (BOOL)_isKVOA;
@end

@interface NSObject (NSKeyValueObservingPrivate)
+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
- (void)_willChangeValuesForKeys:(id)arg1;
- (void)_didChangeValuesForKeys:(id)arg1;
- (void)_changeValueForKey:(id)arg1 usingBlock:(id)arg2;
- (id)_implicitObservationInfo;
@end

@interface NSObject (NSDeprecatedKeyValueObservingCustomization)
+ (void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
@end

@interface NSObject (NSKeyValueObservingCustomization)
+ (id)_keysForValuesAffectingValueForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)setObservationInfo:(void *)arg1;
- (void *)observationInfo;
@end

@interface NSObject (NSKeyValueObserverNotification)
- (void)willChangeValueForKey:(id)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3;
- (void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;
- (void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3;
@end

@interface NSSet (NSKeyValueObserverRegistration)
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
@end

@interface NSArray (NSKeyValueObserverRegistration)
- (void)addObserver:(id)arg1 toObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3 options:(unsigned long long)arg4 context:(void *)arg5;
- (void)removeObserver:(id)arg1 fromObjectsAtIndexes:(id)arg2 forKeyPath:(id)arg3;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
@end

@interface NSObject (NSKeyValueObserverRegistration)
- (void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)_removeObserver:(id)arg1 forProperty:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
@end

@interface NSObject (NSKeyValueObserving)
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@end

@interface NSObject (NSKeyedUnarchiverObjectSubstitution)
+ (Class)classForKeyedUnarchiver;
@end

@interface NSObject (NSKeyedArchiverObjectSubstitution)
+ (id)classFallbacksForKeyedArchiver;
- (Class)classForKeyedArchiver;
- (id)replacementObjectForKeyedArchiver:(id)arg1;
@end

@interface NSCoder (NSKeyedGeometryCoding)
- (void)encodePoint:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)encodeSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodeRect:(struct CGRect)arg1 forKey:(id)arg2;
- (struct CGPoint)decodePointForKey:(id)arg1;
- (struct CGSize)decodeSizeForKey:(id)arg1;
- (struct CGRect)decodeRectForKey:(id)arg1;
@end

@interface NSLocale (NSLocale)
+ (id)autoupdatingCurrentLocale;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
@end

@interface NSLogicalTest (NSInternal)
+ (id)_logicalTestFromDescriptor:(id)arg1;
- (id)_initFromRecord:(id)arg1;
@end

@interface NSComparisonPredicate (NSMetadataQueryPrivate)
- (id)generateMetadataDescription;
@end

@interface NSCompoundPredicate (NSMetadataQueryPrivate)
- (id)generateMetadataDescription;
@end

@interface NSPredicate (NSMetadataQueryPrivate)
- (id)generateMetadataDescription;
@end

@interface NSString (_NSMetadataQueryExtensions)
- (id)__escapeString5991;
@end

@interface NSIndexSet (_NSMetadataQueryExtensions)
- (unsigned long long)_indexAtIndex:(unsigned long long)arg1;
@end

@interface NSMiddleSpecifier (NSInternal)
+ (unsigned long long)_middleIndexForCount:(unsigned long long)arg1;
@end

@interface NSNetServiceBrowser (NSDeprecated)
- (void)searchForAllDomains;
@end

@interface NSNetService (NSDeprecated)
- (id)protocolSpecificInformation;
- (void)setProtocolSpecificInformation:(id)arg1;
@end

@interface NSNetworkSettings (NSInternal)
- (void)_updateProxySettings;
- (void)_listenForProxySettingChanges;
- (id)_init;
@end

@interface NSNull (NSNull)
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@end

@interface NSMutableString (NSCharacterSetMethods)
- (void)__oldnf_deleteAllCharactersFromSet:(id)arg1;
- (void)__oldnf_replaceAllAppearancesOfString:(id)arg1 withString:(id)arg2;
- (void)__oldnf_replaceFirstAppearanceOfString:(id)arg1 withString:(id)arg2;
- (void)__oldnf_replaceLastAppearanceOfString:(id)arg1 withString:(id)arg2;
@end

@interface NSString (NSSearchMethods)
- (void)__oldnf_copyToUnicharBuffer:(unsigned short **)arg1 saveLength:(long long *)arg2;
- (id)__oldnf_stringWithSeparator:(unsigned short)arg1 atFrequency:(long long)arg2;
- (BOOL)__oldnf_containsString:(id)arg1;
- (BOOL)__oldnf_containsChar:(BOOL)arg1;
- (BOOL)__oldnf_containsCharFromSet:(id)arg1;
- (id)__oldnf_componentsSeparatedBySet:(id)arg1;
@end

@interface NSNumberFormatter (NSNumberFormatterCompatibility2)
- (void)__oldnf_addThousandSeparators:(id)arg1 withBuffer:(CDStruct_177dfe65 *)arg2;
- (id)__oldnf_addThousandSeparatorsToFormat:(id)arg1 withBuffer:(CDStruct_177dfe65 *)arg2;
- (void)__oldnf_addInternalRedToTextAttributesOfNegativeValues;
- (BOOL)__oldnf_containsColorForTextAttributesOfNegativeValues;
- (void)__oldnf_removeInternalRedFromTextAttributesOfNegativeValues;
- (void)__oldnf_setLocalizationFromDefaults;
- (void)__oldnf_surroundValueInString:(unsigned short *)arg1 withLength:(long long *)arg2 andBuffer:(CDStruct_177dfe65 *)arg3;
- (id)__oldnf_numberStringForValueObject:(id)arg1 withBuffer:(CDStruct_177dfe65 *)arg2 andNegativeFlag:(BOOL)arg3;
- (BOOL)__oldnf_decimalIsNotANumber:(id)arg1;
- (id)__oldnf_stringForObjectValue:(id)arg1;
- (BOOL)__oldnf_getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
@end

@interface NSNumberFormatter (NSNumberFormatterCompatibility)
+ (void)_setDefaultRedColor:(id)arg1;
- (void)_addInternalRedToTextAttributesOfNegativeValues;
- (BOOL)_containsColorForTextAttributesOfNegativeValues;
- (void)_removeInternalRedFromTextAttributesOfNegativeValues;
- (void)setLocalizationFromDefaults;
- (BOOL)hasThousandSeparators;
- (void)setHasThousandSeparators:(BOOL)arg1;
- (id)thousandSeparator;
- (void)setThousandSeparator:(id)arg1;
- (BOOL)localizesFormat;
- (void)setLocalizesFormat:(BOOL)arg1;
- (id)format;
- (void)setFormat:(id)arg1;
- (id)attributedStringForZero;
- (void)setAttributedStringForZero:(id)arg1;
- (id)attributedStringForNil;
- (void)setAttributedStringForNil:(id)arg1;
- (id)attributedStringForNotANumber;
- (void)setAttributedStringForNotANumber:(id)arg1;
- (id)roundingBehavior;
- (void)setRoundingBehavior:(id)arg1;
@end

@interface NSObject (NSDiscardableContentProxy)
- (id)autoContentAccessingProxy;
@end

@interface NSObject (NSObject)
+ (void)initialize;
+ (void)load;
+ (BOOL)instancesImplementSelector:(SEL)arg1;
+ (BOOL)implementsSelector:(SEL)arg1;
+ (void)poseAsClass:(Class)arg1;
+ (void)setVersion:(long long)arg1;
+ (long long)version;
- (id)awakeAfterUsingCoder:(id)arg1;
- (Class)classForCoder;
- (id)replacementObjectForCoder:(id)arg1;
- (BOOL)implementsSelector:(SEL)arg1;
@end

@interface NSArray (NSScriptingInternal)
- (id)_scriptingValueForSpecifier:(id)arg1;
- (id)_scriptingObjectForSpecifier:(id)arg1;
- (id)_scriptingArrayOfObjectsForSpecifier:(id)arg1;
- (id)_scriptingSetOfObjectsForSpecifier:(id)arg1;
@end

@interface NSObject (NSScriptingInternal)
- (id)_scriptingIndicesOfObjectsAfterValidatingSpecifier:(id)arg1;
- (id)_scriptingValueForSpecifier:(id)arg1;
- (unsigned long long)_scriptingIndexOfObjectForSpecifier:(id)arg1;
- (id)_scriptingIndexesOfObjectsForSpecifier:(id)arg1;
- (long long *)_scriptingIndicesOfObjectsForSpecifier:(id)arg1 count:(long long *)arg2;
- (id)_scriptingValueForKey:(id)arg1;
- (unsigned long long)_scriptingObjectCountInValueForKey:(id)arg1;
- (BOOL)_scriptingShouldCheckObjectIndexes;
- (id)_scriptingObjectAtIndex:(unsigned long long)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectsAtIndexes:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectWithName:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectWithUniqueID:(id)arg1 inValueForKey:(id)arg2;
- (unsigned long long)_scriptingIndexOfObjectWithName:(id)arg1 inValueForKey:(id)arg2;
- (unsigned long long)_scriptingIndexOfObjectWithUniqueID:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingObjectForSpecifier:(id)arg1;
- (id)_scriptingArrayOfObjectsForSpecifier:(id)arg1;
- (id)_scriptingSetOfObjectsForSpecifier:(id)arg1;
- (id)_scriptingCoerceValue:(id)arg1 forKey:(id)arg2;
- (BOOL)_scriptingCanSetValue:(id)arg1 forSpecifier:(id)arg2;
- (id)_scriptingSetValue:(id)arg1 forKey:(id)arg2;
- (BOOL)_scriptingCanAddObjectsToValueForKey:(id)arg1;
- (BOOL)_scriptingCanInsertBeforeOrReplaceObjectsAtIndexes:(id)arg1 inValueForKey:(id)arg2;
- (id)_scriptingAddObjectsFromArray:(id)arg1 toValueForKey:(id)arg2;
- (id)_scriptingAddObjectsFromSet:(id)arg1 toValueForKey:(id)arg2;
- (id)_scriptingInsertObjects:(id)arg1 atIndexes:(id)arg2 inValueForKey:(id)arg3;
- (id)_scriptingReplaceObjectAtIndex:(unsigned long long)arg1 withObjects:(id)arg2 inValueForKey:(id)arg3;
- (id)_scriptingInsertObject:(id)arg1 inValueForKey:(id)arg2;
- (void)_scriptingRemoveObjectsAtIndexes:(id)arg1 fromValueForKey:(id)arg2;
- (void)_scriptingRemoveAllObjectsFromValueForKey:(id)arg1;
@end

@interface NSObject (NSScripting)
- (id)scriptingValueForSpecifier:(id)arg1;
- (id)scriptingProperties;
- (id)coerceValueForScriptingProperties:(id)arg1;
- (void)setScriptingProperties:(id)arg1;
- (id)_scriptingCopyWithProperties:(id)arg1 forValueForKey:(id)arg2 ofContainer:(id)arg3;
- (id)copyScriptingValue:(id)arg1 forKey:(id)arg2 withProperties:(id)arg3;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
@end

@interface NSArray (NSArrayPathExtensions)
- (id)pathsMatchingExtensions:(id)arg1;
- (id)stringsByAppendingPathComponent:(id)arg1;
@end

@interface NSString (NSPathUtilities)
+ (id)pathWithComponents:(id)arg1;
- (id)pathComponents;
- (BOOL)isAbsolutePath;
- (id)lastPathComponent;
- (id)stringByDeletingLastPathComponent;
- (id)stringByAppendingPathComponent:(id)arg1;
- (id)pathExtension;
- (id)stringByDeletingPathExtension;
- (id)stringByAppendingPathExtension:(id)arg1;
- (id)stringByAbbreviatingWithTildeInPath;
- (id)stringByExpandingTildeInPath;
- (id)_stringByStandardizingPathUsingCache:(BOOL)arg1;
- (id)stringByStandardizingPath;
- (id)_stringByResolvingSymlinksInPathUsingCache:(BOOL)arg1;
- (id)stringByResolvingSymlinksInPath;
- (id)stringsByAppendingPaths:(id)arg1;
- (const char *)fileSystemRepresentation;
- (BOOL)getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;
- (unsigned long long)completePathIntoString:(id *)arg1 caseSensitive:(BOOL)arg2 matchesIntoArray:(id *)arg3 filterTypes:(id)arg4;
- (id)stringByConvertingPathToURL;
- (id)stringByConvertingURLToPath;
@end

@interface NSPointerArray (NSArrayConveniences)
+ (id)pointerArrayWithStrongObjects;
+ (id)pointerArrayWithWeakObjects;
- (id)mutableArray;
- (id)allObjects;
@end

@interface NSPortMessage (NSPortMessageMachPortAdditions)
- (id)initWithMachMessage:(void *)arg1;
@end

@interface NSValue (NSValuePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSTimeZone (NSTimeZonePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSString (NSStringPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSSortDescriptor (NSSortDescriptorPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSSet (NSSetPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSNull (NSNullPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSNotification (NSNotificationPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSIndexSet (NSIndexSetPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSHTTPCookie (NSHTTPCookiePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSException (NSExceptionPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSError (NSErrorPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDictionary (NSDictionaryPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSDate (NSDatePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSData (NSDataPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSCharacterSet (NSCharacterSetPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSCalendarDate (NSCalendarDatePortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSAttributedString (NSAttributedStringPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSArray (NSArrayPortCoding)
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSObject (NSObjectPortCoding)
+ (id)replacementObjectForPortCoder:(id)arg1;
- (Class)classForPortCoder;
- (id)replacementObjectForPortCoder:(id)arg1;
@end

@interface NSPositionalSpecifier (NSInternal)
+ (id)_positionalSpecifierFromDescriptor:(id)arg1;
- (id)_initFromRecord:(id)arg1;
- (BOOL)_specifiesSetting;
- (BOOL)_specifiesUnorderedAddition;
- (BOOL)_insertionIsAtEnd;
@end

@interface NSMutableSet (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSSet (NSPredicateSupport)
- (id)filteredSetUsingPredicate:(id)arg1;
@end

@interface NSMutableArray (NSPredicateSupport)
- (void)filterUsingPredicate:(id)arg1;
@end

@interface NSArray (NSPredicateSupport)
- (id)filteredArrayUsingPredicate:(id)arg1;
@end

@interface NSCoder (NSCoderOldObject)
- (void)encodeNXObject:(id)arg1;
- (id)decodeNXObject;
@end

@interface NSValue (NSKindOfAdditions)
- (BOOL)isNSValue__;
@end

@interface NSString (NSKindOfAdditions)
- (BOOL)isNSString__;
@end

@interface NSData (NSKindOfAdditions)
- (BOOL)isNSData__;
@end

@interface NSNumber (NSKindOfAdditions)
- (BOOL)isNSNumber__;
@end

@interface NSObject (NSKindOfAdditions)
- (BOOL)isNSArray__;
- (BOOL)isNSDictionary__;
- (BOOL)isNSSet__;
- (BOOL)isNSNumber__;
- (BOOL)isNSData__;
- (BOOL)isNSDate__;
- (BOOL)isNSString__;
- (BOOL)isNSValue__;
@end

@interface NSRandomSpecifier (NSInternal)
+ (unsigned long long)_randomIndexForCount:(unsigned long long)arg1;
@end

@interface NSObject (NSDelayedPerforming)
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
+ (void)cancelPreviousPerformRequestsWithTarget:(id)arg1;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4;
@end

@interface NSRunLoop (NSRunLoop)
+ (id)_new:(id)arg1;
+ (id)currentRunLoop;
+ (id)mainRunLoop;
- (void)_enumerateInfoPairsWithBlock:(id)arg1;
- (void)_portInvalidated:(id)arg1;
- (BOOL)_containsPort:(id)arg1 forMode:(id)arg2;
- (void)_addPort:(id)arg1 forMode:(id)arg2;
- (void)_removePort:(id)arg1 forMode:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (struct __CFRunLoop *)getCFRunLoop;
- (id)description;
- (void)addPort:(id)arg1 forMode:(id)arg2;
- (void)removePort:(id)arg1 forMode:(id)arg2;
- (BOOL)containsPort:(id)arg1 forMode:(id)arg2;
- (id)portsForMode:(id)arg1;
- (void)addTimer:(id)arg1 forMode:(id)arg2;
- (void)removeTimer:(id)arg1 forMode:(id)arg2;
- (id)timersForMode:(id)arg1;
- (BOOL)containsTimer:(id)arg1 forMode:(id)arg2;
- (id)allModes;
- (id)currentMode;
- (void)_invalidateTimers;
- (id)limitDateForMode:(id)arg1;
- (void)_wakeup;
- (void)acceptInputForMode:(id)arg1 beforeDate:(id)arg2;
- (BOOL)runMode:(id)arg1 beforeDate:(id)arg2;
- (BOOL)runMode:(id)arg1 untilDate:(id)arg2;
- (void)run;
- (void)runUntilDate:(id)arg1;
- (BOOL)runBeforeDate:(id)arg1;
- (void)configureAsServer;
- (void)performSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3 order:(unsigned long long)arg4 modes:(id)arg5;
- (void)cancelPerformSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
- (void)cancelPerformSelectorsWithTarget:(id)arg1;
@end

@interface NSScriptSuiteRegistry (NSAETEMaking)
- (unsigned long long)_appendTypeDefinitionsSuiteDeclarationToAETEData:(id)arg1;
- (unsigned long long)_appendTypeNamesSuiteDeclarationToAETEData:(id)arg1;
- (id)_aeteDataForAllSuites;
@end

@interface NSScriptValueTypeDescription (NSAETEMaking)
- (void)appendObjectClassDeclarationToAETEData:(id)arg1;
@end

@interface NSScriptSuiteDescription (NSAETEMaking)
- (unsigned short)appendSuiteDeclarationsToAETEData:(id)arg1;
@end

@interface NSScriptRecordFieldDescription (NSAETEMaking)
- (void)appendPropertyDeclarationToAETEData:(id)arg1;
@end

@interface NSScriptPropertyDescription (NSAETEMaking)
- (void)appendElementClassDeclarationToAETEData:(id)arg1;
@end

@interface NSScriptEnumerationDescription (NSAETEMaking)
- (BOOL)hasHiddenParts;
- (void)appendEnumerationDeclarationToAETEData:(id)arg1 includingParts:(int)arg2;
@end

@interface NSScriptDeclaredRecordTypeDescription (NSAETEMaking)
- (BOOL)hasHiddenParts;
- (void)appendObjectClassDeclarationToAETEData:(id)arg1 includingParts:(int)arg2;
@end

@interface NSScriptComplexTypeDescription (NSAETEMaking)
- (void)appendObjectClassDeclarationToAETEData:(id)arg1;
@end

@interface NSScriptCommandDescription (NSAETEMaking)
- (BOOL)_hasHiddenParts;
- (unsigned short)_appendEventDeclarationsToAETEData:(id)arg1 includingParts:(int)arg2;
@end

@interface NSScriptClassDescription (NSAETEMaking)
- (BOOL)_hasHiddenParts;
- (unsigned short)_appendObjectClassDeclarationsToAETEData:(id)arg1 includingParts:(int)arg2;
@end

@interface NSScriptAttributeDescription (NSAETEMaking)
- (unsigned short)appendPropertyDeclarationsToAETEData:(id)arg1;
@end

@interface NSScriptArgumentDescription (NSAETEMaking)
- (unsigned short)appendParameterDeclarationsToAETEData:(id)arg1;
@end

@interface NSURL (NSScriptAppleEventConversion)
+ (id)_scriptingFileWithDescriptor:(id)arg1;
- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
- (id)_scriptingFileDescriptor;
@end

@interface NSString (NSScriptAppleEventConversion)
+ (id)_scriptingTextWithDescriptor:(id)arg1;
- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
- (id)_scriptingTextDescriptor;
@end

@interface NSScriptObjectSpecifier (NSScriptAppleEventConversion)
+ (id)_scriptingSpecifierWithDescriptor:(id)arg1;
- (id)_scriptingSpecifierDescriptor;
@end

@interface NSPositionalSpecifier (NSScriptAppleEventConversion)
+ (id)_scriptingLocationSpecifierWithDescriptor:(id)arg1;
@end

@interface NSObject (NSScriptAppleEventConversion)
+ (id)_scriptingEnumeratorOfType:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfOneOfAlternativeTypes:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfComplexType:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfObjectType:(id)arg1 withDescriptor:(id)arg2;
+ (id)_scriptingValueOfValueType:(id)arg1 withDescriptor:(id)arg2;
- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
- (id)_scriptingDebugDescription;
- (id)_scriptingDescriptorOfComplexType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDescriptorOfEnumeratorType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDescriptorOfObjectType:(id)arg1 orReasonWhyNot:(id *)arg2;
- (id)_scriptingDescriptorOfValueType:(id)arg1 orReasonWhyNot:(id *)arg2;
@end

@interface NSNumber (NSScriptAppleEventConversion)
+ (id)_scriptingBooleanWithDescriptor:(id)arg1;
+ (id)_scriptingIntegerWithDescriptor:(id)arg1;
+ (id)_scriptingNumberWithDescriptor:(id)arg1;
+ (id)_scriptingRealWithDescriptor:(id)arg1;
+ (id)_scriptingTypeWithDescriptor:(id)arg1;
- (id)_scriptingBooleanDescriptor;
- (id)_scriptingIntegerDescriptor;
- (id)_scriptingNumberDescriptor;
- (id)_scriptingRealDescriptor;
- (id)_scriptingTypeDescriptor;
@end

@interface NSNull (NSScriptAppleEventConversion)
+ (id)scriptingMissingValueWithDescriptor:(id)arg1;
- (id)_scriptingNullDescriptor;
@end

@interface NSDictionary (NSScriptAppleEventConversion)
+ (id)_scriptingDictionaryOfType:(id)arg1 withDescriptor:(id)arg2;
- (id)_scriptingDescriptorOfRecordType:(id)arg1 orReasonWhyNot:(id *)arg2;
@end

@interface NSDate (NSScriptAppleEventConversion)
+ (id)_scriptingDateWithDescriptor:(id)arg1;
- (id)_scriptingDateDescriptor;
@end

@interface NSData (NSScriptAppleEventConversion)
+ (id)_scriptingPointWithDescriptor:(id)arg1;
+ (id)_scriptingRectangleWithDescriptor:(id)arg1;
- (id)_scriptingDebugDescription;
- (id)_scriptingPointDescriptor;
- (id)_scriptingRectangleDescriptor;
@end

@interface NSArray (NSScriptAppleEventConversion)
+ (id)_scriptingArrayOfType:(id)arg1 withDescriptor:(id)arg2;
- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
- (id)_scriptingDescriptorOfListType:(id)arg1 orReasonWhyNot:(id *)arg2;
@end

@interface NSAppleEventDescriptor (NSScriptConversion)
+ (id)_descriptorOfType:(id)arg1 withValue:(id)arg2 orReasonWhyNot:(id *)arg3;
+ (id)_descriptorOfType:(id)arg1 withValue:(id)arg2;
+ (id)_scriptingAnyWithDescriptor:(id)arg1;
- (id)_valueOfType:(id)arg1;
- (id)_valueOfType:(id)arg1 withDeferredSpecifierEvaluation:(BOOL)arg2;
- (int)_scriptingAlternativeValueRankWithDescriptor:(id)arg1;
- (id)_scriptingAnyDescriptor;
@end

@interface NSScriptClassDescription (NSInternal)
- (id)_initWithProperties:(const CDStruct_f7128cc9 *)arg1 primitiveType:(id)arg2;
- (id)_initWithProperties:(const CDStruct_f7128cc9 *)arg1 defaultSubcontainerAttributeKey:(id)arg2 inverseRelationshipKeys:(id)arg3;
- (id)_initWithClassDescription:(id)arg1 synonymDescription:(id)arg2;
- (void)_reconcileToSuiteRegistry:(id)arg1;
- (void)_reconcileToExtensionDescription:(id)arg1 suiteRegistry:(id)arg2;
- (id)_commandMethodSelectorsByName;
- (BOOL)_isFromSDEF;
- (BOOL)_isSynonym;
- (id)_synonymDescriptions;
- (id)_propertyDescriptionForAppleEventCode:(unsigned int)arg1 checkSubclasses:(BOOL)arg2 superclasses:(BOOL)arg3;
- (id)_propertyDescriptionForPresentableName:(id)arg1 checkSubclasses:(BOOL)arg2 superclasses:(BOOL)arg3;
- (id)_propertyDescriptionForAppleEventCode:(unsigned int)arg1 checkSubclasses:(BOOL)arg2;
- (id)_propertyDescriptionForKey:(id)arg1 checkSubclasses:(BOOL)arg2 superclasses:(BOOL)arg3;
- (id)_propertyDescriptionForKey:(id)arg1 checkSubclasses:(BOOL)arg2;
- (id)_typeDescriptionForKey:(id)arg1;
- (void)_forKey:(id)arg1 getType:(id *)arg2 andSuite:(id *)arg3;
- (BOOL)_shouldByDefaultInsertAtBeginningOfRelationshipForKey:(id)arg1;
- (id)_contentsTypeDescription;
- (id)_primitiveTypeDescription;
- (BOOL)_isToManyRelationshipOrderedForKey:(id)arg1;
@end

@interface NSScriptClassDescription (NSPrivate)
- (BOOL)_isHidden;
- (id)_presentableDescription;
- (id)_presentableNames;
- (id)_presentablePluralName;
- (id)_firstPresentableName;
- (id)_aetePropertyDescriptions;
- (id)_aeteElementClassDescriptions;
@end

@interface NSObject (NSScriptClassDescription)
- (unsigned int)classCode;
- (id)className;
@end

@interface NSScriptClassDescription (NSDeprecated)
- (BOOL)isReadOnlyKey:(id)arg1;
@end

@interface NSScriptCommand (NSCompatibility)
- (void)_setScriptErrorOffendingObjectDescriptor:(id)arg1;
- (void)_setScriptErrorExpectedTypeDescriptor:(id)arg1;
- (id)_scriptErrorOffendingObjectDescriptor;
- (id)_scriptErrorExpectedTypeDescriptor;
@end

@interface NSScriptCommand (NSInternal)
+ (BOOL)_getReceiversSpecifierOrUnnamedArgument:(id *)arg1 fromEvent:(id)arg2 usingDescription:(id)arg3;
+ (id)_argumentValueFromParameterDescriptor:(id)arg1 usingTypeDescription:(id)arg2;
+ (BOOL)_getArguments:(id)arg1 withParameters:(CDStruct_89ddc8e1)arg2;
+ (id)_commandFromEvent:(id)arg1;
- (BOOL)_setAdditionalThingsFromEvent:(id)arg1;
- (void)_setAppleEventHandling:(id)arg1;
- (void)_resumeExecutionWithResult:(id)arg1;
- (void)_populateReplyAppleEventWithResult:(id)arg1;
- (void)_setScriptErrorExpectedType:(unsigned int)arg1;
@end

@interface NSNull (NSScriptingInternalCommandHandling)
- (BOOL)_scriptingMightHandleCommand:(id)arg1;
- (BOOL)_scriptingCanHandleCommand:(id)arg1;
@end

@interface NSArray (NSScriptingInternalCommandHandling)
- (BOOL)_scriptingMightHandleCommand:(id)arg1;
- (BOOL)_scriptingCanHandleCommand:(id)arg1;
- (void)_scriptingAddToReceiversArray:(id)arg1;
@end

@interface NSObject (NSScriptingInternalCommandHandling)
- (BOOL)_scriptingMightHandleCommand:(id)arg1;
- (BOOL)_scriptingCanHandleCommand:(id)arg1;
- (void)_scriptingAddToReceiversArray:(id)arg1;
@end

@interface NSScriptCommand (NSCompatibility2)
+ (id)_commandFromEvent:(id)arg1 inConstructionContext:(id)arg2;
@end

@interface NSScriptCommandDescription (NSInternal)
- (id)_initWithProperties:(const CDStruct_32caee37 *)arg1;
- (id)_initWithProperties:(const CDStruct_32caee37 *)arg1 commandName:(id)arg2 resultTypeAppleEventCode:(unsigned int)arg3;
- (void)_reconcileToSuiteRegistry:(id)arg1;
- (BOOL)_isFromSDEF;
- (id)_synonymDescriptions;
- (BOOL)_matchesAppleEventCode:(unsigned int)arg1 classCode:(unsigned int)arg2;
@end

@interface NSScriptCommandDescription (NSPrivate)
- (id)_argumentDescriptions;
- (id)_resultTypeDescription;
- (BOOL)_isHidden;
- (id)_presentableDescription;
- (id)_presentableNames;
- (id)_presentableResultDescription;
- (id)_firstPresentableName;
- (id)_argumentDescriptionForKey:(id)arg1;
@end

@interface NSScriptExecutionContext (NSInternal)
- (void)_setRangeContainerClassDescription:(id)arg1;
- (id)_rangeContainerClassDescription;
- (void)_setTestedObjectTypeDescription:(id)arg1;
- (id)_testedObjectTypeDescription;
- (id)_topLevelObjectClassDescription;
- (void)_setErrorNumber:(short)arg1;
- (void)_setErrorOffendingObjectDescriptor:(id)arg1;
- (void)_setErrorExpectedTypeDescriptor:(id)arg1;
- (void)_setErrorExpectedType:(unsigned int)arg1;
- (short)_errorNumber;
- (id)_errorOffendingObjectDescriptor;
- (id)_errorExpectedTypeDescriptor;
- (void)_setErrorWithEvaluatedObjectSpecifier:(id)arg1;
- (void)_resetErrorInfo;
@end

@interface NSScriptExecutionContext (NSPrivate)
- (long long)_debugLoggingLevel;
@end

@interface NSObject (NSScriptKeyValueCodingInternal)
+ (SEL)_selectorToGetValueWithNameForKey:(id)arg1;
+ (SEL)_selectorToGetValueWithUniqueIDForKey:(id)arg1;
- (void)_compatibility_takeValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSObject (NSScriptKeyValueCodingPrivate)
- (long long)_supportsGetValueWithNameForKey:(id)arg1 perhapsByOverridingClass:(Class)arg2;
- (long long)_supportsGetValueWithUniqueIDForKey:(id)arg1 perhapsByOverridingClass:(Class)arg2;
@end

@interface NSObject (NSScriptKeyValueCoding)
- (id)valueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2;
- (id)valueWithName:(id)arg1 inPropertyWithKey:(id)arg2;
- (id)valueWithUniqueID:(id)arg1 inPropertyWithKey:(id)arg2;
- (void)replaceValueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2 withValue:(id)arg3;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2 inPropertyWithKey:(id)arg3;
- (void)removeValueAtIndex:(unsigned long long)arg1 fromPropertyWithKey:(id)arg2;
- (void)insertValue:(id)arg1 inPropertyWithKey:(id)arg2;
- (id)coerceValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSArray (NSScriptKeyValueCoding)
- (id)valueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2;
- (void)replaceValueAtIndex:(unsigned long long)arg1 inPropertyWithKey:(id)arg2 withValue:(id)arg3;
- (void)insertValue:(id)arg1 atIndex:(unsigned long long)arg2 inPropertyWithKey:(id)arg3;
- (void)removeValueAtIndex:(unsigned long long)arg1 fromPropertyWithKey:(id)arg2;
- (id)coerceValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSScriptValueTypeDescription (NSLegacyPropertyListParsing)
+ (id)valueTypeDescriptionFromName:(id)arg1 declaration:(id)arg2;
@end

@interface NSScriptToOneRelationshipDescription (NSLegacyPropertyListParsing)
@end

@interface NSScriptToManyRelationshipDescription (NSLegacyPropertyListParsing)
+ (id)propertyDescriptionFromKey:(id)arg1 implDeclaration:(id)arg2 presoDeclaration:(id)arg3 suiteName:(id)arg4 className:(id)arg5;
@end

@interface NSScriptSuiteDescription (NSLegacyPropertyListParsing)
+ (id)sortedClassDescriptions:(id)arg1;
+ (id)_classDescriptionsFromPropertyListDeclarations:(id)arg1 suiteName:(id)arg2;
+ (id)_classSynonymDescriptionsFromImplDeclarations:(id)arg1 presoDeclarations:(id)arg2;
+ (id)_commandDescriptionsFromPropertyListDeclarations:(id)arg1 suiteName:(id)arg2;
+ (id)_typeDescriptionsFromEnumerationImplDeclarations:(id)arg1 presoDeclarations:(id)arg2 valueTypeDeclarations:(id)arg3;
+ (id)suiteDescriptionFromPropertyListDeclaration:(id)arg1 bundle:(id)arg2;
+ (unsigned int)currentSuiteAppleEventCode;
+ (id)currentSuiteTerminology;
@end

@interface NSScriptPropertyDescription (NSLegacyPropertyListParsing)
+ (id)propertyDescriptionFromKey:(id)arg1 implDeclaration:(id)arg2 presoDeclaration:(id)arg3 suiteName:(id)arg4 className:(id)arg5;
- (id)presentableRelationshipClassName;
@end

@interface NSScriptEnumerationDescription (NSLegacyPropertyListParsing)
+ (id)_enumeratorDescriptionsFromImplDeclarations:(id)arg1 presoDeclarations:(id)arg2;
+ (id)enumerationDescriptionFromName:(id)arg1 implDeclaration:(id)arg2 presoDeclaration:(id)arg3;
@end

@interface NSScriptCommandDescription (NSLegacyPropertyListParsing)
+ (id)_argumentDescriptionsFromUnnamedImplDeclaration:(id)arg1 presoDeclaration:(id)arg2 namedImplDeclarations:(id)arg3 presoDeclarations:(id)arg4 suiteName:(id)arg5 commandName:(id)arg6;
- (id)_initWithSuiteName:(id)arg1 commandName:(id)arg2 implDeclaration:(id)arg3 presoDeclaration:(id)arg4;
@end

@interface NSScriptClassDescription (NSLegacyPropertyListParsing)
+ (id)_sortedAETEPropertyDescriptions:(id)arg1;
+ (id)_sortedAETEElementClassDescriptions:(id)arg1;
+ (id)_propertyDescriptionsOfClass:(Class)arg1 fromImplDeclarations:(id)arg2 presoDeclarations:(id)arg3 suiteName:(id)arg4 className:(id)arg5;
- (id)_initWithSuiteName:(id)arg1 className:(id)arg2 implDeclaration:(id)arg3 presoDeclaration:(id)arg4;
@end

@interface NSScriptAttributeDescription (NSLegacyPropertyListParsing)
+ (id)propertyDescriptionFromKey:(id)arg1 implDeclaration:(id)arg2 presoDeclaration:(id)arg3 suiteName:(id)arg4 className:(id)arg5;
@end

@interface NSScriptArgumentDescription (NSLegacyPropertyListParsing)
+ (id)argumentDescriptionFromName:(id)arg1 implDeclaration:(id)arg2 presoDeclaration:(id)arg3 suiteName:(id)arg4 commandName:(id)arg5;
@end

@interface NSObject (NSScriptLegacyPropertyListParsing)
- (id)_asScriptTerminologyNameArray;
- (id)_asScriptTerminologyNameString;
@end

@interface NSDictionary (NSScriptLegacyPropertyListParsing)
- (id)_scriptClassTerminologyForName:(id)arg1;
- (id)_scriptCommandTerminologyForName:(id)arg1;
- (BOOL)_scriptIsYesForKey:(id)arg1 default:(BOOL)arg2;
- (id)_scriptTerminologyDescription;
- (id)_scriptTerminologyName;
- (id)_scriptTerminologyNameOrNames;
- (id)_scriptTerminologyPluralName;
- (BOOL)_scriptFlagsForKey:(id)arg1 containFlag:(id)arg2;
@end

@interface NSObject (NSScriptObjectSpecifierBackstop)
- (id)objectSpecifier;
@end

@interface NSScriptObjectSpecifier (NSCompatibility)
+ (id)_objectSpecifierFromDescriptor:(id)arg1;
+ (id)_objectSpecifierFromDescriptor:(id)arg1 inCommandConstructionContext:(id)arg2;
- (id)_asDescriptor;
@end

@interface NSScriptObjectSpecifier (NSInternal)
+ (BOOL)_fromRecord:(id)arg1 getContainerInfo:(CDStruct_4cb9d06e *)arg2 andKey:(id *)arg3;
+ (BOOL)_fromRecord:(id)arg1 getContainerInfo:(CDStruct_4cb9d06e *)arg2;
+ (unsigned int)_keyCodeFromRecord:(id)arg1;
+ (BOOL)_fromContainerInfo:(const CDStruct_4cb9d06e *)arg1 andKeyCode:(unsigned int)arg2 getAdjustedContainerInfo:(CDStruct_4cb9d06e *)arg3 andKey:(id *)arg4;
- (id)_initFromRecord:(id)arg1;
- (void)_setDescriptorNoCopy:(id)arg1;
- (id)_descriptor;
- (void)_resetEvaluationErrorNumber;
- (id)_specifiedValueInContainer:(id)arg1;
- (long long *)_specifiedIndicesOfObjectOrObjectsInContainer:(id)arg1 count:(long long *)arg2;
- (unsigned long long)_specifiedIndexOfObjectInContainer:(id)arg1;
- (id)_specifiedIndexesOfObjectsInContainer:(id)arg1;
- (BOOL)_specifiesMultipleObjectsPerContainer;
- (BOOL)_specifiesSingleIndexedObjectPerContainer;
- (BOOL)_specifiesMultipleIndexedObjectsPerContainer;
- (BOOL)_specifiesCollection;
- (BOOL)_specifiesValueContainedByObjectBeingTested;
- (id)_completeTypeDescription;
- (id)_moreCompleteVariantOfTypeDescription:(id)arg1;
- (id)_typeDescription;
- (unsigned long long)_specifiedObjectTreeDepth;
- (id)_simpleDescription;
- (id)_createdDescriptor;
- (BOOL)_putKeyFormAndDataInRecord:(id)arg1;
@end

@interface NSAppleEventDescriptor (NSScriptPrintSettingsRecord)
- (id)_printSettingsValue;
@end

@interface NSScriptCommand (NSCommonToStandardCommands)
- (void)_setScriptErrorFromKVCException:(id)arg1;
@end

@interface NSScriptValueTypeDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptTypeDescription (NSDebugging)
- (id)description;
@end

@interface NSScriptToOneRelationshipDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptToManyRelationshipDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptSuiteRegistry (NSDebugging)
- (id)description;
@end

@interface NSScriptSuiteDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
- (id)description;
@end

@interface NSScriptPropertyDescription (NSDebugging)
- (id)description;
@end

@interface NSScriptPropertiesRecordTypeDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptObjectTypeDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptListTypeDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptEnumerationDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptDeclaredRecordTypeDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptComplexTypeDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptCommandDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
- (id)description;
@end

@interface NSScriptClassDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
- (id)description;
@end

@interface NSScriptAttributeDescription (NSDebugging)
- (id)_termedDescriptionWithTabCount:(unsigned long long)arg1 propertyKindName:(id)arg2;
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptArgumentDescription (NSDebugging)
- (id)_descriptionWithTabCount:(unsigned long long)arg1;
- (id)description;
@end

@interface NSString (NSScriptSuiteDebugging)
+ (id)_scriptStringWithPropertyAccess:(unsigned long long)arg1;
+ (id)_scriptStringWithTabCount:(unsigned long long)arg1;
@end

@interface NSScriptSuiteRegistry (NSInternal)
+ (void)_loadScriptSuites;
- (BOOL)_isLoadingSDEFFiles;
- (id)_classDescriptionForName:(id)arg1;
- (id)_classDescriptionForName:(id)arg1 suiteName:(id)arg2 isValid:(char *)arg3;
- (id)_typeDescriptionForName:(id)arg1;
- (id)_typeDescriptionForName:(id)arg1 suiteName:(id)arg2 isValid:(char *)arg3;
- (id)_objectTypeDescriptionForClassAppleEventCode:(unsigned int)arg1 isValid:(char *)arg2;
- (id)_objectSpecifierTypeDescription;
- (id)_subclassDescriptionsForDescription:(id)arg1;
- (id)_suiteDescriptionsByName;
- (id)_complexTypeDescriptions;
- (id)_listTypeDescriptions;
- (id)_typeDescriptionForAppleEventCode:(unsigned int)arg1;
@end

@interface NSScriptSuiteRegistry (NSPrivate)
- (id)_initWithSDEFData:(id)arg1 otherAppBundle:(id)arg2;
- (id)_suiteDescriptions;
@end

@interface NSMutableData (NSSerialization)
- (void)serializeInt:(int)arg1;
- (void)serializeInts:(int *)arg1 count:(unsigned int)arg2;
- (void)serializeInt:(int)arg1 atIndex:(unsigned int)arg2;
- (void)serializeInts:(int *)arg1 count:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (void)serializeAlignedBytesLength:(unsigned int)arg1;
- (void)serializeAlignedBytes:(void *)arg1 length:(unsigned int)arg2;
@end

@interface NSData (NSDeserialization)
- (int)deserializeIntAtIndex:(unsigned int)arg1;
- (void)deserializeInts:(int *)arg1 count:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (int)deserializeIntAtCursor:(unsigned int *)arg1;
- (void)deserializeInts:(int *)arg1 count:(unsigned int)arg2 atCursor:(unsigned int *)arg3;
- (unsigned int)deserializeAlignedBytesLengthAtCursor:(unsigned int *)arg1;
- (void)deserializeBytes:(void *)arg1 length:(unsigned int)arg2 atCursor:(unsigned int *)arg3;
@end

@interface NSMutableSet (NSMutableSet)
- (Class)classForCoder;
@end

@interface NSSet (NSSet)
+ (id)_z_allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
@end

@interface NSSetCommand (NSInternal)
+ (BOOL)_getArguments:(id)arg1 withParameters:(CDStruct_89ddc8e1)arg2;
@end

@interface NSNull (NSScriptingInternalSetting)
- (id)_scriptingSetValue:(id)arg1 forSpecifier:(id)arg2;
@end

@interface NSArray (NSScriptingInternalSetting)
- (id)_scriptingSetValue:(id)arg1 forSpecifier:(id)arg2;
@end

@interface NSObject (NSScriptingInternalSetting)
- (id)_scriptingSetValue:(id)arg1 forSpecifier:(id)arg2;
@end

@interface NSMutableArray (NSKeyValueSorting)
- (void)sortUsingDescriptors:(id)arg1;
@end

@interface NSArray (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSSet (NSKeyValueSorting)
- (id)sortedArrayUsingDescriptors:(id)arg1;
@end

@interface NSSpecifierTest (NSInternal)
+ (id)_specifierTestFromDescriptor:(id)arg1;
- (id)_initFromRecord:(id)arg1;
@end

@interface NSString (NSComparisonMethods)
- (id)_getBracketedStringFromBuffer:(struct _NSStringBuffer *)arg1 string:(id)arg2;
- (BOOL)_matchesCharacter:(unsigned short)arg1;
- (BOOL)matchesPattern:(id)arg1 caseInsensitive:(BOOL)arg2;
- (BOOL)matchesPattern:(id)arg1;
- (BOOL)isLike:(id)arg1;
- (BOOL)isCaseInsensitiveLike:(id)arg1;
@end

@interface NSObject (NSComparisonMethods)
- (BOOL)isEqualTo:(id)arg1;
- (BOOL)isNotEqualTo:(id)arg1;
- (BOOL)isLessThanOrEqualTo:(id)arg1;
- (BOOL)isLessThan:(id)arg1;
- (BOOL)isGreaterThanOrEqualTo:(id)arg1;
- (BOOL)isGreaterThan:(id)arg1;
- (BOOL)doesContain:(id)arg1;
- (BOOL)isLike:(id)arg1;
- (BOOL)isCaseInsensitiveLike:(id)arg1;
@end

@interface NSStream (NSSocketStreamCreationExtensions)
+ (void)getStreamsToHost:(id)arg1 port:(long long)arg2 inputStream:(id *)arg3 outputStream:(id *)arg4;
@end

@interface NSOutputStream (NSCFOutputStreamAdditions)
- (CDStruct_87dc826d)_cfStreamError;
@end

@interface NSInputStream (NSCFInputStreamAdditions)
- (CDStruct_87dc826d)_cfStreamError;
@end

@interface NSOutputStream (NSOutputStream)
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)outputStreamToMemory;
+ (id)outputStreamToBuffer:(char *)arg1 capacity:(unsigned long long)arg2;
+ (id)outputStreamToFileAtPath:(id)arg1 append:(BOOL)arg2;
+ (id)outputStreamWithURL:(id)arg1 append:(BOOL)arg2;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (BOOL)hasSpaceAvailable;
- (unsigned long long)_cfTypeID;
@end

@interface NSInputStream (NSInputStream)
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)inputStreamWithData:(id)arg1;
+ (id)inputStreamWithFileAtPath:(id)arg1;
+ (id)inputStreamWithURL:(id)arg1;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (BOOL)hasBytesAvailable;
- (unsigned long long)_cfTypeID;
@end

@interface NSStream (NSStream)
- (void)open;
- (void)close;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (unsigned long long)streamStatus;
- (id)streamError;
@end

@interface NSString (NSExtendedStringPropertyListParsing)
- (id)propertyList;
- (id)propertyListFromStringsFileFormat;
@end

@interface NSString (NSStringOtherEncodings)
+ (unsigned long long)defaultCStringEncoding;
+ (const unsigned long long *)availableStringEncodings;
+ (id)localizedNameOfStringEncoding:(unsigned long long)arg1;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 range:(struct _NSRange)arg3 remainingRange:(struct _NSRange *)arg4;
- (void)getCString:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)getCString:(char *)arg1;
- (const char *)UTF8String;
- (const char *)cString;
- (unsigned long long)cStringLength;
- (const char *)lossyCString;
- (unsigned long long)fastestEncoding;
- (unsigned long long)smallestEncoding;
- (BOOL)canBeConvertedToEncoding:(unsigned long long)arg1;
- (id)dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(BOOL)arg2;
- (id)dataUsingEncoding:(unsigned long long)arg1;
- (const char *)cStringUsingEncoding:(unsigned long long)arg1;
- (BOOL)getCString:(char *)arg1 maxLength:(unsigned long long)arg2 encoding:(unsigned long long)arg3;
- (unsigned long long)maximumLengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (BOOL)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (BOOL)getBytes:(char *)arg1 maxLength:(unsigned long long)arg2 filledLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 allowLossyConversion:(BOOL)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
@end

@interface NSString (NSURLExtrasInternal)
- (id)_web_splitAtNonDateCommas_nowarn;
- (id)_web_parseAsKeyValuePair_nowarn;
- (id)_web_parseAsKeyValuePairHandleQuotes_nowarn:(BOOL)arg1;
- (struct _NSRange)_web_rangeOfURLScheme_nowarn;
- (struct _NSRange)_web_rangeOfURLResourceSpecifier_nowarn;
- (id)_web_mimeTypeFromContentTypeHeader_nowarn;
- (id)_web_characterSetFromContentTypeHeader_nowarn;
- (id)_web_fileNameFromContentDispositionHeader_nowarn;
- (id)_web_stringByReplacingValidPercentEscapes_nowarn;
- (BOOL)_web_isJavaScriptURL;
@end

@interface NSString (NSURLExtras)
+ (id)_web_stringRepresentationForBytes:(long long)arg1;
- (BOOL)_web_isCaseInsensitiveEqualToString:(id)arg1;
- (BOOL)_web_hasCaseInsensitivePrefix:(id)arg1;
- (long long)_web_countOfString:(id)arg1;
- (BOOL)_web_looksLikeIPAddress;
- (BOOL)_web_hasCountryCodeTLD;
- (BOOL)_web_domainMatches:(id)arg1;
- (id)_web_domainFromHost;
- (id)_web_stringByTrimmingWhitespace;
- (id)_web_stringByExpandingTildeInPath;
- (id)_web_fixedCarbonPOSIXPath;
- (struct _NSRange)_web_rangeOfURLUserPasswordHostPort;
- (struct _NSRange)_web_rangeOfURLHost;
- (BOOL)_web_looksLikeAbsoluteURL;
- (BOOL)_web_isFileURL;
- (id)_web_URLFragment;
- (id)_web_stringByCollapsingNonPrintingCharacters;
- (id)_web_filenameByFixingIllegalCharacters;
- (unsigned int)_web_extractFourCharCode;
@end

@interface NSString (NSScriptingComparisonMethods)
- (BOOL)scriptingIsEqualTo:(id)arg1;
- (BOOL)scriptingIsLessThanOrEqualTo:(id)arg1;
- (BOOL)scriptingIsLessThan:(id)arg1;
- (BOOL)scriptingIsGreaterThanOrEqualTo:(id)arg1;
- (BOOL)scriptingIsGreaterThan:(id)arg1;
- (BOOL)scriptingBeginsWith:(id)arg1;
- (BOOL)scriptingEndsWith:(id)arg1;
- (BOOL)scriptingContains:(id)arg1;
@end

@interface NSObject (NSThreadPerformAdditions)
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 modes:(id)arg5;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 modes:(id)arg4;
- (void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3;
- (void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4;
- (void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2;
@end

@interface NSTimeZone (NSTimeZone)
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
@end

@interface NSTimer (NSTimer)
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)timerWithTimeInterval:(double)arg1 invocation:(id)arg2 repeats:(BOOL)arg3;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 invocation:(id)arg2 repeats:(BOOL)arg3;
+ (id)timerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5;
+ (id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5;
+ (id)timerWithFireDate:(id)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4;
- (id)initWithFireDate:(id)arg1 interval:(double)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 repeats:(BOOL)arg6;
- (void)invalidate;
- (BOOL)isValid;
- (double)timeInterval;
- (void)fire;
- (id)fireDate;
- (void)setFireDate:(id)arg1;
- (id)userInfo;
- (struct __CFString *)copyDebugDescription;
- (long long)order;
- (double)interval;
- (double)fireTime;
- (void)setFireTime:(double)arg1;
- (CDStruct_e097db04)context;
- (double)_cffireTime;
@end

@interface NSURL (NSKeyValueObservingCustomization)
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
@end

@interface NSURL (NSURLPathUtilities)
+ (id)fileURLWithPathComponents:(id)arg1;
- (id)pathComponents;
- (id)lastPathComponent;
- (id)pathExtension;
- (id)URLByAppendingPathComponent:(id)arg1 isDirectory:(BOOL)arg2;
- (id)URLByAppendingPathComponent:(id)arg1;
- (id)URLByDeletingLastPathComponent;
- (id)URLByAppendingPathExtension:(id)arg1;
- (id)URLByDeletingPathExtension;
- (id)URLByStandardizingPath;
- (id)URLByResolvingSymlinksInPath;
@end

@interface NSString (NSURLUtilities)
- (id)stringByAddingPercentEscapesUsingEncoding:(unsigned long long)arg1;
- (id)stringByReplacingPercentEscapesUsingEncoding:(unsigned long long)arg1;
@end

@interface NSString (NSURLPathUtilities)
- (id)standardizedURLPath;
- (id)stringByRemovingPercentEscapes;
- (id)stringByAddingPercentEscapes;
- (id)urlPathRelativeToPath:(id)arg1;
@end

@interface NSURL (NSURL)
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)URLWithString:(id)arg1;
+ (id)URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)fileURLWithPath:(id)arg1;
+ (id)fileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
- (id)retain;
- (oneway void)release;
- (unsigned long long)retainCount;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (unsigned long long)_cfTypeID;
- (id)_initWithMinimalBookmarkData:(id)arg1;
- (id)initWithString:(id)arg1 relativeToURL:(id)arg2;
- (struct __CFURL *)_cfurl;
- (struct __CFDictionary *)_clientsCreatingIfNecessary:(BOOL)arg1;
- (void)_freeClients;
- (void)dealloc;
- (void)finalize;
- (id)relativeString;
- (id)baseURL;
- (id)scheme;
- (id)_relativeURLPath;
- (BOOL)_isAbsolute;
- (id)resourceSpecifier;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 path:(id)arg3;
- (id)initFileURLWithPath:(id)arg1;
- (id)initFileURLWithPath:(id)arg1 isDirectory:(BOOL)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)absoluteString;
- (id)absoluteURL;
- (id)standardizedURL;
- (id)host;
- (id)port;
- (id)user;
- (id)password;
- (id)relativePath;
- (id)path;
- (id)parameterString;
- (id)query;
- (id)fragment;
- (BOOL)isFileURL;
- (id)resourceDataUsingCache:(BOOL)arg1;
- (void)loadResourceDataNotifyingClient:(id)arg1 usingCache:(BOOL)arg2;
- (id)propertyForKey:(id)arg1;
- (BOOL)setResourceData:(id)arg1;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)URLHandleUsingCache:(BOOL)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)URLHandle:(id)arg1 resourceDataDidBecomeAvailable:(id)arg2;
- (void)URLHandleResourceDidBeginLoading:(id)arg1;
- (void)URLHandleResourceDidFinishLoading:(id)arg1;
- (void)URLHandleResourceDidCancelLoading:(id)arg1;
- (void)URLHandle:(id)arg1 resourceDidFailLoadingWithReason:(id)arg2;
@end

@interface NSURLAuthenticationChallenge (NSURLAuthenticationChallengeInternal)
+ (id)_authenticationChallengeForCFAuthChallenge:(struct _CFURLAuthChallenge *)arg1 sender:(id)arg2;
- (struct _CFURLAuthChallenge *)_createCFAuthChallenge;
@end

@interface NSURLConnection (NSURLConnectionReallyInternal)
+ (void)_resourceLoadLoop:(id)arg1;
- (void)releaseDelegate;
- (struct _CFURLRequest *)sendWillSendRequest:(struct _CFURLRequest *)arg1 redirectResponse:(struct _CFURLResponse *)arg2;
- (void)sendDidReceiveResponse:(struct _CFURLResponse *)arg1;
- (void)sendDidReceiveData:(struct __CFData *)arg1 originalLength:(long long)arg2;
- (void)sendDidFinishLoading;
- (void)sendDidFail:(struct __CFError *)arg1;
- (struct _CFCachedURLResponse *)sendWillCacheResponse:(struct _CFCachedURLResponse *)arg1;
- (void)sendDidReceiveChallenge:(struct _CFURLAuthChallenge *)arg1;
- (void)sendDidSendBodyData:(long long)arg1 totalBytesWritten:(long long)arg2 totalBytesExpectedToWrite:(long long)arg3;
- (unsigned char)sendConnectionShouldUseCredentialStorage;
- (struct __CFReadStream *)sendNeedNewBodyStream:(struct _CFURLRequest *)arg1;
- (_Bool)sendCanAuthenticateAgainstProtectionSpace:(struct _CFURLProtectionSpace *)arg1;
@end

@interface NSURLConnection (NSURLConnectionPrivate)
+ (unsigned long long)_sweeperInterval;
+ (void)_setSweeperInterval:(unsigned long long)arg1;
+ (struct __CFRunLoop *)resourceLoaderRunLoop;
+ (void)_setLoaderThreadPriority:(int)arg1;
+ (void)_setMIMETypesWithNoSizeLimit:(id)arg1;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 usesCache:(BOOL)arg3 maxContentLength:(long long)arg4 startImmediately:(BOOL)arg5 connectionProperties:(id)arg6;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 usesCache:(BOOL)arg3 maxContentLength:(long long)arg4;
- (id)_initWithRequest:(id)arg1 delegate:(id)arg2 usesCache:(BOOL)arg3;
- (struct _CFURLConnection *)_CFURLConnection;
- (void)_setShouldSkipCancelOnRelease:(_Bool)arg1;
- (id)_delegate;
- (BOOL)_connectionActive;
- (void)setDefersCallbacks:(BOOL)arg1;
- (BOOL)defersCallbacks;
- (void)_dontCountTowardsOriginLoadLimit;
- (void)_suspendLoading;
- (void)_resumeLoading;
@end

@interface NSURLConnection (NSURLAuthenticationChallengeSender) <NSURLAuthenticationChallengeSender>
- (void)cleanupChallenges;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
@end

@interface NSURLCredential (NSURLCredential_Private)
- (id)initWithUser:(id)arg1 password:(id)arg2 initialAccess:(struct OpaqueSecAccessRef *)arg3;
@end

@interface NSURLCredentialStorage (NSURLCredentialStorageInternal)
- (id)_internalInit;
@end

@interface NSURLDownload (NSURLAuthenticationChallengeSender) <NSURLAuthenticationChallengeSender>
- (void)cleanupChallenges;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
@end

@interface NSURLProtocol (NSURLProtocolPrivate)
+ (id)_registeredClasses;
+ (Class)_protocolClassForRequest:(id)arg1 allowCF:(BOOL)arg2;
+ (Class)_protocolClassForRequest:(id)arg1;
+ (id)_makeRequestCanonicalByMakingRequestURLCanonical:(id)arg1;
+ (void)_removePropertyForKey:(id)arg1 inRequest:(id)arg2;
- (void)_releaseProtocolClientReference;
- (void)_suspendLoading;
- (void)_resumeLoading;
@end

@interface NSMutableURLRequest (NSMutableHTTPURLRequest)
- (void)setHTTPMethod:(id)arg1;
- (void)setAllHTTPHeaderFields:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)addValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)setHTTPBody:(id)arg1;
- (void)setHTTPBodyStream:(id)arg1;
- (void)setHTTPContentType:(id)arg1;
- (void)setHTTPExtraCookies:(id)arg1;
- (void)setHTTPReferrer:(id)arg1;
- (void)setHTTPUserAgent:(id)arg1;
- (void)setHTTPShouldHandleCookies:(BOOL)arg1;
- (void)setContentDispositionEncodingFallbackArray:(id)arg1;
@end

@interface NSURLRequest (NSHTTPURLRequest)
+ (BOOL)allowsAnyHTTPSCertificateForHost:(id)arg1;
+ (void)setAllowsAnyHTTPSCertificate:(BOOL)arg1 forHost:(id)arg2;
+ (id)allowsSpecificHTTPSCertificateForHost:(id)arg1;
+ (void)setAllowsSpecificHTTPSCertificate:(id)arg1 forHost:(id)arg2;
- (id)HTTPMethod;
- (id)allHTTPHeaderFields;
- (id)valueForHTTPHeaderField:(id)arg1;
- (id)HTTPBody;
- (id)HTTPBodyStream;
- (id)HTTPContentType;
- (id)HTTPExtraCookies;
- (id)HTTPReferrer;
- (id)HTTPUserAgent;
- (BOOL)HTTPShouldHandleCookies;
- (id)contentDispositionEncodingFallbackArray;
@end

@interface NSURLResponse (NSURLResponsePrivate)
- (id)_contentDispositionBytes;
- (void)_setExpectedContentLength:(long long)arg1;
- (void)_setMIMEType:(id)arg1;
- (id)_createdDate;
- (id)_lastModifiedDate;
- (BOOL)_mustRevalidate;
- (double)_freshnessLifetime;
- (double)_calculatedExpiration;
- (void)dealloc;
- (id)_peerCertificateChain;
@end

@interface NSURL (NSURLExtrasInternal)
+ (id)_URLWithDataAsString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_URLWithData:(id)arg1 relativeToURL:(id)arg2;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (id)_URLByEscapingSpacesAndControlChars;
- (id)_hostString;
@end

@interface NSURL (NSURLExtras)
+ (id)_web_URLWithString:(id)arg1 relativeToURL:(id)arg2;
+ (id)_web_URLWithComponents:(CDStruct_4f05a0fa)arg1;
- (CDStruct_4f05a0fa)_web_URLComponents;
- (id)_web_scriptIfJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)arg1;
- (BOOL)_web_isJavaScriptURL;
@end

@interface NSUndoManager (NSPrivate)
+ (void)_setEndsTopLevelGroupingsAfterRunLoopIterations:(BOOL)arg1;
+ (void)_endTopLevelGroupings;
- (id)_undoStack;
- (BOOL)_shouldCoalesceTypingForText:(id)arg1:(id)arg2;
- (void)_processEndOfEventNotification:(id)arg1;
- (void)_commitUndoGrouping;
- (void)_rollbackUndoGrouping;
@end

@interface NSString (NSUnpublishedEOF)
- (id)stringMarkingUpcaseTransitionsWithDelimiter2:(id)arg1;
@end

@interface NSObject (NSUnpublishedEOF)
+ (void)flushAllKeyBindings;
+ (void)flushClassKeyBindings;
- (void)_setObject:(id)arg1 forBothSidesOfRelationshipWithKey:(id)arg2;
- (void)addObject:(id)arg1 toBothSidesOfRelationshipWithKey:(id)arg2;
- (void)addObject:(id)arg1 toPropertyWithKey:(id)arg2;
- (id)allPropertyKeys;
- (id)classDescriptionForDestinationKey:(id)arg1;
- (void)clearProperties;
- (id)entityName;
- (void)flushKeyBindings;
- (BOOL)isToManyKey:(id)arg1;
- (BOOL)ownsDestinationObjectsForRelationshipKey:(id)arg1;
- (void)removeObject:(id)arg1 fromBothSidesOfRelationshipWithKey:(id)arg2;
- (void)removeObject:(id)arg1 fromPropertyWithKey:(id)arg2;
- (void)takeStoredValuesFromDictionary:(id)arg1;
- (id)validateValue:(id *)arg1 forKey:(id)arg2;
- (id)validateTakeValue:(id)arg1 forKeyPath:(id)arg2;
@end

@interface NSException (NSUnpublishedEOF)
+ (id)aggregateExceptionWithExceptions:(id)arg1;
+ (id)validationExceptionWithFormat:(id)arg1;
- (id)exceptionAddingEntriesToUserInfo:(id)arg1;
- (id)exceptionRememberingObject:(id)arg1 key:(id)arg2;
@end

@interface NSClassDescription (NSUnpublishedEOF)
+ (id)classDelegate;
+ (void)setClassDelegate:(id)arg1;
- (id)allAttributeKeys;
- (id)allToManyRelationshipKeys;
- (id)allToOneRelationshipKeys;
- (id)classDescriptionForDestinationKey:(id)arg1;
- (id)classDescriptionForKeyPath:(id)arg1;
- (id)classPropertyKeys;
- (id)displayNameForKey:(id)arg1;
- (id)entityName;
- (BOOL)ownsDestinationObjectsForRelationshipKey:(id)arg1;
- (id)validateValue:(id *)arg1 forKey:(id)arg2;
@end

@interface NSUserDefaults (NSUserDefaults)
+ (void)setStandardUserDefaults:(id)arg1;
+ (void)resetStandardUserDefaults;
+ (id)standardUserDefaults;
- (void)_adjustTimerForAutosync;
- (void)_adjustTimer:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1 inDomain:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
- (void)removeObjectForKey:(id)arg1 inDomain:(id)arg2;
- (id)stringForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)stringArrayForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (long long)longForKey:(id)arg1;
- (float)floatForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (BOOL)boolForKey:(id)arg1;
- (id)URLForKey:(id)arg1;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setLong:(long long)arg1 forKey:(id)arg2;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)setURL:(id)arg1 forKey:(id)arg2;
- (id)dictionaryRepresentation;
- (id)searchList;
- (void)setSearchList:(id)arg1;
- (void)addSuiteNamed:(id)arg1;
- (void)removeSuiteNamed:(id)arg1;
- (void)registerDefaults:(id)arg1;
- (id)initWithUser:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)volatileDomainNames;
- (id)volatileDomainForName:(id)arg1;
- (void)setVolatileDomain:(id)arg1 forName:(id)arg2;
- (void)removeVolatileDomainForName:(id)arg1;
- (id)persistentDomainNames;
- (id)persistentDomainForName:(id)arg1;
- (void)setPersistentDomain:(id)arg1 forName:(id)arg2;
- (void)removePersistentDomainForName:(id)arg1;
- (BOOL)synchronize;
- (BOOL)objectIsForcedForKey:(id)arg1;
- (BOOL)objectIsForcedForKey:(id)arg1 inDomain:(id)arg2;
@end

@interface NSString (NSUserDefaults_NSURLExtras)
- (id)_web_HTTPStyleLanguageCode;
- (id)_web_HTTPStyleLanguageCodeWithoutRegion;
@end

@interface NSUserDefaults (NSUserDefaults_NSURLExtras)
+ (void)_ensureAndLockPreferredLanguageLock;
+ (void)_web_defaultsDidChange;
+ (void)_web_addDefaultsChangeObserver;
+ (id)_web_preferredLanguageCode;
@end

@interface NSWhoseSpecifier (NSInternal)
+ (BOOL)_canCreateCollapsedSpecifierFromAbsolutePositionRecord:(id)arg1;
+ (BOOL)_canCreateCollapsedSpecifierFromRangeRecord:(id)arg1;
- (BOOL)_shouldIgnoreInvalidIndexError;
@end

@interface NSNull (NSScriptingInternalExisting)
- (BOOL)_scriptingExists;
@end

@interface NSArray (NSScriptingInternalExisting)
- (BOOL)_scriptingExists;
@end

@interface NSObject (NSScriptingInternalExisting)
- (BOOL)_scriptingExists;
@end

@interface NSTextCheckingResult (NSTextCheckingResultCreation)
+ (id)orthographyCheckingResultWithRange:(struct _NSRange)arg1 orthography:(id)arg2;
+ (id)spellCheckingResultWithRange:(struct _NSRange)arg1;
+ (id)grammarCheckingResultWithRange:(struct _NSRange)arg1 details:(id)arg2;
+ (id)dateCheckingResultWithRange:(struct _NSRange)arg1 date:(id)arg2;
+ (id)dateCheckingResultWithRange:(struct _NSRange)arg1 date:(id)arg2 timeZone:(id)arg3 duration:(double)arg4;
+ (id)addressCheckingResultWithRange:(struct _NSRange)arg1 components:(id)arg2;
+ (id)linkCheckingResultWithRange:(struct _NSRange)arg1 URL:(id)arg2;
+ (id)quoteCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)dashCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)replacementCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
+ (id)correctionCheckingResultWithRange:(struct _NSRange)arg1 replacementString:(id)arg2;
@end

